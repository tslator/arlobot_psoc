ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccDx4ryC.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"EZI2C_EZI2C_INT.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.EZI2C_EZI2C_STRETCH_ISR,"ax",%progbits
  18              		.align	2
  19              		.global	EZI2C_EZI2C_STRETCH_ISR
  20              		.code	16
  21              		.thumb_func
  22              		.type	EZI2C_EZI2C_STRETCH_ISR, %function
  23              	EZI2C_EZI2C_STRETCH_ISR:
  24              	.LFB1:
  25              		.file 1 ".\\Generated_Source\\PSoC4\\EZI2C_EZI2C_INT.c"
   1:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** * File Name: EZI2C_EZI2C_INT.c
   3:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** * Version 3.10
   4:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** *
   5:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** * Description:
   6:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** *  This file provides the source code to the Interrupt Service Routine for
   7:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** *  the SCB Component in EZI2C mode.
   8:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** *
   9:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** * Note:
  10:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** *
  11:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** ********************************************************************************
  12:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** * Copyright 2013-2015, Cypress Semiconductor Corporation.  All rights reserved.
  13:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** * the software package with which this file was provided.
  16:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** *******************************************************************************/
  17:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
  18:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** #include "EZI2C_PVT.h"
  19:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** #include "EZI2C_EZI2C_PVT.h"
  20:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** #include "cyapicallbacks.h"
  21:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
  22:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** #if(EZI2C_EZI2C_SCL_STRETCH_ENABLE_CONST)
  23:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****     /*******************************************************************************
  24:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****     * Function Name: EZI2C_EZI2C_STRETCH_ISR
  25:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****     ********************************************************************************
  26:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****     *
  27:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****     * Summary:
  28:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****     *  Handles the Interrupt Service Routine for the SCB EZI2C mode. The clock stretching is
  29:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****     *  used during operation.
  30:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****     *
  31:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****     * Parameters:
  32:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****     *  None
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccDx4ryC.s 			page 2


  33:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****     *
  34:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****     * Return:
  35:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****     *  None
  36:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****     *
  37:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****     *******************************************************************************/
  38:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****     CY_ISR_PROTO(EZI2C_EZI2C_STRETCH_ISR)
  39:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****     {
  26              		.loc 1 39 0
  27              		.cfi_startproc
  28 0000 70B5     		push	{r4, r5, r6, lr}
  29              		.cfi_def_cfa_offset 16
  30              		.cfi_offset 4, -16
  31              		.cfi_offset 5, -12
  32              		.cfi_offset 6, -8
  33              		.cfi_offset 14, -4
  40:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         static uint16 locBufSize;
  41:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         uint32 locIndex;
  42:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         uint32 locStatus;
  43:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
  44:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         uint32 endTransfer;
  45:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         uint32 fifoIndex;
  46:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         uint32 locByte;
  47:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
  48:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         uint32 locIntrCause;
  49:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         uint32 locIntrSlave;
  50:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         
  51:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****     #ifdef EZI2C_EZI2C_STRETCH_ISR_ENTRY_CALLBACK
  52:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         EZI2C_EZI2C_STRETCH_ISR_EntryCallback();
  53:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****     #endif /* EZI2C_EZI2C_STRETCH_ISR_ENTRY_CALLBACK */
  54:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
  55:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****     #if(EZI2C_SECONDARY_ADDRESS_ENABLE_CONST)
  56:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         /* Variable intended to be used with either buffer */
  57:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         static volatile uint8 * EZI2C_dataBuffer; /* Pointer to data buffer              */
  58:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         static uint16 EZI2C_bufSizeBuf;           /* Size of buffer in bytes             */
  59:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         static uint16 EZI2C_protectBuf;           /* Start index of write protected area */
  60:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
  61:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         static uint8 activeAddress;
  62:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         uint32 ackResponse;
  63:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
  64:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         ackResponse = EZI2C_EZI2C_ACK_RECEIVED_ADDRESS;
  65:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****     #endif /* (EZI2C_SECONDARY_ADDRESS_ENABLE_CONST) */
  66:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
  67:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****     #if !defined (CY_REMOVE_EZI2C_CUSTOM_INTR_HANDLER)
  68:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         if(NULL != EZI2C_customIntrHandler)
  34              		.loc 1 68 0
  35 0002 A94B     		ldr	r3, .L38
  36 0004 1B68     		ldr	r3, [r3]
  37 0006 002B     		cmp	r3, #0
  38 0008 00D0     		beq	.L2
  69:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         {
  70:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****             EZI2C_customIntrHandler();
  39              		.loc 1 70 0
  40 000a 9847     		blx	r3
  41              	.LVL0:
  42              	.L2:
  71:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         }
  72:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****     #else
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccDx4ryC.s 			page 3


  73:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         CY_EZI2C_CUSTOM_INTR_HANDLER();
  74:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****     #endif /* !defined (CY_REMOVE_EZI2C_CUSTOM_INTR_HANDLER) */
  75:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
  76:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         /* Make local copy of global variable */
  77:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         locIndex = EZI2C_EZI2C_GET_INDEX(activeAddress);
  43              		.loc 1 77 0
  44 000c A74B     		ldr	r3, .L38+4
  45 000e 1C88     		ldrh	r4, [r3]
  46              	.LVL1:
  78:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
  79:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         /* Get interrupt sources */
  80:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         locIntrSlave = EZI2C_GetSlaveInterruptSource();
  47              		.loc 1 80 0
  48 0010 A74B     		ldr	r3, .L38+8
  49 0012 1D68     		ldr	r5, [r3]
  50              	.LVL2:
  81:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         locIntrCause = EZI2C_GetInterruptCause();
  51              		.loc 1 81 0
  52 0014 A74B     		ldr	r3, .L38+12
  53 0016 1E68     		ldr	r6, [r3]
  54              	.LVL3:
  82:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
  83:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         /* INTR_SLAVE.I2C_ARB_LOST and INTR_SLAVE_I2C.BUS_ERROR */
  84:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         /* Handles errors on the bus. There are cases when both bits are set.
  85:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         * The error recovery is common: re-enable the scb IP. The content of the RX FIFO is lost.
  86:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         */
  87:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         if(0u != (locIntrSlave & (EZI2C_INTR_SLAVE_I2C_ARB_LOST |
  55              		.loc 1 87 0
  56 0018 0223     		mov	r3, #2
  57 001a FF33     		add	r3, r3, #255
  58 001c 1D42     		tst	r5, r3
  59 001e 35D0     		beq	.L3
  88:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                   EZI2C_INTR_SLAVE_I2C_BUS_ERROR)))
  89:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         {
  90:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****             EZI2C_CTRL_REG &= (uint32) ~EZI2C_CTRL_ENABLED; /* Disable SCB block */
  60              		.loc 1 90 0
  61 0020 A54A     		ldr	r2, .L38+16
  62 0022 1368     		ldr	r3, [r2]
  63 0024 5B00     		lsl	r3, r3, #1
  64 0026 5B08     		lsr	r3, r3, #1
  65 0028 1360     		str	r3, [r2]
  91:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
  92:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         #if(EZI2C_CY_SCBIP_V0)
  93:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****             if(0u != ((uint8) EZI2C_EZI2C_STATUS_BUSY & EZI2C_curStatus))
  94:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         #endif /* (EZI2C_CY_SCBIP_V0) */
  95:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****             {
  96:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 EZI2C_curStatus &= (uint8) ~EZI2C_EZI2C_STATUS_BUSY;
  66              		.loc 1 96 0
  67 002a A44B     		ldr	r3, .L38+20
  68 002c 1A78     		ldrb	r2, [r3]
  69 002e 2021     		mov	r1, #32
  70 0030 8A43     		bic	r2, r1
  71 0032 1A70     		strb	r2, [r3]
  97:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 EZI2C_curStatus |= (uint8)  EZI2C_EZI2C_STATUS_ERR;
  72              		.loc 1 97 0
  73 0034 1978     		ldrb	r1, [r3]
  74 0036 1022     		mov	r2, #16
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccDx4ryC.s 			page 4


  75 0038 0A43     		orr	r2, r1
  76 003a 1A70     		strb	r2, [r3]
  98:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
  99:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 /* INTR_TX_EMPTY is enabled in the address phase to receive data */
 100:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 if(0u == (EZI2C_GetTxInterruptMode() & EZI2C_INTR_TX_EMPTY))
  77              		.loc 1 100 0
  78 003c A04B     		ldr	r3, .L38+24
  79 003e 1B68     		ldr	r3, [r3]
  80 0040 DB06     		lsl	r3, r3, #27
  81 0042 0BD4     		bmi	.L4
 101:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 {
 102:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     /* Write complete */
 103:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     if(EZI2C_indexBuf1 != EZI2C_offsetBuf1)
  82              		.loc 1 103 0
  83 0044 9F4B     		ldr	r3, .L38+28
  84 0046 1A78     		ldrb	r2, [r3]
  85 0048 984B     		ldr	r3, .L38+4
  86 004a 1B88     		ldrh	r3, [r3]
  87 004c 9A42     		cmp	r2, r3
  88 004e 0AD0     		beq	.L5
 104:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     {
 105:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         EZI2C_curStatus |= (uint8) EZI2C_INTR_SLAVE_I2C_WRITE_STOP;
  89              		.loc 1 105 0
  90 0050 9A4A     		ldr	r2, .L38+20
  91 0052 1178     		ldrb	r1, [r2]
  92 0054 0823     		mov	r3, #8
  93 0056 0B43     		orr	r3, r1
  94 0058 1370     		strb	r3, [r2]
  95 005a 04E0     		b	.L5
  96              	.L4:
 106:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     }
 107:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 }
 108:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 else
 109:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 {
 110:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     /* Read complete */
 111:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     EZI2C_curStatus |= (uint8) EZI2C_INTR_SLAVE_I2C_NACK;
  97              		.loc 1 111 0
  98 005c 974A     		ldr	r2, .L38+20
  99 005e 1178     		ldrb	r1, [r2]
 100 0060 0223     		mov	r3, #2
 101 0062 0B43     		orr	r3, r1
 102 0064 1370     		strb	r3, [r2]
 103              	.L5:
 112:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 }
 113:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****             }
 114:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 115:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****             EZI2C_DISABLE_SLAVE_AUTO_DATA;
 104              		.loc 1 115 0
 105 0066 984A     		ldr	r2, .L38+32
 106 0068 1168     		ldr	r1, [r2]
 107 006a 984B     		ldr	r3, .L38+36
 108 006c 0B40     		and	r3, r1
 109 006e 1360     		str	r3, [r2]
 116:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 117:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****             /* Disable TX and RX interrupt sources */
 118:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****             EZI2C_SetRxInterruptMode(EZI2C_NO_INTR_SOURCES);
 110              		.loc 1 118 0
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccDx4ryC.s 			page 5


 111 0070 0023     		mov	r3, #0
 112 0072 974A     		ldr	r2, .L38+40
 113 0074 1360     		str	r3, [r2]
 119:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****             EZI2C_SetTxInterruptMode(EZI2C_NO_INTR_SOURCES);
 114              		.loc 1 119 0
 115 0076 924A     		ldr	r2, .L38+24
 116 0078 1360     		str	r3, [r2]
 120:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 121:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         #if(EZI2C_CY_SCBIP_V0)
 122:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****             /* Clear interrupt sources as they are not automatically cleared after SCB is disabled 
 123:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****             EZI2C_ClearRxInterruptSource(EZI2C_INTR_RX_ALL);
 124:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****             EZI2C_ClearSlaveInterruptSource(EZI2C_INTR_SLAVE_ALL);
 125:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         #endif /* (EZI2C_CY_SCBIP_V0) */
 126:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 127:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****             EZI2C_fsmState = EZI2C_EZI2C_FSM_IDLE;
 117              		.loc 1 127 0
 118 007a 964A     		ldr	r2, .L38+44
 119 007c 1370     		strb	r3, [r2]
 128:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 129:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****             EZI2C_CTRL_REG |= (uint32) EZI2C_CTRL_ENABLED;  /* Enable SCB block */
 120              		.loc 1 129 0
 121 007e 8E4A     		ldr	r2, .L38+16
 122 0080 1368     		ldr	r3, [r2]
 123 0082 8021     		mov	r1, #128
 124 0084 0906     		lsl	r1, r1, #24
 125 0086 0B43     		orr	r3, r1
 126 0088 1360     		str	r3, [r2]
 127 008a 09E1     		b	.L6
 128              	.L3:
 130:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         }
 131:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         else
 132:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         {
 133:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****             /* INTR_I2C_EC_WAKE_UP */
 134:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****             /* Wakes up device from deep sleep */
 135:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****             if(0u != (locIntrCause & EZI2C_INTR_CAUSE_I2C_EC))
 129              		.loc 1 135 0
 130 008c F306     		lsl	r3, r6, #27
 131 008e 02D5     		bpl	.L7
 136:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****             {
 137:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 /* Disables wakeup interrupt source but does not clear it. It is cleared in INTR_SL
 138:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 EZI2C_SetI2CExtClkInterruptMode(EZI2C_NO_INTR_SOURCES);
 132              		.loc 1 138 0
 133 0090 0022     		mov	r2, #0
 134 0092 914B     		ldr	r3, .L38+48
 135 0094 1A60     		str	r2, [r3]
 136              	.L7:
 139:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****             }
 140:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 141:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****             if(0u != (locIntrCause & (EZI2C_INTR_CAUSE_RX | EZI2C_INTR_CAUSE_SLAVE)))
 137              		.loc 1 141 0
 138 0096 0A23     		mov	r3, #10
 139 0098 3342     		tst	r3, r6
 140 009a 00D1     		bne	.LCB117
 141 009c 92E0     		b	.L8	@long jump
 142              	.LCB117:
 142:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****             {
 143:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 /* INTR_RX.NOT_EMPTY */
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccDx4ryC.s 			page 6


 144:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 /* Receives data byte-by-byte. Does not use RX FIFO capabilities */
 145:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 if (0u != (EZI2C_GetRxInterruptSourceMasked() & EZI2C_INTR_RX_NOT_EMPTY))
 143              		.loc 1 145 0
 144 009e 8F4B     		ldr	r3, .L38+52
 145 00a0 1B68     		ldr	r3, [r3]
 146 00a2 5B07     		lsl	r3, r3, #29
 147 00a4 58D5     		bpl	.L9
 146:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 {
 147:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 #if(EZI2C_SECONDARY_ADDRESS_ENABLE_CONST)
 148:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     /* If I2C_STOP service is delayed to I2C_ADDR_MATCH the address byte is in the 
 149:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     * RX_NOT_EMPTY is enabled. The address byte has to stay into RX FIFO therefore
 150:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     * RX.NOT_EMPTY service has to be skipped. The address byte has to be read by I2
 151:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     */
 152:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     if (0u == (locIntrCause & EZI2C_INTR_CAUSE_SLAVE))
 153:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 #endif /* (EZI2C_SECONDARY_ADDRESS_ENABLE_CONST) */
 154:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     {
 155:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         locByte = EZI2C_RX_FIFO_RD_REG;
 148              		.loc 1 155 0
 149 00a6 8E4B     		ldr	r3, .L38+56
 150 00a8 1A68     		ldr	r2, [r3]
 151              	.LVL4:
 156:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 157:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         switch(EZI2C_fsmState)
 152              		.loc 1 157 0
 153 00aa 8A4B     		ldr	r3, .L38+44
 154 00ac 1B78     		ldrb	r3, [r3]
 155 00ae 002B     		cmp	r3, #0
 156 00b0 17D0     		beq	.L11
 157 00b2 012B     		cmp	r3, #1
 158 00b4 49D1     		bne	.L37
 158:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         {
 159:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         case EZI2C_EZI2C_FSM_BYTE_WRITE:
 160:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             if(0u != locBufSize)
 159              		.loc 1 160 0
 160 00b6 8B4B     		ldr	r3, .L38+60
 161 00b8 1B88     		ldrh	r3, [r3]
 162 00ba 002B     		cmp	r3, #0
 163 00bc 0DD0     		beq	.L13
 161:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             {
 162:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 /* Store data byte and ACK */
 163:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 EZI2C_I2C_SLAVE_GENERATE_ACK;
 164              		.loc 1 163 0
 165 00be 0121     		mov	r1, #1
 166 00c0 894B     		ldr	r3, .L38+64
 167 00c2 1960     		str	r1, [r3]
 164:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 165:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 EZI2C_dataBuffer1[locIndex] = (uint8) locByte;
 168              		.loc 1 165 0
 169 00c4 894B     		ldr	r3, .L38+68
 170 00c6 1B68     		ldr	r3, [r3]
 171 00c8 1B19     		add	r3, r3, r4
 172 00ca D2B2     		uxtb	r2, r2
 173              	.LVL5:
 174 00cc 1A70     		strb	r2, [r3]
 166:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 locIndex++;
 175              		.loc 1 166 0
 176 00ce 0134     		add	r4, r4, #1
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccDx4ryC.s 			page 7


 177              	.LVL6:
 167:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 locBufSize--;
 178              		.loc 1 167 0
 179 00d0 844A     		ldr	r2, .L38+60
 180 00d2 1388     		ldrh	r3, [r2]
 181 00d4 013B     		sub	r3, r3, #1
 182 00d6 1380     		strh	r3, [r2]
 183 00d8 3AE0     		b	.L14
 184              	.LVL7:
 185              	.L13:
 168:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             }
 169:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             else
 170:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             {
 171:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 /* Discard data byte and NACK */
 172:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 EZI2C_I2C_SLAVE_GENERATE_NACK;
 186              		.loc 1 172 0
 187 00da 0222     		mov	r2, #2
 188              	.LVL8:
 189 00dc 824B     		ldr	r3, .L38+64
 190 00de 1A60     		str	r2, [r3]
 191 00e0 36E0     		b	.L14
 192              	.LVL9:
 193              	.L11:
 173:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             }
 174:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             break;
 175:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 176:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     #if(EZI2C_SUB_ADDRESS_SIZE16_CONST)
 177:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         case EZI2C_EZI2C_FSM_OFFSET_HI8:
 178:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 179:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             EZI2C_I2C_SLAVE_GENERATE_ACK;
 180:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 181:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             /* Store offset most significant byre */
 182:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             locBufSize = (uint16) ((uint8) locByte);
 183:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 184:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             EZI2C_fsmState = EZI2C_EZI2C_FSM_OFFSET_LO8;
 185:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 186:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             break;
 187:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     #endif /* (EZI2C_SUB_ADDRESS_SIZE16_CONST) */
 188:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 189:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         case EZI2C_EZI2C_FSM_OFFSET_LO8:
 190:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 191:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             #if (EZI2C_SUB_ADDRESS_SIZE16)
 192:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             {
 193:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 /* Collect 2 bytes offset */
 194:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 locByte = ((uint32) ((uint32) locBufSize << 8u)) | locByte;
 195:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             }
 196:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             #endif
 197:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 198:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             /* Check offset against buffer size */
 199:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             if(locByte < (uint32) EZI2C_bufSizeBuf1)
 194              		.loc 1 199 0
 195 00e2 834B     		ldr	r3, .L38+72
 196 00e4 1B88     		ldrh	r3, [r3]
 197 00e6 9342     		cmp	r3, r2
 198 00e8 2BD9     		bls	.L15
 200:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             {
 201:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 EZI2C_I2C_SLAVE_GENERATE_ACK;
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccDx4ryC.s 			page 8


 199              		.loc 1 201 0
 200 00ea 0121     		mov	r1, #1
 201 00ec 7E4B     		ldr	r3, .L38+64
 202 00ee 1960     		str	r1, [r3]
 203              	.LVL10:
 202:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 203:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 /* Update local buffer index with new offset */
 204:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 locIndex = locByte;
 205:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 206:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 /* Get available buffer size to write */
 207:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 locBufSize = (uint16) ((locByte < EZI2C_protectBuf1) ?
 204              		.loc 1 207 0
 205 00f0 804B     		ldr	r3, .L38+76
 206 00f2 1B88     		ldrh	r3, [r3]
 207 00f4 9342     		cmp	r3, r2
 208 00f6 02D9     		bls	.L34
 209              		.loc 1 207 0 is_stmt 0 discriminator 1
 210 00f8 9B1A     		sub	r3, r3, r2
 211 00fa 9BB2     		uxth	r3, r3
 212 00fc 00E0     		b	.L16
 213              	.L34:
 214              		.loc 1 207 0
 215 00fe 0023     		mov	r3, #0
 216              	.L16:
 217              		.loc 1 207 0 discriminator 4
 218 0100 7849     		ldr	r1, .L38+60
 219 0102 0B80     		strh	r3, [r1]
 208:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                                        (EZI2C_protectBuf1 - locByte) : (0u));
 209:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 210:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             #if(EZI2C_CY_SCBIP_V0)
 211:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 212:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 if(locBufSize < EZI2C_EZI2C_FIFO_SIZE)
 213:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 {
 214:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                     /* Set FSM state to receive byte by byte */
 215:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                     EZI2C_fsmState = EZI2C_EZI2C_FSM_BYTE_WRITE;
 216:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 }
 217:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 /* Receive RX FIFO chunks */
 218:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 else if(locBufSize == EZI2C_EZI2C_FIFO_SIZE)
 219:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 {
 220:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                     EZI2C_ENABLE_SLAVE_AUTO_DATA; /* NACK when RX FIFO is full */
 221:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                     EZI2C_SetRxInterruptMode(EZI2C_NO_INTR_SOURCES);
 222:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 }
 223:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 else
 224:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 {
 225:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                     EZI2C_ENABLE_SLAVE_AUTO_DATA_ACK; /* Stretch when RX FIFO is fu
 226:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                     EZI2C_SetRxInterruptMode(EZI2C_INTR_RX_FULL);
 227:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 }
 228:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 229:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             #else
 230:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 231:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 #if(EZI2C_SECONDARY_ADDRESS_ENABLE)
 232:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 {
 233:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                     /* Set FSM state to receive byte by byte.
 234:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                     * The byte by byte receive is always chosen for two addresses. 
 235:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                     */
 236:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                     EZI2C_fsmState = EZI2C_EZI2C_FSM_BYTE_WRITE;
 237:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 }
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccDx4ryC.s 			page 9


 238:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 #else
 239:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 {
 240:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                     if (locBufSize < EZI2C_EZI2C_FIFO_SIZE)
 220              		.loc 1 240 0 is_stmt 1 discriminator 4
 221 0104 072B     		cmp	r3, #7
 222 0106 03D8     		bhi	.L17
 241:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                     {
 242:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                         /* Set FSM state to receive byte by byte */
 243:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                         EZI2C_fsmState = EZI2C_EZI2C_FSM_BYTE_WRITE;
 223              		.loc 1 243 0
 224 0108 0121     		mov	r1, #1
 225 010a 724B     		ldr	r3, .L38+44
 226 010c 1970     		strb	r1, [r3]
 227 010e 14E0     		b	.L18
 228              	.L17:
 244:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                     }
 245:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                     /* Receive RX FIFO chunks */
 246:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                     else if (locBufSize == EZI2C_EZI2C_FIFO_SIZE)
 229              		.loc 1 246 0
 230 0110 082B     		cmp	r3, #8
 231 0112 09D1     		bne	.L19
 247:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                     {
 248:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                         EZI2C_ENABLE_SLAVE_AUTO_DATA; /* NACK when RX FIFO is full 
 232              		.loc 1 248 0
 233 0114 6C49     		ldr	r1, .L38+32
 234 0116 0B68     		ldr	r3, [r1]
 235 0118 A020     		mov	r0, #160
 236 011a 0002     		lsl	r0, r0, #8
 237 011c 0343     		orr	r3, r0
 238 011e 0B60     		str	r3, [r1]
 249:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                         EZI2C_SetRxInterruptMode(EZI2C_NO_INTR_SOURCES);
 239              		.loc 1 249 0
 240 0120 0021     		mov	r1, #0
 241 0122 6B4B     		ldr	r3, .L38+40
 242 0124 1960     		str	r1, [r3]
 243 0126 08E0     		b	.L18
 244              	.L19:
 250:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                     }
 251:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                     else
 252:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                     {
 253:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                         EZI2C_ENABLE_SLAVE_AUTO_DATA_ACK; /* Stretch when RX FIFO i
 245              		.loc 1 253 0
 246 0128 6749     		ldr	r1, .L38+32
 247 012a 0B68     		ldr	r3, [r1]
 248 012c 8020     		mov	r0, #128
 249 012e 8001     		lsl	r0, r0, #6
 250 0130 0343     		orr	r3, r0
 251 0132 0B60     		str	r3, [r1]
 254:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                         EZI2C_SetRxInterruptMode(EZI2C_INTR_RX_FULL);
 252              		.loc 1 254 0
 253 0134 0821     		mov	r1, #8
 254 0136 664B     		ldr	r3, .L38+40
 255 0138 1960     		str	r1, [r3]
 256              	.L18:
 255:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                     }
 256:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 }
 257:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 #endif
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccDx4ryC.s 			page 10


 258:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 259:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             #endif /* (EZI2C_CY_SCBIP_V0) */
 260:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 261:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 /* Store local offset into global variable */
 262:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 EZI2C_EZI2C_SET_OFFSET(activeAddress, locIndex);
 257              		.loc 1 262 0
 258 013a 624B     		ldr	r3, .L38+28
 259 013c 1A70     		strb	r2, [r3]
 204:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 260              		.loc 1 204 0
 261 013e 141C     		mov	r4, r2
 262 0140 06E0     		b	.L14
 263              	.LVL11:
 264              	.L15:
 263:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             }
 264:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             else
 265:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             {
 266:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 /* Discard offset byte and NACK */
 267:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 EZI2C_I2C_SLAVE_GENERATE_NACK;
 265              		.loc 1 267 0
 266 0142 0222     		mov	r2, #2
 267              	.LVL12:
 268 0144 684B     		ldr	r3, .L38+64
 269 0146 1A60     		str	r2, [r3]
 270 0148 02E0     		b	.L14
 271              	.LVL13:
 272              	.L37:
 268:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             }
 269:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             break;
 270:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 271:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         default:
 272:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             CYASSERT(0u != 0u); /* Should never get there */
 273              		.loc 1 272 0 discriminator 1
 274 014a 0020     		mov	r0, #0
 275 014c FFF7FEFF 		bl	CyHalt
 276              	.LVL14:
 277              	.L14:
 273:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             break;
 274:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         }
 275:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 276:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         EZI2C_ClearRxInterruptSource(EZI2C_INTR_RX_NOT_EMPTY);
 278              		.loc 1 276 0
 279 0150 0422     		mov	r2, #4
 280 0152 694B     		ldr	r3, .L38+80
 281 0154 1A60     		str	r2, [r3]
 282 0156 35E0     		b	.L8
 283              	.L9:
 277:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     }
 278:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 }
 279:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 /* INTR_RX.FULL, INTR_SLAVE.I2C_STOP */
 280:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 /* Receive FIFO chunks: auto data ACK is enabled */
 281:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 else if (0u != (EZI2C_I2C_CTRL_REG & EZI2C_I2C_CTRL_S_READY_DATA_ACK))
 284              		.loc 1 281 0
 285 0158 5B4B     		ldr	r3, .L38+32
 286 015a 1B68     		ldr	r3, [r3]
 287 015c 9B04     		lsl	r3, r3, #18
 288 015e 31D5     		bpl	.L8
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccDx4ryC.s 			page 11


 282:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 {
 283:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     /* Slave interrupt (I2C_STOP or I2C_ADDR_MATCH) leads to completion of read.
 284:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     * A completion event has a higher priority than the FIFO full.
 285:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     * Read remaining data from RX FIFO.
 286:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     */
 287:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     if(0u != (locIntrCause & EZI2C_INTR_CAUSE_SLAVE))
 289              		.loc 1 287 0
 290 0160 B307     		lsl	r3, r6, #30
 291 0162 0DD5     		bpl	.L20
 288:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     {
 289:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         /* Read remaining bytes from RX FIFO */
 290:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         fifoIndex = EZI2C_GET_RX_FIFO_ENTRIES;
 292              		.loc 1 290 0
 293 0164 654B     		ldr	r3, .L38+84
 294 0166 1B68     		ldr	r3, [r3]
 295 0168 1F21     		mov	r1, #31
 296 016a 1940     		and	r1, r3
 297              	.LVL15:
 291:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 292:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         #if(EZI2C_SECONDARY_ADDRESS_ENABLE)
 293:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         {
 294:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             /* Update with current address match */
 295:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             if(EZI2C_CHECK_INTR_SLAVE_MASKED(EZI2C_INTR_SLAVE_I2C_ADDR_MATCH))
 296:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             {
 297:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 /* Update RX FIFO entries as address byte is there now */
 298:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 fifoIndex = EZI2C_GET_RX_FIFO_ENTRIES;
 299:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 300:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 /* If SR is valid, RX FIFO is full and address is in SHIFTER:
 301:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 * read 8 entries and leave address in RX FIFO for further processin
 302:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 * If SR is invalid, address is already in RX FIFO: read (entries-1)
 303:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 */
 304:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 fifoIndex -= ((0u != EZI2C_GET_RX_FIFO_SR_VALID) ? (0u) : (1u));
 305:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             }
 306:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         }
 307:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         #endif
 308:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 309:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         EZI2C_DISABLE_SLAVE_AUTO_DATA;
 298              		.loc 1 309 0
 299 016c 564A     		ldr	r2, .L38+32
 300 016e 1068     		ldr	r0, [r2]
 301 0170 564B     		ldr	r3, .L38+36
 302 0172 0340     		and	r3, r0
 303 0174 1360     		str	r3, [r2]
 304              	.LVL16:
 310:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         endTransfer = EZI2C_EZI2C_CONTINUE_TRANSFER;
 305              		.loc 1 310 0
 306 0176 0120     		mov	r0, #1
 307 0178 14E0     		b	.L21
 308              	.LVL17:
 309              	.L35:
 311:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     }
 312:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     else
 313:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     /* INTR_RX_FULL */
 314:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     /* Continue transfer or disable INTR_RX_FULL to catch completion event. */
 315:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     {
 316:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         /* Calculate buffer size available to write data into */
 317:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         locBufSize -= (uint16) EZI2C_EZI2C_FIFO_SIZE;
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccDx4ryC.s 			page 12


 318:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 319:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         if(locBufSize <= EZI2C_EZI2C_FIFO_SIZE)
 320:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         {
 321:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             /* Send NACK when RX FIFO overflow */
 322:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             fifoIndex   = locBufSize;
 323:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             endTransfer = EZI2C_EZI2C_COMPLETE_TRANSFER;
 324:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         }
 325:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         else
 326:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         {
 327:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             /* Continue  transaction */
 328:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             fifoIndex   = EZI2C_EZI2C_FIFO_SIZE;
 310              		.loc 1 328 0
 311 017a 0821     		mov	r1, #8
 329:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             endTransfer = EZI2C_EZI2C_CONTINUE_TRANSFER;
 312              		.loc 1 329 0
 313 017c 0120     		mov	r0, #1
 314 017e 11E0     		b	.L21
 315              	.L20:
 317:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 316              		.loc 1 317 0
 317 0180 584B     		ldr	r3, .L38+60
 318 0182 1988     		ldrh	r1, [r3]
 319 0184 0839     		sub	r1, r1, #8
 320 0186 89B2     		uxth	r1, r1
 321 0188 1980     		strh	r1, [r3]
 319:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         {
 322              		.loc 1 319 0
 323 018a 0829     		cmp	r1, #8
 324 018c F5D8     		bhi	.L35
 325              	.LVL18:
 323:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         }
 326              		.loc 1 323 0
 327 018e 0020     		mov	r0, #0
 328 0190 08E0     		b	.L21
 329              	.LVL19:
 330              	.L23:
 330:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         }
 331:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     }
 332:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 333:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     for(; (0u != fifoIndex); fifoIndex--)
 334:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     {
 335:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         /* Store data in buffer */
 336:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         EZI2C_dataBuffer1[locIndex] = (uint8) EZI2C_RX_FIFO_RD_REG;
 331              		.loc 1 336 0 discriminator 2
 332 0192 564B     		ldr	r3, .L38+68
 333 0194 1B68     		ldr	r3, [r3]
 334 0196 1B19     		add	r3, r3, r4
 335 0198 514A     		ldr	r2, .L38+56
 336 019a 1268     		ldr	r2, [r2]
 337 019c D2B2     		uxtb	r2, r2
 338 019e 1A70     		strb	r2, [r3]
 337:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         locIndex++;
 339              		.loc 1 337 0 discriminator 2
 340 01a0 0134     		add	r4, r4, #1
 341              	.LVL20:
 333:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     {
 342              		.loc 1 333 0 discriminator 2
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccDx4ryC.s 			page 13


 343 01a2 0139     		sub	r1, r1, #1
 344              	.LVL21:
 345              	.L21:
 333:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     {
 346              		.loc 1 333 0 is_stmt 0 discriminator 1
 347 01a4 0029     		cmp	r1, #0
 348 01a6 F4D1     		bne	.L23
 338:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     }
 339:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 340:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     /* Complete transfer sending NACK when RX FIFO overflow */
 341:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     if(EZI2C_EZI2C_COMPLETE_TRANSFER == endTransfer)
 349              		.loc 1 341 0 is_stmt 1
 350 01a8 0028     		cmp	r0, #0
 351 01aa 08D1     		bne	.L24
 342:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     {
 343:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         EZI2C_ENABLE_SLAVE_AUTO_DATA_NACK;
 352              		.loc 1 343 0
 353 01ac 464A     		ldr	r2, .L38+32
 354 01ae 1368     		ldr	r3, [r2]
 355 01b0 8021     		mov	r1, #128
 356              	.LVL22:
 357 01b2 0902     		lsl	r1, r1, #8
 358 01b4 0B43     		orr	r3, r1
 359 01b6 1360     		str	r3, [r2]
 344:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 345:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         /* Disable INTR_RX_FULL during last RX FIFO chunk reception */
 346:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         EZI2C_SetRxInterruptMode(EZI2C_NO_INTR_SOURCES);
 360              		.loc 1 346 0
 361 01b8 0022     		mov	r2, #0
 362 01ba 454B     		ldr	r3, .L38+40
 363 01bc 1A60     		str	r2, [r3]
 364              	.L24:
 347:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     }
 348:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 349:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     EZI2C_ClearRxInterruptSource(EZI2C_INTR_RX_FULL |
 365              		.loc 1 349 0
 366 01be 0C22     		mov	r2, #12
 367 01c0 4D4B     		ldr	r3, .L38+80
 368 01c2 1A60     		str	r2, [r3]
 369              	.LVL23:
 370              	.L8:
 350:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                                             EZI2C_INTR_RX_NOT_EMPTY);
 351:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 }
 352:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 else
 353:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 {
 354:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     /* Exit for slave interrupts which are not active for RX direction:
 355:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     * INTR_SLAVE.I2C_ADDR_MATCH and INTR_SLAVE.I2C_STOP while byte-by-byte receptio
 356:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     */
 357:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 }
 358:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****             }
 359:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 360:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****             if(0u != (locIntrCause & EZI2C_INTR_CAUSE_SLAVE))
 371              		.loc 1 360 0
 372 01c4 B307     		lsl	r3, r6, #30
 373 01c6 4AD5     		bpl	.L25
 361:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****             {
 362:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 /* INTR_SLAVE.I2C_STOP */
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccDx4ryC.s 			page 14


 363:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 /* Catch Stop condition: completion of write or read transfer */
 364:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****             #if(!EZI2C_SECONDARY_ADDRESS_ENABLE_CONST)
 365:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 if(0u != (locIntrSlave & EZI2C_INTR_SLAVE_I2C_STOP))
 374              		.loc 1 365 0
 375 01c8 EB06     		lsl	r3, r5, #27
 376 01ca 15D5     		bpl	.L26
 366:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****             #else
 367:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 /* Prevent triggering when matched address was NACKed */
 368:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 if((0u != (locIntrSlave & EZI2C_INTR_SLAVE_I2C_STOP)) &&
 369:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                    (0u != ((uint8) EZI2C_EZI2C_STATUS_BUSY & EZI2C_curStatus)))
 370:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****             #endif
 371:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 {
 372:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     /* Disable TX and RX interrupt sources */
 373:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     EZI2C_SetRxInterruptMode(EZI2C_NO_INTR_SOURCES);
 377              		.loc 1 373 0
 378 01cc 0023     		mov	r3, #0
 379 01ce 404A     		ldr	r2, .L38+40
 380 01d0 1360     		str	r3, [r2]
 374:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     EZI2C_SetTxInterruptMode(EZI2C_NO_INTR_SOURCES);
 381              		.loc 1 374 0
 382 01d2 3B4A     		ldr	r2, .L38+24
 383 01d4 1360     		str	r3, [r2]
 384              	.LVL24:
 375:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 376:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     /* Set read completion mask */
 377:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     locStatus = EZI2C_INTR_SLAVE_I2C_NACK;
 378:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 379:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     /* Check if buffer content was modified: the address phase resets the locIndex 
 380:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     if(locIndex != EZI2C_EZI2C_GET_OFFSET(activeAddress))
 385              		.loc 1 380 0
 386 01d6 3B4B     		ldr	r3, .L38+28
 387 01d8 1B78     		ldrb	r3, [r3]
 388 01da A342     		cmp	r3, r4
 389 01dc 01D1     		bne	.L36
 377:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 390              		.loc 1 377 0
 391 01de 0223     		mov	r3, #2
 392 01e0 00E0     		b	.L27
 393              	.L36:
 381:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     {
 382:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         locStatus |= EZI2C_INTR_SLAVE_I2C_WRITE_STOP;
 394              		.loc 1 382 0
 395 01e2 0A23     		mov	r3, #10
 396              	.L27:
 397              	.LVL25:
 383:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     }
 384:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 385:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     /* Complete read or write transaction */
 386:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     locStatus &= locIntrSlave;
 398              		.loc 1 386 0
 399 01e4 2B40     		and	r3, r5
 400              	.LVL26:
 387:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     EZI2C_EZI2C_UPDATE_LOC_STATUS(activeAddress, locStatus);
 388:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     locStatus |= (uint32)  EZI2C_curStatus;
 401              		.loc 1 388 0
 402 01e6 354A     		ldr	r2, .L38+20
 403 01e8 1178     		ldrb	r1, [r2]
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccDx4ryC.s 			page 15


 404 01ea 0B43     		orr	r3, r1
 405              	.LVL27:
 389:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     locStatus &= (uint32) ~EZI2C_EZI2C_STATUS_BUSY;
 390:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     EZI2C_curStatus = (uint8) locStatus;
 406              		.loc 1 390 0
 407 01ec 2021     		mov	r1, #32
 408 01ee 8B43     		bic	r3, r1
 409              	.LVL28:
 410 01f0 1370     		strb	r3, [r2]
 391:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 392:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     EZI2C_fsmState = EZI2C_EZI2C_FSM_IDLE;
 411              		.loc 1 392 0
 412 01f2 0022     		mov	r2, #0
 413 01f4 374B     		ldr	r3, .L38+44
 414 01f6 1A70     		strb	r2, [r3]
 415              	.L26:
 393:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 394:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     #if(EZI2C_SECONDARY_ADDRESS_ENABLE)
 395:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     {
 396:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         /* Store local index into global variable, before address phase */
 397:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         EZI2C_EZI2C_SET_INDEX(activeAddress, locIndex);
 398:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     }
 399:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     #endif
 400:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 }
 401:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 402:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 /* INTR_SLAVE.I2C_ADDR_MATCH */
 403:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 /* The matched address is received: the slave starts its operation.
 404:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 * INTR_SLAVE_I2C_STOP updates the buffer index before the address phase for two add
 405:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 * This is done to update buffer index correctly before the address phase changes it
 406:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 */
 407:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 if(0u != (locIntrSlave & EZI2C_INTR_SLAVE_I2C_ADDR_MATCH))
 416              		.loc 1 407 0
 417 01f8 6B06     		lsl	r3, r5, #25
 418 01fa 2ED5     		bpl	.L28
 408:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 {
 409:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     #if(EZI2C_SECONDARY_ADDRESS_ENABLE)
 410:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     {
 411:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         /* Read address byte from RX FIFO */
 412:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         locByte = EZI2C_GET_I2C_7BIT_ADDRESS(EZI2C_RX_FIFO_RD_REG);
 413:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 414:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         EZI2C_ClearRxInterruptSource(EZI2C_INTR_RX_NOT_EMPTY);
 415:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 416:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         /* Check received address against device addresses */
 417:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         if(EZI2C_addrBuf1 == locByte)
 418:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         {
 419:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             /* Set buffer exposed to primary slave address */
 420:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             EZI2C_dataBuffer = EZI2C_dataBuffer1;
 421:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             EZI2C_bufSizeBuf = EZI2C_bufSizeBuf1;
 422:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             EZI2C_protectBuf = EZI2C_protectBuf1;
 423:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 424:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             activeAddress = EZI2C_EZI2C_ACTIVE_ADDRESS1;
 425:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         }
 426:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         else if(EZI2C_addrBuf2 == locByte)
 427:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         {
 428:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             /* Set buffer exposed to secondary slave address */
 429:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             EZI2C_dataBuffer = EZI2C_dataBuffer2;
 430:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             EZI2C_bufSizeBuf = EZI2C_bufSizeBuf2;
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccDx4ryC.s 			page 16


 431:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             EZI2C_protectBuf = EZI2C_protectBuf2;
 432:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 433:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             activeAddress = EZI2C_EZI2C_ACTIVE_ADDRESS2;
 434:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         }
 435:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         else
 436:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         {
 437:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             /* Address does not match */
 438:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             ackResponse = EZI2C_EZI2C_NACK_RECEIVED_ADDRESS;
 439:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         }
 440:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     }
 441:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     #endif
 442:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 443:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 #if(EZI2C_SECONDARY_ADDRESS_ENABLE_CONST)
 444:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     if(EZI2C_EZI2C_NACK_RECEIVED_ADDRESS == ackResponse)
 445:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     {
 446:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         /* Clear interrupt sources before NACK address */
 447:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         EZI2C_ClearI2CExtClkInterruptSource(EZI2C_INTR_I2C_EC_WAKE_UP);
 448:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         EZI2C_ClearSlaveInterruptSource(EZI2C_INTR_SLAVE_ALL);
 449:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 450:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     #if(!EZI2C_CY_SCBIP_V0)
 451:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         /* Disable INTR_I2C_STOP to not trigger after matched address is NACKed. Ti
 452:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         EZI2C_DISABLE_INTR_SLAVE(EZI2C_INTR_SLAVE_I2C_STOP);
 453:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     #endif /* (!EZI2C_CY_SCBIP_V0) */
 454:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 455:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         /* NACK address byte: it does not match neither primary nor secondary */
 456:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         EZI2C_I2C_SLAVE_GENERATE_NACK;
 457:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     }
 458:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     else
 459:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 #endif /* (EZI2C_SECONDARY_ADDRESS_ENABLE_CONST) */
 460:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     {
 461:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 462:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     #if(EZI2C_SCB_MODE_UNCONFIG_CONST_CFG)
 463:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         if(!EZI2C_SECONDARY_ADDRESS_ENABLE)
 464:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         {
 465:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             /* Set buffer exposed to primary slave address */
 466:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             EZI2C_dataBuffer = EZI2C_dataBuffer1;
 467:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             EZI2C_bufSizeBuf = EZI2C_bufSizeBuf1;
 468:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             EZI2C_protectBuf = EZI2C_protectBuf1;
 469:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 470:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             activeAddress = EZI2C_EZI2C_ACTIVE_ADDRESS1;
 471:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         }
 472:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     #endif /* (EZI2C_SCB_MODE_UNCONFIG_CONST_CFG) */
 473:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 474:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         /* Bus becomes busy after address is received */
 475:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         EZI2C_curStatus |= (uint8) EZI2C_EZI2C_STATUS_BUSY;
 419              		.loc 1 475 0
 420 01fc 2F4A     		ldr	r2, .L38+20
 421 01fe 1178     		ldrb	r1, [r2]
 422 0200 2023     		mov	r3, #32
 423 0202 0B43     		orr	r3, r1
 424 0204 1370     		strb	r3, [r2]
 476:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 477:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         /* Slave is read or written: set current offset */
 478:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         locIndex = EZI2C_EZI2C_GET_OFFSET(activeAddress);
 425              		.loc 1 478 0
 426 0206 2F4B     		ldr	r3, .L38+28
 427 0208 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccDx4ryC.s 			page 17


 428 020a 1C1C     		mov	r4, r3
 429              	.LVL29:
 479:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 480:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         /* Check transaction direction */
 481:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         if(EZI2C_CHECK_I2C_STATUS(EZI2C_I2C_STATUS_S_READ))
 430              		.loc 1 481 0
 431 020c 3C4A     		ldr	r2, .L38+88
 432 020e 1268     		ldr	r2, [r2]
 433 0210 D206     		lsl	r2, r2, #27
 434 0212 12D5     		bpl	.L29
 482:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         {
 483:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             /* Calculate slave buffer size */
 484:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             locBufSize = EZI2C_bufSizeBuf1 - (uint16) locIndex;
 435              		.loc 1 484 0
 436 0214 364A     		ldr	r2, .L38+72
 437 0216 1288     		ldrh	r2, [r2]
 438 0218 D31A     		sub	r3, r2, r3
 439              	.LVL30:
 440 021a 324A     		ldr	r2, .L38+60
 441 021c 1380     		strh	r3, [r2]
 485:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 486:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             /* Clear TX FIFO to start fill from offset */
 487:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             EZI2C_CLEAR_TX_FIFO;
 442              		.loc 1 487 0
 443 021e 394B     		ldr	r3, .L38+92
 444 0220 1A68     		ldr	r2, [r3]
 445 0222 8021     		mov	r1, #128
 446 0224 4902     		lsl	r1, r1, #9
 447 0226 0A43     		orr	r2, r1
 448 0228 1A60     		str	r2, [r3]
 449 022a 1968     		ldr	r1, [r3]
 450 022c 364A     		ldr	r2, .L38+96
 451 022e 0A40     		and	r2, r1
 452 0230 1A60     		str	r2, [r3]
 488:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             EZI2C_SetTxInterruptMode(EZI2C_INTR_TX_EMPTY);
 453              		.loc 1 488 0
 454 0232 1022     		mov	r2, #16
 455 0234 224B     		ldr	r3, .L38+24
 456 0236 1A60     		str	r2, [r3]
 457 0238 02E0     		b	.L30
 458              	.LVL31:
 459              	.L29:
 489:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         }
 490:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         else
 491:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         {
 492:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             /* Master writes: enable reception interrupt. The FSM state was set in 
 493:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             EZI2C_SetRxInterruptMode(EZI2C_INTR_RX_NOT_EMPTY);
 460              		.loc 1 493 0
 461 023a 0422     		mov	r2, #4
 462 023c 244B     		ldr	r3, .L38+40
 463              	.LVL32:
 464 023e 1A60     		str	r2, [r3]
 465              	.L30:
 494:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         }
 495:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 496:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         /* Clear interrupt sources before ACK address */
 497:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         EZI2C_ClearI2CExtClkInterruptSource(EZI2C_INTR_I2C_EC_WAKE_UP);
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccDx4ryC.s 			page 18


 466              		.loc 1 497 0
 467 0240 0122     		mov	r2, #1
 468 0242 324B     		ldr	r3, .L38+100
 469 0244 1A60     		str	r2, [r3]
 498:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         EZI2C_ClearSlaveInterruptSource(EZI2C_INTR_SLAVE_ALL);
 470              		.loc 1 498 0
 471 0246 3249     		ldr	r1, .L38+104
 472 0248 194B     		ldr	r3, .L38+8
 473 024a 1960     		str	r1, [r3]
 499:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 500:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     #if (!EZI2C_CY_SCBIP_V0)
 501:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         /* Enable STOP to trigger after address match is ACKed. Ticket ID#156094 */
 502:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         EZI2C_ENABLE_INTR_SLAVE(EZI2C_INTR_SLAVE_I2C_STOP);
 474              		.loc 1 502 0
 475 024c 3149     		ldr	r1, .L38+108
 476 024e 0868     		ldr	r0, [r1]
 477 0250 1023     		mov	r3, #16
 478 0252 0343     		orr	r3, r0
 479 0254 0B60     		str	r3, [r1]
 503:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     #endif /* (!EZI2C_CY_SCBIP_V0) */
 504:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 505:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         /* ACK the address byte */
 506:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         EZI2C_I2C_SLAVE_GENERATE_ACK;
 480              		.loc 1 506 0
 481 0256 244B     		ldr	r3, .L38+64
 482 0258 1A60     		str	r2, [r3]
 483              	.L28:
 507:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     }
 508:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 }
 509:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 510:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 /* Clear slave interrupt sources */
 511:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 EZI2C_ClearSlaveInterruptSource(locIntrSlave);
 484              		.loc 1 511 0
 485 025a 154B     		ldr	r3, .L38+8
 486 025c 1D60     		str	r5, [r3]
 487              	.L25:
 512:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****             }
 513:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 514:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****             /* INTR_TX.EMPTY */
 515:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****             /* Transmits data to the master: loads data into the TX FIFO. The 0xFF sends out if the
 516:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****             * out the buffer. The address reception with a read flag clears the TX FIFO to be loade
 517:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****             */
 518:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****             if(0u != (EZI2C_GetInterruptCause() & EZI2C_INTR_CAUSE_TX))
 488              		.loc 1 518 0
 489 025e 154B     		ldr	r3, .L38+12
 490 0260 1B68     		ldr	r3, [r3]
 491 0262 5B07     		lsl	r3, r3, #29
 492 0264 1CD5     		bpl	.L6
 493              	.L33:
 519:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****             {
 520:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 /* Put data into TX FIFO until there is a room */
 521:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 do
 522:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 {
 523:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     /* Check transmit buffer range: locBufSize calculates after address reception *
 524:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     if(0u != locBufSize)
 494              		.loc 1 524 0
 495 0266 1F4B     		ldr	r3, .L38+60
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccDx4ryC.s 			page 19


 496 0268 1B88     		ldrh	r3, [r3]
 497 026a 002B     		cmp	r3, #0
 498 026c 0CD0     		beq	.L31
 525:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     {
 526:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         EZI2C_TX_FIFO_WR_REG = (uint32) EZI2C_dataBuffer1[locIndex];
 499              		.loc 1 526 0
 500 026e 1F4B     		ldr	r3, .L38+68
 501 0270 1B68     		ldr	r3, [r3]
 502 0272 1B19     		add	r3, r3, r4
 503 0274 1B78     		ldrb	r3, [r3]
 504 0276 DBB2     		uxtb	r3, r3
 505 0278 274A     		ldr	r2, .L38+112
 506 027a 1360     		str	r3, [r2]
 527:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         locIndex++;
 507              		.loc 1 527 0
 508 027c 0134     		add	r4, r4, #1
 509              	.LVL33:
 528:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         locBufSize--;
 510              		.loc 1 528 0
 511 027e 194A     		ldr	r2, .L38+60
 512 0280 1388     		ldrh	r3, [r2]
 513 0282 013B     		sub	r3, r3, #1
 514 0284 1380     		strh	r3, [r2]
 515 0286 02E0     		b	.L32
 516              	.L31:
 529:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     }
 530:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     else
 531:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     {
 532:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         EZI2C_TX_FIFO_WR_REG = EZI2C_EZI2C_OVFL_RETURN;
 517              		.loc 1 532 0
 518 0288 FF22     		mov	r2, #255
 519 028a 234B     		ldr	r3, .L38+112
 520 028c 1A60     		str	r2, [r3]
 521              	.L32:
 533:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     }
 534:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 }
 535:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 while(EZI2C_EZI2C_FIFO_SIZE != EZI2C_GET_TX_FIFO_ENTRIES);
 522              		.loc 1 535 0
 523 028e 234B     		ldr	r3, .L38+116
 524 0290 1B68     		ldr	r3, [r3]
 525 0292 1F22     		mov	r2, #31
 526 0294 1340     		and	r3, r2
 527 0296 082B     		cmp	r3, #8
 528 0298 E5D1     		bne	.L33
 536:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 537:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 EZI2C_ClearTxInterruptSource(EZI2C_INTR_TX_EMPTY);
 529              		.loc 1 537 0
 530 029a 0F3A     		sub	r2, r2, #15
 531 029c 204B     		ldr	r3, .L38+120
 532 029e 1A60     		str	r2, [r3]
 533              	.L6:
 538:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****             }
 539:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         }
 540:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 541:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         /* Store local index copy into global variable */
 542:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         EZI2C_EZI2C_SET_INDEX(activeAddress, locIndex);
 534              		.loc 1 542 0
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccDx4ryC.s 			page 20


 535 02a0 024B     		ldr	r3, .L38+4
 536 02a2 1C80     		strh	r4, [r3]
 543:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 544:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****     #ifdef EZI2C_EZI2C_STRETCH_ISR_EXIT_CALLBACK
 545:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         EZI2C_EZI2C_STRETCH_ISR_ExitCallback();
 546:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****     #endif /* EZI2C_EZI2C_STRETCH_ISR_EXIT_CALLBACK */
 547:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 548:.\Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****     }
 537              		.loc 1 548 0
 538              		@ sp needed
 539              	.LVL34:
 540              	.LVL35:
 541              	.LVL36:
 542 02a4 70BD     		pop	{r4, r5, r6, pc}
 543              	.L39:
 544 02a6 C046     		.align	2
 545              	.L38:
 546 02a8 00000000 		.word	EZI2C_customIntrHandler
 547 02ac 00000000 		.word	EZI2C_indexBuf1
 548 02b0 400F2440 		.word	1076105024
 549 02b4 000E2440 		.word	1076104704
 550 02b8 00002440 		.word	1076101120
 551 02bc 00000000 		.word	EZI2C_curStatus
 552 02c0 880F2440 		.word	1076105096
 553 02c4 00000000 		.word	EZI2C_offsetBuf1
 554 02c8 60002440 		.word	1076101216
 555 02cc FF5FFFFF 		.word	-40961
 556 02d0 C80F2440 		.word	1076105160
 557 02d4 00000000 		.word	EZI2C_fsmState
 558 02d8 880E2440 		.word	1076104840
 559 02dc CC0F2440 		.word	1076105164
 560 02e0 40032440 		.word	1076101952
 561 02e4 00000000 		.word	.LANCHOR0
 562 02e8 6C002440 		.word	1076101228
 563 02ec 00000000 		.word	EZI2C_dataBuffer1
 564 02f0 00000000 		.word	EZI2C_bufSizeBuf1
 565 02f4 00000000 		.word	EZI2C_protectBuf1
 566 02f8 C00F2440 		.word	1076105152
 567 02fc 08032440 		.word	1076101896
 568 0300 64002440 		.word	1076101220
 569 0304 04022440 		.word	1076101636
 570 0308 FFFFFEFF 		.word	-65537
 571 030c 800E2440 		.word	1076104832
 572 0310 FF0F0000 		.word	4095
 573 0314 480F2440 		.word	1076105032
 574 0318 40022440 		.word	1076101696
 575 031c 08022440 		.word	1076101640
 576 0320 800F2440 		.word	1076105088
 577              		.cfi_endproc
 578              	.LFE1:
 579              		.size	EZI2C_EZI2C_STRETCH_ISR, .-EZI2C_EZI2C_STRETCH_ISR
 580              		.bss
 581              		.align	1
 582              		.set	.LANCHOR0,. + 0
 583              		.type	locBufSize.4820, %object
 584              		.size	locBufSize.4820, 2
 585              	locBufSize.4820:
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccDx4ryC.s 			page 21


 586 0000 0000     		.space	2
 587              		.text
 588              	.Letext0:
 589              		.file 2 "Generated_Source\\PSoC4/cytypes.h"
 590              		.file 3 ".\\Generated_Source\\PSoC4\\EZI2C_PVT.h"
 591              		.file 4 ".\\Generated_Source\\PSoC4\\EZI2C_EZI2C_PVT.h"
 592              		.file 5 "Generated_Source\\PSoC4/CyLib.h"
 593              		.section	.debug_info,"",%progbits
 594              	.Ldebug_info0:
 595 0000 DB010000 		.4byte	0x1db
 596 0004 0400     		.2byte	0x4
 597 0006 00000000 		.4byte	.Ldebug_abbrev0
 598 000a 04       		.byte	0x4
 599 000b 01       		.uleb128 0x1
 600 000c 9F010000 		.4byte	.LASF34
 601 0010 01       		.byte	0x1
 602 0011 5D010000 		.4byte	.LASF35
 603 0015 2D020000 		.4byte	.LASF36
 604 0019 00000000 		.4byte	.Ldebug_ranges0+0
 605 001d 00000000 		.4byte	0
 606 0021 00000000 		.4byte	.Ldebug_line0
 607 0025 02       		.uleb128 0x2
 608 0026 01       		.byte	0x1
 609 0027 06       		.byte	0x6
 610 0028 99020000 		.4byte	.LASF0
 611 002c 02       		.uleb128 0x2
 612 002d 01       		.byte	0x1
 613 002e 08       		.byte	0x8
 614 002f 7A000000 		.4byte	.LASF1
 615 0033 02       		.uleb128 0x2
 616 0034 02       		.byte	0x2
 617 0035 05       		.byte	0x5
 618 0036 68020000 		.4byte	.LASF2
 619 003a 02       		.uleb128 0x2
 620 003b 02       		.byte	0x2
 621 003c 07       		.byte	0x7
 622 003d 37000000 		.4byte	.LASF3
 623 0041 02       		.uleb128 0x2
 624 0042 04       		.byte	0x4
 625 0043 05       		.byte	0x5
 626 0044 90020000 		.4byte	.LASF4
 627 0048 02       		.uleb128 0x2
 628 0049 04       		.byte	0x4
 629 004a 07       		.byte	0x7
 630 004b 92000000 		.4byte	.LASF5
 631 004f 02       		.uleb128 0x2
 632 0050 08       		.byte	0x8
 633 0051 05       		.byte	0x5
 634 0052 4F010000 		.4byte	.LASF6
 635 0056 02       		.uleb128 0x2
 636 0057 08       		.byte	0x8
 637 0058 07       		.byte	0x7
 638 0059 1B010000 		.4byte	.LASF7
 639 005d 03       		.uleb128 0x3
 640 005e 04       		.byte	0x4
 641 005f 05       		.byte	0x5
 642 0060 696E7400 		.ascii	"int\000"
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccDx4ryC.s 			page 22


 643 0064 02       		.uleb128 0x2
 644 0065 04       		.byte	0x4
 645 0066 07       		.byte	0x7
 646 0067 F9000000 		.4byte	.LASF8
 647 006b 04       		.uleb128 0x4
 648 006c A4000000 		.4byte	.LASF9
 649 0070 02       		.byte	0x2
 650 0071 3801     		.2byte	0x138
 651 0073 2C000000 		.4byte	0x2c
 652 0077 04       		.uleb128 0x4
 653 0078 D9000000 		.4byte	.LASF10
 654 007c 02       		.byte	0x2
 655 007d 3901     		.2byte	0x139
 656 007f 3A000000 		.4byte	0x3a
 657 0083 04       		.uleb128 0x4
 658 0084 E0000000 		.4byte	.LASF11
 659 0088 02       		.byte	0x2
 660 0089 3A01     		.2byte	0x13a
 661 008b 48000000 		.4byte	0x48
 662 008f 02       		.uleb128 0x2
 663 0090 04       		.byte	0x4
 664 0091 04       		.byte	0x4
 665 0092 6B000000 		.4byte	.LASF12
 666 0096 02       		.uleb128 0x2
 667 0097 08       		.byte	0x8
 668 0098 04       		.byte	0x4
 669 0099 D2000000 		.4byte	.LASF13
 670 009d 02       		.uleb128 0x2
 671 009e 01       		.byte	0x1
 672 009f 08       		.byte	0x8
 673 00a0 88010000 		.4byte	.LASF14
 674 00a4 05       		.uleb128 0x5
 675 00a5 6B000000 		.4byte	0x6b
 676 00a9 04       		.uleb128 0x4
 677 00aa 00000000 		.4byte	.LASF15
 678 00ae 02       		.byte	0x2
 679 00af E401     		.2byte	0x1e4
 680 00b1 B5000000 		.4byte	0xb5
 681 00b5 05       		.uleb128 0x5
 682 00b6 83000000 		.4byte	0x83
 683 00ba 04       		.uleb128 0x4
 684 00bb 32010000 		.4byte	.LASF16
 685 00bf 02       		.byte	0x2
 686 00c0 F401     		.2byte	0x1f4
 687 00c2 C6000000 		.4byte	0xc6
 688 00c6 06       		.uleb128 0x6
 689 00c7 04       		.byte	0x4
 690 00c8 CC000000 		.4byte	0xcc
 691 00cc 07       		.uleb128 0x7
 692 00cd 02       		.uleb128 0x2
 693 00ce 04       		.byte	0x4
 694 00cf 07       		.byte	0x7
 695 00d0 46010000 		.4byte	.LASF17
 696 00d4 08       		.uleb128 0x8
 697 00d5 A5020000 		.4byte	.LASF37
 698 00d9 01       		.byte	0x1
 699 00da 26       		.byte	0x26
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccDx4ryC.s 			page 23


 700 00db 00000000 		.4byte	.LFB1
 701 00df 24030000 		.4byte	.LFE1-.LFB1
 702 00e3 01       		.uleb128 0x1
 703 00e4 9C       		.byte	0x9c
 704 00e5 73010000 		.4byte	0x173
 705 00e9 09       		.uleb128 0x9
 706 00ea 06010000 		.4byte	.LASF18
 707 00ee 01       		.byte	0x1
 708 00ef 28       		.byte	0x28
 709 00f0 77000000 		.4byte	0x77
 710 00f4 05       		.uleb128 0x5
 711 00f5 03       		.byte	0x3
 712 00f6 00000000 		.4byte	locBufSize.4820
 713 00fa 0A       		.uleb128 0xa
 714 00fb 71000000 		.4byte	.LASF19
 715 00ff 01       		.byte	0x1
 716 0100 29       		.byte	0x29
 717 0101 83000000 		.4byte	0x83
 718 0105 00000000 		.4byte	.LLST0
 719 0109 0A       		.uleb128 0xa
 720 010a 88000000 		.4byte	.LASF20
 721 010e 01       		.byte	0x1
 722 010f 2A       		.byte	0x2a
 723 0110 83000000 		.4byte	0x83
 724 0114 60000000 		.4byte	.LLST1
 725 0118 0A       		.uleb128 0xa
 726 0119 57000000 		.4byte	.LASF21
 727 011d 01       		.byte	0x1
 728 011e 2C       		.byte	0x2c
 729 011f 83000000 		.4byte	0x83
 730 0123 8F000000 		.4byte	.LLST2
 731 0127 0A       		.uleb128 0xa
 732 0128 11010000 		.4byte	.LASF22
 733 012c 01       		.byte	0x1
 734 012d 2D       		.byte	0x2d
 735 012e 83000000 		.4byte	0x83
 736 0132 BA000000 		.4byte	.LLST3
 737 0136 0A       		.uleb128 0xa
 738 0137 63000000 		.4byte	.LASF23
 739 013b 01       		.byte	0x1
 740 013c 2E       		.byte	0x2e
 741 013d 83000000 		.4byte	0x83
 742 0141 D8000000 		.4byte	.LLST4
 743 0145 0A       		.uleb128 0xa
 744 0146 83020000 		.4byte	.LASF24
 745 014a 01       		.byte	0x1
 746 014b 30       		.byte	0x30
 747 014c 83000000 		.4byte	0x83
 748 0150 0C010000 		.4byte	.LLST5
 749 0154 0A       		.uleb128 0xa
 750 0155 4A000000 		.4byte	.LASF25
 751 0159 01       		.byte	0x1
 752 015a 31       		.byte	0x31
 753 015b 83000000 		.4byte	0x83
 754 015f 1F010000 		.4byte	.LLST6
 755 0163 0B       		.uleb128 0xb
 756 0164 50010000 		.4byte	.LVL14
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccDx4ryC.s 			page 24


 757 0168 D1010000 		.4byte	0x1d1
 758 016c 0C       		.uleb128 0xc
 759 016d 01       		.uleb128 0x1
 760 016e 50       		.byte	0x50
 761 016f 01       		.uleb128 0x1
 762 0170 30       		.byte	0x30
 763 0171 00       		.byte	0
 764 0172 00       		.byte	0
 765 0173 0D       		.uleb128 0xd
 766 0174 AA000000 		.4byte	.LASF26
 767 0178 03       		.byte	0x3
 768 0179 3A       		.byte	0x3a
 769 017a BA000000 		.4byte	0xba
 770 017e 0D       		.uleb128 0xd
 771 017f 06000000 		.4byte	.LASF27
 772 0183 04       		.byte	0x4
 773 0184 1D       		.byte	0x1d
 774 0185 A4000000 		.4byte	0xa4
 775 0189 0D       		.uleb128 0xd
 776 018a 28000000 		.4byte	.LASF28
 777 018e 04       		.byte	0x4
 778 018f 1E       		.byte	0x1e
 779 0190 6B000000 		.4byte	0x6b
 780 0194 0D       		.uleb128 0xd
 781 0195 8D010000 		.4byte	.LASF29
 782 0199 04       		.byte	0x4
 783 019a 21       		.byte	0x21
 784 019b 9F010000 		.4byte	0x19f
 785 019f 06       		.uleb128 0x6
 786 01a0 04       		.byte	0x4
 787 01a1 A4000000 		.4byte	0xa4
 788 01a5 0D       		.uleb128 0xd
 789 01a6 16000000 		.4byte	.LASF30
 790 01aa 04       		.byte	0x4
 791 01ab 22       		.byte	0x22
 792 01ac 77000000 		.4byte	0x77
 793 01b0 0D       		.uleb128 0xd
 794 01b1 E7000000 		.4byte	.LASF31
 795 01b5 04       		.byte	0x4
 796 01b6 23       		.byte	0x23
 797 01b7 77000000 		.4byte	0x77
 798 01bb 0D       		.uleb128 0xd
 799 01bc 72020000 		.4byte	.LASF32
 800 01c0 04       		.byte	0x4
 801 01c1 24       		.byte	0x24
 802 01c2 6B000000 		.4byte	0x6b
 803 01c6 0D       		.uleb128 0xd
 804 01c7 C2000000 		.4byte	.LASF33
 805 01cb 04       		.byte	0x4
 806 01cc 25       		.byte	0x25
 807 01cd 77000000 		.4byte	0x77
 808 01d1 0E       		.uleb128 0xe
 809 01d2 3F010000 		.4byte	.LASF38
 810 01d6 05       		.byte	0x5
 811 01d7 63       		.byte	0x63
 812 01d8 0F       		.uleb128 0xf
 813 01d9 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccDx4ryC.s 			page 25


 814 01dd 00       		.byte	0
 815 01de 00       		.byte	0
 816              		.section	.debug_abbrev,"",%progbits
 817              	.Ldebug_abbrev0:
 818 0000 01       		.uleb128 0x1
 819 0001 11       		.uleb128 0x11
 820 0002 01       		.byte	0x1
 821 0003 25       		.uleb128 0x25
 822 0004 0E       		.uleb128 0xe
 823 0005 13       		.uleb128 0x13
 824 0006 0B       		.uleb128 0xb
 825 0007 03       		.uleb128 0x3
 826 0008 0E       		.uleb128 0xe
 827 0009 1B       		.uleb128 0x1b
 828 000a 0E       		.uleb128 0xe
 829 000b 55       		.uleb128 0x55
 830 000c 17       		.uleb128 0x17
 831 000d 11       		.uleb128 0x11
 832 000e 01       		.uleb128 0x1
 833 000f 10       		.uleb128 0x10
 834 0010 17       		.uleb128 0x17
 835 0011 00       		.byte	0
 836 0012 00       		.byte	0
 837 0013 02       		.uleb128 0x2
 838 0014 24       		.uleb128 0x24
 839 0015 00       		.byte	0
 840 0016 0B       		.uleb128 0xb
 841 0017 0B       		.uleb128 0xb
 842 0018 3E       		.uleb128 0x3e
 843 0019 0B       		.uleb128 0xb
 844 001a 03       		.uleb128 0x3
 845 001b 0E       		.uleb128 0xe
 846 001c 00       		.byte	0
 847 001d 00       		.byte	0
 848 001e 03       		.uleb128 0x3
 849 001f 24       		.uleb128 0x24
 850 0020 00       		.byte	0
 851 0021 0B       		.uleb128 0xb
 852 0022 0B       		.uleb128 0xb
 853 0023 3E       		.uleb128 0x3e
 854 0024 0B       		.uleb128 0xb
 855 0025 03       		.uleb128 0x3
 856 0026 08       		.uleb128 0x8
 857 0027 00       		.byte	0
 858 0028 00       		.byte	0
 859 0029 04       		.uleb128 0x4
 860 002a 16       		.uleb128 0x16
 861 002b 00       		.byte	0
 862 002c 03       		.uleb128 0x3
 863 002d 0E       		.uleb128 0xe
 864 002e 3A       		.uleb128 0x3a
 865 002f 0B       		.uleb128 0xb
 866 0030 3B       		.uleb128 0x3b
 867 0031 05       		.uleb128 0x5
 868 0032 49       		.uleb128 0x49
 869 0033 13       		.uleb128 0x13
 870 0034 00       		.byte	0
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccDx4ryC.s 			page 26


 871 0035 00       		.byte	0
 872 0036 05       		.uleb128 0x5
 873 0037 35       		.uleb128 0x35
 874 0038 00       		.byte	0
 875 0039 49       		.uleb128 0x49
 876 003a 13       		.uleb128 0x13
 877 003b 00       		.byte	0
 878 003c 00       		.byte	0
 879 003d 06       		.uleb128 0x6
 880 003e 0F       		.uleb128 0xf
 881 003f 00       		.byte	0
 882 0040 0B       		.uleb128 0xb
 883 0041 0B       		.uleb128 0xb
 884 0042 49       		.uleb128 0x49
 885 0043 13       		.uleb128 0x13
 886 0044 00       		.byte	0
 887 0045 00       		.byte	0
 888 0046 07       		.uleb128 0x7
 889 0047 15       		.uleb128 0x15
 890 0048 00       		.byte	0
 891 0049 27       		.uleb128 0x27
 892 004a 19       		.uleb128 0x19
 893 004b 00       		.byte	0
 894 004c 00       		.byte	0
 895 004d 08       		.uleb128 0x8
 896 004e 2E       		.uleb128 0x2e
 897 004f 01       		.byte	0x1
 898 0050 3F       		.uleb128 0x3f
 899 0051 19       		.uleb128 0x19
 900 0052 03       		.uleb128 0x3
 901 0053 0E       		.uleb128 0xe
 902 0054 3A       		.uleb128 0x3a
 903 0055 0B       		.uleb128 0xb
 904 0056 3B       		.uleb128 0x3b
 905 0057 0B       		.uleb128 0xb
 906 0058 27       		.uleb128 0x27
 907 0059 19       		.uleb128 0x19
 908 005a 11       		.uleb128 0x11
 909 005b 01       		.uleb128 0x1
 910 005c 12       		.uleb128 0x12
 911 005d 06       		.uleb128 0x6
 912 005e 40       		.uleb128 0x40
 913 005f 18       		.uleb128 0x18
 914 0060 9642     		.uleb128 0x2116
 915 0062 19       		.uleb128 0x19
 916 0063 01       		.uleb128 0x1
 917 0064 13       		.uleb128 0x13
 918 0065 00       		.byte	0
 919 0066 00       		.byte	0
 920 0067 09       		.uleb128 0x9
 921 0068 34       		.uleb128 0x34
 922 0069 00       		.byte	0
 923 006a 03       		.uleb128 0x3
 924 006b 0E       		.uleb128 0xe
 925 006c 3A       		.uleb128 0x3a
 926 006d 0B       		.uleb128 0xb
 927 006e 3B       		.uleb128 0x3b
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccDx4ryC.s 			page 27


 928 006f 0B       		.uleb128 0xb
 929 0070 49       		.uleb128 0x49
 930 0071 13       		.uleb128 0x13
 931 0072 02       		.uleb128 0x2
 932 0073 18       		.uleb128 0x18
 933 0074 00       		.byte	0
 934 0075 00       		.byte	0
 935 0076 0A       		.uleb128 0xa
 936 0077 34       		.uleb128 0x34
 937 0078 00       		.byte	0
 938 0079 03       		.uleb128 0x3
 939 007a 0E       		.uleb128 0xe
 940 007b 3A       		.uleb128 0x3a
 941 007c 0B       		.uleb128 0xb
 942 007d 3B       		.uleb128 0x3b
 943 007e 0B       		.uleb128 0xb
 944 007f 49       		.uleb128 0x49
 945 0080 13       		.uleb128 0x13
 946 0081 02       		.uleb128 0x2
 947 0082 17       		.uleb128 0x17
 948 0083 00       		.byte	0
 949 0084 00       		.byte	0
 950 0085 0B       		.uleb128 0xb
 951 0086 898201   		.uleb128 0x4109
 952 0089 01       		.byte	0x1
 953 008a 11       		.uleb128 0x11
 954 008b 01       		.uleb128 0x1
 955 008c 31       		.uleb128 0x31
 956 008d 13       		.uleb128 0x13
 957 008e 00       		.byte	0
 958 008f 00       		.byte	0
 959 0090 0C       		.uleb128 0xc
 960 0091 8A8201   		.uleb128 0x410a
 961 0094 00       		.byte	0
 962 0095 02       		.uleb128 0x2
 963 0096 18       		.uleb128 0x18
 964 0097 9142     		.uleb128 0x2111
 965 0099 18       		.uleb128 0x18
 966 009a 00       		.byte	0
 967 009b 00       		.byte	0
 968 009c 0D       		.uleb128 0xd
 969 009d 34       		.uleb128 0x34
 970 009e 00       		.byte	0
 971 009f 03       		.uleb128 0x3
 972 00a0 0E       		.uleb128 0xe
 973 00a1 3A       		.uleb128 0x3a
 974 00a2 0B       		.uleb128 0xb
 975 00a3 3B       		.uleb128 0x3b
 976 00a4 0B       		.uleb128 0xb
 977 00a5 49       		.uleb128 0x49
 978 00a6 13       		.uleb128 0x13
 979 00a7 3F       		.uleb128 0x3f
 980 00a8 19       		.uleb128 0x19
 981 00a9 3C       		.uleb128 0x3c
 982 00aa 19       		.uleb128 0x19
 983 00ab 00       		.byte	0
 984 00ac 00       		.byte	0
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccDx4ryC.s 			page 28


 985 00ad 0E       		.uleb128 0xe
 986 00ae 2E       		.uleb128 0x2e
 987 00af 01       		.byte	0x1
 988 00b0 3F       		.uleb128 0x3f
 989 00b1 19       		.uleb128 0x19
 990 00b2 03       		.uleb128 0x3
 991 00b3 0E       		.uleb128 0xe
 992 00b4 3A       		.uleb128 0x3a
 993 00b5 0B       		.uleb128 0xb
 994 00b6 3B       		.uleb128 0x3b
 995 00b7 0B       		.uleb128 0xb
 996 00b8 27       		.uleb128 0x27
 997 00b9 19       		.uleb128 0x19
 998 00ba 3C       		.uleb128 0x3c
 999 00bb 19       		.uleb128 0x19
 1000 00bc 00       		.byte	0
 1001 00bd 00       		.byte	0
 1002 00be 0F       		.uleb128 0xf
 1003 00bf 05       		.uleb128 0x5
 1004 00c0 00       		.byte	0
 1005 00c1 49       		.uleb128 0x49
 1006 00c2 13       		.uleb128 0x13
 1007 00c3 00       		.byte	0
 1008 00c4 00       		.byte	0
 1009 00c5 00       		.byte	0
 1010              		.section	.debug_loc,"",%progbits
 1011              	.Ldebug_loc0:
 1012              	.LLST0:
 1013 0000 10000000 		.4byte	.LVL1
 1014 0004 AA000000 		.4byte	.LVL4
 1015 0008 0100     		.2byte	0x1
 1016 000a 54       		.byte	0x54
 1017 000b D0000000 		.4byte	.LVL6
 1018 000f DA000000 		.4byte	.LVL7
 1019 0013 0100     		.2byte	0x1
 1020 0015 54       		.byte	0x54
 1021 0016 F0000000 		.4byte	.LVL10
 1022 001a 42010000 		.4byte	.LVL11
 1023 001e 0100     		.2byte	0x1
 1024 0020 52       		.byte	0x52
 1025 0021 50010000 		.4byte	.LVL14
 1026 0025 0C020000 		.4byte	.LVL29
 1027 0029 0100     		.2byte	0x1
 1028 002b 54       		.byte	0x54
 1029 002c 0C020000 		.4byte	.LVL29
 1030 0030 1A020000 		.4byte	.LVL30
 1031 0034 0100     		.2byte	0x1
 1032 0036 53       		.byte	0x53
 1033 0037 1A020000 		.4byte	.LVL30
 1034 003b 3A020000 		.4byte	.LVL31
 1035 003f 0100     		.2byte	0x1
 1036 0041 54       		.byte	0x54
 1037 0042 3A020000 		.4byte	.LVL31
 1038 0046 3E020000 		.4byte	.LVL32
 1039 004a 0100     		.2byte	0x1
 1040 004c 53       		.byte	0x53
 1041 004d 3E020000 		.4byte	.LVL32
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccDx4ryC.s 			page 29


 1042 0051 A4020000 		.4byte	.LVL34
 1043 0055 0100     		.2byte	0x1
 1044 0057 54       		.byte	0x54
 1045 0058 00000000 		.4byte	0
 1046 005c 00000000 		.4byte	0
 1047              	.LLST1:
 1048 0060 D6010000 		.4byte	.LVL24
 1049 0064 E4010000 		.4byte	.LVL25
 1050 0068 0200     		.2byte	0x2
 1051 006a 32       		.byte	0x32
 1052 006b 9F       		.byte	0x9f
 1053 006c E4010000 		.4byte	.LVL25
 1054 0070 EC010000 		.4byte	.LVL27
 1055 0074 0100     		.2byte	0x1
 1056 0076 53       		.byte	0x53
 1057 0077 EC010000 		.4byte	.LVL27
 1058 007b F0010000 		.4byte	.LVL28
 1059 007f 0600     		.2byte	0x6
 1060 0081 73       		.byte	0x73
 1061 0082 00       		.sleb128 0
 1062 0083 09       		.byte	0x9
 1063 0084 DF       		.byte	0xdf
 1064 0085 1A       		.byte	0x1a
 1065 0086 9F       		.byte	0x9f
 1066 0087 00000000 		.4byte	0
 1067 008b 00000000 		.4byte	0
 1068              	.LLST2:
 1069 008f 76010000 		.4byte	.LVL16
 1070 0093 7A010000 		.4byte	.LVL17
 1071 0097 0200     		.2byte	0x2
 1072 0099 31       		.byte	0x31
 1073 009a 9F       		.byte	0x9f
 1074 009b 8E010000 		.4byte	.LVL18
 1075 009f 92010000 		.4byte	.LVL19
 1076 00a3 0200     		.2byte	0x2
 1077 00a5 30       		.byte	0x30
 1078 00a6 9F       		.byte	0x9f
 1079 00a7 92010000 		.4byte	.LVL19
 1080 00ab C4010000 		.4byte	.LVL23
 1081 00af 0100     		.2byte	0x1
 1082 00b1 50       		.byte	0x50
 1083 00b2 00000000 		.4byte	0
 1084 00b6 00000000 		.4byte	0
 1085              	.LLST3:
 1086 00ba 6C010000 		.4byte	.LVL15
 1087 00be 7A010000 		.4byte	.LVL17
 1088 00c2 0100     		.2byte	0x1
 1089 00c4 51       		.byte	0x51
 1090 00c5 8E010000 		.4byte	.LVL18
 1091 00c9 B2010000 		.4byte	.LVL22
 1092 00cd 0100     		.2byte	0x1
 1093 00cf 51       		.byte	0x51
 1094 00d0 00000000 		.4byte	0
 1095 00d4 00000000 		.4byte	0
 1096              	.LLST4:
 1097 00d8 AA000000 		.4byte	.LVL4
 1098 00dc CC000000 		.4byte	.LVL5
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccDx4ryC.s 			page 30


 1099 00e0 0100     		.2byte	0x1
 1100 00e2 52       		.byte	0x52
 1101 00e3 DA000000 		.4byte	.LVL7
 1102 00e7 DC000000 		.4byte	.LVL8
 1103 00eb 0100     		.2byte	0x1
 1104 00ed 52       		.byte	0x52
 1105 00ee E2000000 		.4byte	.LVL9
 1106 00f2 44010000 		.4byte	.LVL12
 1107 00f6 0100     		.2byte	0x1
 1108 00f8 52       		.byte	0x52
 1109 00f9 4A010000 		.4byte	.LVL13
 1110 00fd 4F010000 		.4byte	.LVL14-1
 1111 0101 0100     		.2byte	0x1
 1112 0103 52       		.byte	0x52
 1113 0104 00000000 		.4byte	0
 1114 0108 00000000 		.4byte	0
 1115              	.LLST5:
 1116 010c 18000000 		.4byte	.LVL3
 1117 0110 A4020000 		.4byte	.LVL36
 1118 0114 0100     		.2byte	0x1
 1119 0116 56       		.byte	0x56
 1120 0117 00000000 		.4byte	0
 1121 011b 00000000 		.4byte	0
 1122              	.LLST6:
 1123 011f 14000000 		.4byte	.LVL2
 1124 0123 A4020000 		.4byte	.LVL35
 1125 0127 0100     		.2byte	0x1
 1126 0129 55       		.byte	0x55
 1127 012a 00000000 		.4byte	0
 1128 012e 00000000 		.4byte	0
 1129              		.section	.debug_aranges,"",%progbits
 1130 0000 1C000000 		.4byte	0x1c
 1131 0004 0200     		.2byte	0x2
 1132 0006 00000000 		.4byte	.Ldebug_info0
 1133 000a 04       		.byte	0x4
 1134 000b 00       		.byte	0
 1135 000c 0000     		.2byte	0
 1136 000e 0000     		.2byte	0
 1137 0010 00000000 		.4byte	.LFB1
 1138 0014 24030000 		.4byte	.LFE1-.LFB1
 1139 0018 00000000 		.4byte	0
 1140 001c 00000000 		.4byte	0
 1141              		.section	.debug_ranges,"",%progbits
 1142              	.Ldebug_ranges0:
 1143 0000 00000000 		.4byte	.LFB1
 1144 0004 24030000 		.4byte	.LFE1
 1145 0008 00000000 		.4byte	0
 1146 000c 00000000 		.4byte	0
 1147              		.section	.debug_line,"",%progbits
 1148              	.Ldebug_line0:
 1149 0000 4C010000 		.section	.debug_str,"MS",%progbits,1
 1149      02009400 
 1149      00000201 
 1149      FB0E0D00 
 1149      01010101 
 1150              	.LASF15:
 1151 0000 72656733 		.ascii	"reg32\000"
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccDx4ryC.s 			page 31


 1151      3200
 1152              	.LASF27:
 1153 0006 455A4932 		.ascii	"EZI2C_curStatus\000"
 1153      435F6375 
 1153      72537461 
 1153      74757300 
 1154              	.LASF30:
 1155 0016 455A4932 		.ascii	"EZI2C_bufSizeBuf1\000"
 1155      435F6275 
 1155      6653697A 
 1155      65427566 
 1155      3100
 1156              	.LASF28:
 1157 0028 455A4932 		.ascii	"EZI2C_fsmState\000"
 1157      435F6673 
 1157      6D537461 
 1157      746500
 1158              	.LASF3:
 1159 0037 73686F72 		.ascii	"short unsigned int\000"
 1159      7420756E 
 1159      7369676E 
 1159      65642069 
 1159      6E7400
 1160              	.LASF25:
 1161 004a 6C6F6349 		.ascii	"locIntrSlave\000"
 1161      6E747253 
 1161      6C617665 
 1161      00
 1162              	.LASF21:
 1163 0057 656E6454 		.ascii	"endTransfer\000"
 1163      72616E73 
 1163      66657200 
 1164              	.LASF23:
 1165 0063 6C6F6342 		.ascii	"locByte\000"
 1165      79746500 
 1166              	.LASF12:
 1167 006b 666C6F61 		.ascii	"float\000"
 1167      7400
 1168              	.LASF19:
 1169 0071 6C6F6349 		.ascii	"locIndex\000"
 1169      6E646578 
 1169      00
 1170              	.LASF1:
 1171 007a 756E7369 		.ascii	"unsigned char\000"
 1171      676E6564 
 1171      20636861 
 1171      7200
 1172              	.LASF20:
 1173 0088 6C6F6353 		.ascii	"locStatus\000"
 1173      74617475 
 1173      7300
 1174              	.LASF5:
 1175 0092 6C6F6E67 		.ascii	"long unsigned int\000"
 1175      20756E73 
 1175      69676E65 
 1175      6420696E 
 1175      7400
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccDx4ryC.s 			page 32


 1176              	.LASF9:
 1177 00a4 75696E74 		.ascii	"uint8\000"
 1177      3800
 1178              	.LASF26:
 1179 00aa 455A4932 		.ascii	"EZI2C_customIntrHandler\000"
 1179      435F6375 
 1179      73746F6D 
 1179      496E7472 
 1179      48616E64 
 1180              	.LASF33:
 1181 00c2 455A4932 		.ascii	"EZI2C_indexBuf1\000"
 1181      435F696E 
 1181      64657842 
 1181      75663100 
 1182              	.LASF13:
 1183 00d2 646F7562 		.ascii	"double\000"
 1183      6C6500
 1184              	.LASF10:
 1185 00d9 75696E74 		.ascii	"uint16\000"
 1185      313600
 1186              	.LASF11:
 1187 00e0 75696E74 		.ascii	"uint32\000"
 1187      333200
 1188              	.LASF31:
 1189 00e7 455A4932 		.ascii	"EZI2C_protectBuf1\000"
 1189      435F7072 
 1189      6F746563 
 1189      74427566 
 1189      3100
 1190              	.LASF8:
 1191 00f9 756E7369 		.ascii	"unsigned int\000"
 1191      676E6564 
 1191      20696E74 
 1191      00
 1192              	.LASF18:
 1193 0106 6C6F6342 		.ascii	"locBufSize\000"
 1193      75665369 
 1193      7A6500
 1194              	.LASF22:
 1195 0111 6669666F 		.ascii	"fifoIndex\000"
 1195      496E6465 
 1195      7800
 1196              	.LASF7:
 1197 011b 6C6F6E67 		.ascii	"long long unsigned int\000"
 1197      206C6F6E 
 1197      6720756E 
 1197      7369676E 
 1197      65642069 
 1198              	.LASF16:
 1199 0132 63796973 		.ascii	"cyisraddress\000"
 1199      72616464 
 1199      72657373 
 1199      00
 1200              	.LASF38:
 1201 013f 43794861 		.ascii	"CyHalt\000"
 1201      6C7400
 1202              	.LASF17:
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccDx4ryC.s 			page 33


 1203 0146 73697A65 		.ascii	"sizetype\000"
 1203      74797065 
 1203      00
 1204              	.LASF6:
 1205 014f 6C6F6E67 		.ascii	"long long int\000"
 1205      206C6F6E 
 1205      6720696E 
 1205      7400
 1206              	.LASF35:
 1207 015d 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\EZI2C_EZI2C_INT.c\000"
 1207      6E657261 
 1207      7465645F 
 1207      536F7572 
 1207      63655C50 
 1208              	.LASF14:
 1209 0188 63686172 		.ascii	"char\000"
 1209      00
 1210              	.LASF29:
 1211 018d 455A4932 		.ascii	"EZI2C_dataBuffer1\000"
 1211      435F6461 
 1211      74614275 
 1211      66666572 
 1211      3100
 1212              	.LASF34:
 1213 019f 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 1213      4320342E 
 1213      392E3320 
 1213      32303135 
 1213      30333033 
 1214 01d2 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 1214      20726576 
 1214      6973696F 
 1214      6E203232 
 1214      31323230 
 1215 0205 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 1215      66756E63 
 1215      74696F6E 
 1215      2D736563 
 1215      74696F6E 
 1216              	.LASF36:
 1217 022d 443A5C70 		.ascii	"D:\\projects\\ArloBot\\arlobot_psoc\\arlobot_base\\"
 1217      726F6A65 
 1217      6374735C 
 1217      41726C6F 
 1217      426F745C 
 1218 025b 626F6172 		.ascii	"board1.cydsn\000"
 1218      64312E63 
 1218      7964736E 
 1218      00
 1219              	.LASF2:
 1220 0268 73686F72 		.ascii	"short int\000"
 1220      7420696E 
 1220      7400
 1221              	.LASF32:
 1222 0272 455A4932 		.ascii	"EZI2C_offsetBuf1\000"
 1222      435F6F66 
 1222      66736574 
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccDx4ryC.s 			page 34


 1222      42756631 
 1222      00
 1223              	.LASF24:
 1224 0283 6C6F6349 		.ascii	"locIntrCause\000"
 1224      6E747243 
 1224      61757365 
 1224      00
 1225              	.LASF4:
 1226 0290 6C6F6E67 		.ascii	"long int\000"
 1226      20696E74 
 1226      00
 1227              	.LASF0:
 1228 0299 7369676E 		.ascii	"signed char\000"
 1228      65642063 
 1228      68617200 
 1229              	.LASF37:
 1230 02a5 455A4932 		.ascii	"EZI2C_EZI2C_STRETCH_ISR\000"
 1230      435F455A 
 1230      4932435F 
 1230      53545245 
 1230      5443485F 
 1231              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
