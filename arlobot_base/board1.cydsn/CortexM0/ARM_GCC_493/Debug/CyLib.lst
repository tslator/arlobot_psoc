ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccBBFZQS.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"CyLib.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.CySysClkImoStart,"ax",%progbits
  18              		.align	2
  19              		.global	CySysClkImoStart
  20              		.code	16
  21              		.thumb_func
  22              		.type	CySysClkImoStart, %function
  23              	CySysClkImoStart:
  24              	.LFB1:
  25              		.file 1 ".\\Generated_Source\\PSoC4\\CyLib.c"
   1:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/CyLib.c **** * File Name: CyLib.c
   3:.\Generated_Source\PSoC4/CyLib.c **** * Version 5.30
   4:.\Generated_Source\PSoC4/CyLib.c **** *
   5:.\Generated_Source\PSoC4/CyLib.c **** *  Description:
   6:.\Generated_Source\PSoC4/CyLib.c **** *   Provides a system API for the Clocking, Interrupts, SysTick, and Voltage
   7:.\Generated_Source\PSoC4/CyLib.c **** *   Detect.
   8:.\Generated_Source\PSoC4/CyLib.c **** *
   9:.\Generated_Source\PSoC4/CyLib.c **** *  Note:
  10:.\Generated_Source\PSoC4/CyLib.c **** *   Documentation of the API's in this file is located in the PSoC 4 System
  11:.\Generated_Source\PSoC4/CyLib.c **** *   Reference Guide provided with PSoC Creator.
  12:.\Generated_Source\PSoC4/CyLib.c **** *
  13:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
  14:.\Generated_Source\PSoC4/CyLib.c **** * Copyright 2010-2015, Cypress Semiconductor Corporation.  All rights reserved.
  15:.\Generated_Source\PSoC4/CyLib.c **** * You may use this file only in accordance with the license, terms, conditions,
  16:.\Generated_Source\PSoC4/CyLib.c **** * disclaimers, and limitations in the end user license agreement accompanying
  17:.\Generated_Source\PSoC4/CyLib.c **** * the software package with which this file was provided.
  18:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  19:.\Generated_Source\PSoC4/CyLib.c **** 
  20:.\Generated_Source\PSoC4/CyLib.c **** #include "CyLib.h"
  21:.\Generated_Source\PSoC4/CyLib.c **** 
  22:.\Generated_Source\PSoC4/CyLib.c **** /* CySysClkWriteImoFreq() || CySysClkImoEnableWcoLock() */
  23:.\Generated_Source\PSoC4/CyLib.c **** #if ((CY_IP_SRSSV2 && CY_IP_FMLT) || CY_IP_IMO_TRIMMABLE_BY_WCO)
  24:.\Generated_Source\PSoC4/CyLib.c ****     #include "CyFlash.h"
  25:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_FMLT) */
  26:.\Generated_Source\PSoC4/CyLib.c **** 
  27:.\Generated_Source\PSoC4/CyLib.c **** /* Do not use these definitions directly in your application */
  28:.\Generated_Source\PSoC4/CyLib.c **** uint32 cydelayFreqHz  = CYDEV_BCLK__SYSCLK__HZ;
  29:.\Generated_Source\PSoC4/CyLib.c **** uint32 cydelayFreqKhz = (CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRE
  30:.\Generated_Source\PSoC4/CyLib.c **** uint8  cydelayFreqMhz = (uint8)((CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1M_MINUS_1_THRESHOLD) / CY_DELAY
  31:.\Generated_Source\PSoC4/CyLib.c **** uint32 cydelay32kMs   = CY_DELAY_MS_OVERFLOW * ((CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1K_MINUS_1_THRES
  32:.\Generated_Source\PSoC4/CyLib.c ****                         CY_DELAY_1K_THRESHOLD);
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccBBFZQS.s 			page 2


  33:.\Generated_Source\PSoC4/CyLib.c **** 
  34:.\Generated_Source\PSoC4/CyLib.c **** 
  35:.\Generated_Source\PSoC4/CyLib.c **** static cySysTickCallback CySysTickCallbacks[CY_SYS_SYST_NUM_OF_CALLBACKS];
  36:.\Generated_Source\PSoC4/CyLib.c **** static void CySysTickServiceCallbacks(void);
  37:.\Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
  38:.\Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysClkPllGetBypassMode(uint32 pll);
  39:.\Generated_Source\PSoC4/CyLib.c ****     static cystatus CySysClkPllConfigChangeAllowed(uint32 pll);
  40:.\Generated_Source\PSoC4/CyLib.c **** #endif /* #if (CY_IP_SRSSV2 && CY_IP_PLL) */
  41:.\Generated_Source\PSoC4/CyLib.c **** 
  42:.\Generated_Source\PSoC4/CyLib.c **** 
  43:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
  44:.\Generated_Source\PSoC4/CyLib.c **** * Indicates whether or not the SysTick has been initialized. The variable is
  45:.\Generated_Source\PSoC4/CyLib.c **** * initialized to 0 and set to 1 the first time CySysTickStart() is called.
  46:.\Generated_Source\PSoC4/CyLib.c **** *
  47:.\Generated_Source\PSoC4/CyLib.c **** * This allows the component to restart without reinitialization after the first
  48:.\Generated_Source\PSoC4/CyLib.c **** * call to the CySysTickStart() routine.
  49:.\Generated_Source\PSoC4/CyLib.c **** *
  50:.\Generated_Source\PSoC4/CyLib.c **** * If reinitialization of the SysTick is required, call CySysTickInit() before
  51:.\Generated_Source\PSoC4/CyLib.c **** * calling CySysTickStart(). Alternatively, the SysTick can be reinitialized by
  52:.\Generated_Source\PSoC4/CyLib.c **** * calling the CySysTickInit() and CySysTickEnable() functions.
  53:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  54:.\Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickInitVar = 0u;
  55:.\Generated_Source\PSoC4/CyLib.c **** 
  56:.\Generated_Source\PSoC4/CyLib.c **** 
  57:.\Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
  58:.\Generated_Source\PSoC4/CyLib.c ****         /* Conversion between CySysClkWriteImoFreq() parameter and register's value */
  59:.\Generated_Source\PSoC4/CyLib.c ****         const uint8 cyImoFreqMhz2Reg[CY_SYS_CLK_IMO_FREQ_TABLE_SIZE] = {
  60:.\Generated_Source\PSoC4/CyLib.c ****             /*  3 MHz */ 0x03u,  /*  4 MHz */ 0x04u,  /*  5 MHz */ 0x05u,  /*  6 MHz */ 0x06u,
  61:.\Generated_Source\PSoC4/CyLib.c ****             /*  7 MHz */ 0x07u,  /*  8 MHz */ 0x08u,  /*  9 MHz */ 0x09u,  /* 10 MHz */ 0x0Au,
  62:.\Generated_Source\PSoC4/CyLib.c ****             /* 11 MHz */ 0x0Bu,  /* 12 MHz */ 0x0Cu,  /* 13 MHz */ 0x0Eu,  /* 14 MHz */ 0x0Fu,
  63:.\Generated_Source\PSoC4/CyLib.c ****             /* 15 MHz */ 0x10u,  /* 16 MHz */ 0x11u,  /* 17 MHz */ 0x12u,  /* 18 MHz */ 0x13u,
  64:.\Generated_Source\PSoC4/CyLib.c ****             /* 19 MHz */ 0x14u,  /* 20 MHz */ 0x15u,  /* 21 MHz */ 0x16u,  /* 22 MHz */ 0x17u,
  65:.\Generated_Source\PSoC4/CyLib.c ****             /* 23 MHz */ 0x18u,  /* 24 MHz */ 0x19u,  /* 25 MHz */ 0x1Bu,  /* 26 MHz */ 0x1Cu,
  66:.\Generated_Source\PSoC4/CyLib.c ****             /* 27 MHz */ 0x1Du,  /* 28 MHz */ 0x1Eu,  /* 29 MHz */ 0x1Fu,  /* 30 MHz */ 0x20u,
  67:.\Generated_Source\PSoC4/CyLib.c ****             /* 31 MHz */ 0x21u,  /* 32 MHz */ 0x22u,  /* 33 MHz */ 0x23u,  /* 34 MHz */ 0x25u,
  68:.\Generated_Source\PSoC4/CyLib.c ****             /* 35 MHz */ 0x26u,  /* 36 MHz */ 0x27u,  /* 37 MHz */ 0x28u,  /* 38 MHz */ 0x29u,
  69:.\Generated_Source\PSoC4/CyLib.c ****             /* 39 MHz */ 0x2Au,  /* 40 MHz */ 0x2Bu,  /* 41 MHz */ 0x2Eu,  /* 42 MHz */ 0x2Fu,
  70:.\Generated_Source\PSoC4/CyLib.c ****             /* 43 MHz */ 0x30u,  /* 44 MHz */ 0x31u,  /* 45 MHz */ 0x32u,  /* 46 MHz */ 0x33u,
  71:.\Generated_Source\PSoC4/CyLib.c ****             /* 47 MHz */ 0x34u,  /* 48 MHz */ 0x35u };
  72:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
  73:.\Generated_Source\PSoC4/CyLib.c **** 
  74:.\Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
  75:.\Generated_Source\PSoC4/CyLib.c ****         /* Conversion between IMO frequency and WCO DPLL max offset steps */
  76:.\Generated_Source\PSoC4/CyLib.c ****         const uint8 cyImoFreqMhz2DpllOffset[CY_SYS_CLK_IMO_FREQ_WCO_DPLL_TABLE_SIZE] = {
  77:.\Generated_Source\PSoC4/CyLib.c ****             /* 26 MHz */  238u, /* 27 MHz */  219u, /* 28 MHz */  201u, /* 29 MHz */  185u,
  78:.\Generated_Source\PSoC4/CyLib.c ****             /* 30 MHz */  170u, /* 31 MHz */  155u, /* 32 MHz */  142u, /* 33 MHz */  130u,
  79:.\Generated_Source\PSoC4/CyLib.c ****             /* 34 MHz */  118u, /* 35 MHz */  107u, /* 36 MHz */   96u, /* 37 MHz */  86u,
  80:.\Generated_Source\PSoC4/CyLib.c ****             /* 38 MHz */   77u, /* 39 MHz */   68u, /* 40 MHz */   59u, /* 41 MHz */  51u,
  81:.\Generated_Source\PSoC4/CyLib.c ****             /* 42 MHz */   44u, /* 43 MHz */   36u, /* 44 MHz */   29u, /* 45 MHz */  23u,
  82:.\Generated_Source\PSoC4/CyLib.c ****             /* 46 MHz */   16u, /* 47 MHz */   10u, /* 48 MHz */   4u };
  83:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
  84:.\Generated_Source\PSoC4/CyLib.c **** 
  85:.\Generated_Source\PSoC4/CyLib.c **** /* Stored CY_SYS_CLK_IMO_TRIM4_REG when modified for USB lock */
  86:.\Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_USB)
  87:.\Generated_Source\PSoC4/CyLib.c ****         uint32 CySysClkImoTrim4 = 0u;
  88:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
  89:.\Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccBBFZQS.s 			page 3


  90:.\Generated_Source\PSoC4/CyLib.c **** 
  91:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
  92:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkImoStart
  93:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
  94:.\Generated_Source\PSoC4/CyLib.c **** *
  95:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
  96:.\Generated_Source\PSoC4/CyLib.c **** *  Enables the IMO.
  97:.\Generated_Source\PSoC4/CyLib.c **** *
  98:.\Generated_Source\PSoC4/CyLib.c **** *  For PSoC 4100M / PSoC 4200M devices, this function will also enable WCO lock
  99:.\Generated_Source\PSoC4/CyLib.c **** *  if selected in the Design Wide Resources tab.
 100:.\Generated_Source\PSoC4/CyLib.c **** *
 101:.\Generated_Source\PSoC4/CyLib.c **** *  For PSoC 4200L devices, this function will also enable USB lock if selected
 102:.\Generated_Source\PSoC4/CyLib.c **** *  in the Design Wide Resources tab.
 103:.\Generated_Source\PSoC4/CyLib.c **** *
 104:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
 105:.\Generated_Source\PSoC4/CyLib.c **** *  None
 106:.\Generated_Source\PSoC4/CyLib.c **** *
 107:.\Generated_Source\PSoC4/CyLib.c **** * Return:
 108:.\Generated_Source\PSoC4/CyLib.c **** *  None
 109:.\Generated_Source\PSoC4/CyLib.c **** *
 110:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 111:.\Generated_Source\PSoC4/CyLib.c **** void CySysClkImoStart(void)
 112:.\Generated_Source\PSoC4/CyLib.c **** {
  26              		.loc 1 112 0
  27              		.cfi_startproc
 113:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG |= CY_SYS_CLK_IMO_CONFIG_ENABLE;
  28              		.loc 1 113 0
  29 0000 034A     		ldr	r2, .L2
  30 0002 1368     		ldr	r3, [r2]
  31 0004 8021     		mov	r1, #128
  32 0006 0906     		lsl	r1, r1, #24
  33 0008 0B43     		orr	r3, r1
  34 000a 1360     		str	r3, [r2]
 114:.\Generated_Source\PSoC4/CyLib.c **** 
 115:.\Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 116:.\Generated_Source\PSoC4/CyLib.c ****         #if (CYDEV_IMO_TRIMMED_BY_WCO == 1u)
 117:.\Generated_Source\PSoC4/CyLib.c ****             CySysClkImoEnableWcoLock();
 118:.\Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_WCO == 1u) */
 119:.\Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 120:.\Generated_Source\PSoC4/CyLib.c **** 
 121:.\Generated_Source\PSoC4/CyLib.c **** 
 122:.\Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 123:.\Generated_Source\PSoC4/CyLib.c ****         #if (CYDEV_IMO_TRIMMED_BY_USB == 1u)
 124:.\Generated_Source\PSoC4/CyLib.c ****             CySysClkImoEnableUsbLock();
 125:.\Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 1u) */
 126:.\Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 127:.\Generated_Source\PSoC4/CyLib.c **** 
 128:.\Generated_Source\PSoC4/CyLib.c **** }
  35              		.loc 1 128 0
  36              		@ sp needed
  37 000c 7047     		bx	lr
  38              	.L3:
  39 000e C046     		.align	2
  40              	.L2:
  41 0010 08010B40 		.word	1074462984
  42              		.cfi_endproc
  43              	.LFE1:
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccBBFZQS.s 			page 4


  44              		.size	CySysClkImoStart, .-CySysClkImoStart
  45              		.section	.text.CySysClkImoDisableWcoLock,"ax",%progbits
  46              		.align	2
  47              		.global	CySysClkImoDisableWcoLock
  48              		.code	16
  49              		.thumb_func
  50              		.type	CySysClkImoDisableWcoLock, %function
  51              	CySysClkImoDisableWcoLock:
  52              	.LFB4:
 129:.\Generated_Source\PSoC4/CyLib.c **** 
 130:.\Generated_Source\PSoC4/CyLib.c **** 
 131:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 132:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkImoStop
 133:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
 134:.\Generated_Source\PSoC4/CyLib.c **** *
 135:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
 136:.\Generated_Source\PSoC4/CyLib.c **** *  Disables the IMO.
 137:.\Generated_Source\PSoC4/CyLib.c **** *
 138:.\Generated_Source\PSoC4/CyLib.c **** *  For PSoC 4100M/PSoC 4200M devices, this function will also disable WCO lock.
 139:.\Generated_Source\PSoC4/CyLib.c **** *
 140:.\Generated_Source\PSoC4/CyLib.c **** *  For PSoC PSoC 4200L devices, this function will also disable USB lock.
 141:.\Generated_Source\PSoC4/CyLib.c **** *
 142:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
 143:.\Generated_Source\PSoC4/CyLib.c **** *  None
 144:.\Generated_Source\PSoC4/CyLib.c **** *
 145:.\Generated_Source\PSoC4/CyLib.c **** * Return:
 146:.\Generated_Source\PSoC4/CyLib.c **** *  None
 147:.\Generated_Source\PSoC4/CyLib.c **** *
 148:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 149:.\Generated_Source\PSoC4/CyLib.c **** void CySysClkImoStop(void)
 150:.\Generated_Source\PSoC4/CyLib.c **** {
 151:.\Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 152:.\Generated_Source\PSoC4/CyLib.c ****         CySysClkImoDisableWcoLock();
 153:.\Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 154:.\Generated_Source\PSoC4/CyLib.c **** 
 155:.\Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 156:.\Generated_Source\PSoC4/CyLib.c ****         CySysClkImoDisableUsbLock();
 157:.\Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 158:.\Generated_Source\PSoC4/CyLib.c **** 
 159:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG &= ( uint32 ) ( ~( uint32 )CY_SYS_CLK_IMO_CONFIG_ENABLE);
 160:.\Generated_Source\PSoC4/CyLib.c **** }
 161:.\Generated_Source\PSoC4/CyLib.c **** 
 162:.\Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 163:.\Generated_Source\PSoC4/CyLib.c **** 
 164:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 165:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoEnableWcoLock
 166:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
 167:.\Generated_Source\PSoC4/CyLib.c ****     *
 168:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
 169:.\Generated_Source\PSoC4/CyLib.c ****     *  Enables the IMO to WCO lock feature. This function works only if the WCO is
 170:.\Generated_Source\PSoC4/CyLib.c ****     *  already enabled. If the WCO is not enabled then this function returns
 171:.\Generated_Source\PSoC4/CyLib.c ****     *  without enabling the lock feature.
 172:.\Generated_Source\PSoC4/CyLib.c ****     *
 173:.\Generated_Source\PSoC4/CyLib.c ****     *  It takes up to 20 ms for the IMO to stabilize. The delay is implemented with
 174:.\Generated_Source\PSoC4/CyLib.c ****     *  CyDelay() function. The delay interval is measured based on the system
 175:.\Generated_Source\PSoC4/CyLib.c ****     *  frequency defined by PSoC Creator at build time. If System clock frequency
 176:.\Generated_Source\PSoC4/CyLib.c ****     *  is changed in runtime, the CyDelayFreq() with the appropriate parameter
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccBBFZQS.s 			page 5


 177:.\Generated_Source\PSoC4/CyLib.c ****     *  should be called.
 178:.\Generated_Source\PSoC4/CyLib.c ****     *
 179:.\Generated_Source\PSoC4/CyLib.c ****     *  For PSoC 4200L devices, note that the IMO can lock to either WCO or USB
 180:.\Generated_Source\PSoC4/CyLib.c ****     *  but not both.
 181:.\Generated_Source\PSoC4/CyLib.c ****     *
 182:.\Generated_Source\PSoC4/CyLib.c ****     *  This function is applicable for PSoC 4100M, PSoC 4200M and  PSoC 4200L.
 183:.\Generated_Source\PSoC4/CyLib.c ****     *
 184:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
 185:.\Generated_Source\PSoC4/CyLib.c ****     *  None
 186:.\Generated_Source\PSoC4/CyLib.c ****     *
 187:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
 188:.\Generated_Source\PSoC4/CyLib.c ****     *  None
 189:.\Generated_Source\PSoC4/CyLib.c ****     *
 190:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 191:.\Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoEnableWcoLock(void)
 192:.\Generated_Source\PSoC4/CyLib.c ****     {
 193:.\Generated_Source\PSoC4/CyLib.c ****         uint32 i;
 194:.\Generated_Source\PSoC4/CyLib.c ****         uint32 freq = CY_SYS_CLK_IMO_MIN_FREQ_MHZ;
 195:.\Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 196:.\Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
 197:.\Generated_Source\PSoC4/CyLib.c ****         uint32 lfLimit = 0u;
 198:.\Generated_Source\PSoC4/CyLib.c ****         volatile uint32 flashCtlReg;
 199:.\Generated_Source\PSoC4/CyLib.c **** 
 200:.\Generated_Source\PSoC4/CyLib.c ****         if (0u != CySysClkWcoEnabled())
 201:.\Generated_Source\PSoC4/CyLib.c ****         {
 202:.\Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 203:.\Generated_Source\PSoC4/CyLib.c **** 
 204:.\Generated_Source\PSoC4/CyLib.c ****             /* Set oscillator interface control port to WCO */
 205:.\Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB)
 206:.\Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_OSCINTF_CTL_REG =
 207:.\Generated_Source\PSoC4/CyLib.c ****                     (CY_SYS_CLK_OSCINTF_CTL_REG & (uint32) ~CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_MASK) |
 208:.\Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_WCO;
 209:.\Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB) */
 210:.\Generated_Source\PSoC4/CyLib.c **** 
 211:.\Generated_Source\PSoC4/CyLib.c ****             /* Get current IMO frequency based on the register value */
 212:.\Generated_Source\PSoC4/CyLib.c ****             for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 213:.\Generated_Source\PSoC4/CyLib.c ****             {
 214:.\Generated_Source\PSoC4/CyLib.c ****                 if ((uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS_MASK) == cyImoFreq
 215:.\Generated_Source\PSoC4/CyLib.c ****                 {
 216:.\Generated_Source\PSoC4/CyLib.c ****                     freq = i + CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET;
 217:.\Generated_Source\PSoC4/CyLib.c ****                     break;
 218:.\Generated_Source\PSoC4/CyLib.c ****                 }
 219:.\Generated_Source\PSoC4/CyLib.c ****             }
 220:.\Generated_Source\PSoC4/CyLib.c **** 
 221:.\Generated_Source\PSoC4/CyLib.c ****             /* For the WCO locking mode, the IMO gain needs to be CY_SYS_CLK_IMO_TRIM4_GAIN */
 222:.\Generated_Source\PSoC4/CyLib.c ****             if ((CY_SYS_CLK_IMO_TRIM4_REG & CY_SYS_CLK_IMO_TRIM4_GAIN_MASK) == 0u)
 223:.\Generated_Source\PSoC4/CyLib.c ****             {
 224:.\Generated_Source\PSoC4/CyLib.c **** 			    CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_GAIN_M
 225:.\Generated_Source\PSoC4/CyLib.c **** 			             				    CY_SYS_CLK_IMO_TRIM4_WCO_GAIN;
 226:.\Generated_Source\PSoC4/CyLib.c ****             }
 227:.\Generated_Source\PSoC4/CyLib.c **** 
 228:.\Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_WCO_DPLL_REG & ~(CY_SYS_CLK_WCO_DPLL_MULT_MASK |
 229:.\Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN_MASK |
 230:.\Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_PGAIN_MASK |
 231:.\Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MASK);
 232:.\Generated_Source\PSoC4/CyLib.c **** 
 233:.\Generated_Source\PSoC4/CyLib.c ****             /* Set multiplier to determine IMO frequency in multiples of the WCO frequency */
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccBBFZQS.s 			page 6


 234:.\Generated_Source\PSoC4/CyLib.c ****             regTmp |= (CY_SYS_CLK_WCO_DPLL_MULT_VALUE(freq) & CY_SYS_CLK_WCO_DPLL_MULT_MASK);
 235:.\Generated_Source\PSoC4/CyLib.c **** 
 236:.\Generated_Source\PSoC4/CyLib.c ****             /* Set DPLL Loop Filter Integral and Proportional Gains Setting */
 237:.\Generated_Source\PSoC4/CyLib.c ****             regTmp |= (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN | CY_SYS_CLK_WCO_CONFIG_DPLL_LF_PGAIN);
 238:.\Generated_Source\PSoC4/CyLib.c **** 
 239:.\Generated_Source\PSoC4/CyLib.c ****             /* Set maximum allowed IMO offset */
 240:.\Generated_Source\PSoC4/CyLib.c ****             if (freq < CY_SYS_CLK_IMO_FREQ_WCO_DPLL_SAFE_POINT)
 241:.\Generated_Source\PSoC4/CyLib.c ****             {
 242:.\Generated_Source\PSoC4/CyLib.c ****                 regTmp |= (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX << CY_SYS_CLK_WCO_CONFIG_DPLL_LF
 243:.\Generated_Source\PSoC4/CyLib.c ****             }
 244:.\Generated_Source\PSoC4/CyLib.c ****             else
 245:.\Generated_Source\PSoC4/CyLib.c ****             {
 246:.\Generated_Source\PSoC4/CyLib.c ****                 lfLimit = CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) +
 247:.\Generated_Source\PSoC4/CyLib.c ****                     cyImoFreqMhz2DpllOffset[freq - CY_SYS_CLK_IMO_FREQ_WCO_DPLL_TABLE_OFFSET];
 248:.\Generated_Source\PSoC4/CyLib.c **** 
 249:.\Generated_Source\PSoC4/CyLib.c ****                 lfLimit = (lfLimit > CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX) ?
 250:.\Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX : lfLimit;
 251:.\Generated_Source\PSoC4/CyLib.c **** 
 252:.\Generated_Source\PSoC4/CyLib.c ****                 regTmp |= (lfLimit << CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_SHIFT);
 253:.\Generated_Source\PSoC4/CyLib.c ****             }
 254:.\Generated_Source\PSoC4/CyLib.c **** 
 255:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_DPLL_REG = regTmp;
 256:.\Generated_Source\PSoC4/CyLib.c **** 
 257:.\Generated_Source\PSoC4/CyLib.c ****             flashCtlReg = CY_FLASH_CTL_REG;
 258:.\Generated_Source\PSoC4/CyLib.c ****             CySysFlashSetWaitCycles(CY_SYS_CLK_IMO_MAX_FREQ_MHZ);
 259:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_CONFIG_REG |= CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 260:.\Generated_Source\PSoC4/CyLib.c ****             CyDelay(CY_SYS_CLK_WCO_IMO_TIMEOUT_MS);
 261:.\Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CTL_REG = flashCtlReg;
 262:.\Generated_Source\PSoC4/CyLib.c **** 
 263:.\Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
 264:.\Generated_Source\PSoC4/CyLib.c ****         }
 265:.\Generated_Source\PSoC4/CyLib.c ****     }
 266:.\Generated_Source\PSoC4/CyLib.c **** 
 267:.\Generated_Source\PSoC4/CyLib.c **** 
 268:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 269:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoDisableWcoLock
 270:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
 271:.\Generated_Source\PSoC4/CyLib.c ****     *
 272:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
 273:.\Generated_Source\PSoC4/CyLib.c ****     *  Disables the IMO to WCO lock feature.
 274:.\Generated_Source\PSoC4/CyLib.c ****     *
 275:.\Generated_Source\PSoC4/CyLib.c ****     *  This function is applicable for PSoC 4100M, PSoC 4200M and  PSoC 4200L.
 276:.\Generated_Source\PSoC4/CyLib.c ****     *
 277:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
 278:.\Generated_Source\PSoC4/CyLib.c ****     *  None
 279:.\Generated_Source\PSoC4/CyLib.c ****     *
 280:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
 281:.\Generated_Source\PSoC4/CyLib.c ****     *  None
 282:.\Generated_Source\PSoC4/CyLib.c ****     *
 283:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 284:.\Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoDisableWcoLock(void)
 285:.\Generated_Source\PSoC4/CyLib.c ****     {
  53              		.loc 1 285 0
  54              		.cfi_startproc
 286:.\Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_WCO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
  55              		.loc 1 286 0
  56 0000 024A     		ldr	r2, .L5
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccBBFZQS.s 			page 7


  57 0002 1168     		ldr	r1, [r2]
  58 0004 024B     		ldr	r3, .L5+4
  59 0006 0B40     		and	r3, r1
  60 0008 1360     		str	r3, [r2]
 287:.\Generated_Source\PSoC4/CyLib.c ****     }
  61              		.loc 1 287 0
  62              		@ sp needed
  63 000a 7047     		bx	lr
  64              	.L6:
  65              		.align	2
  66              	.L5:
  67 000c 00002240 		.word	1075970048
  68 0010 FFFFFFBF 		.word	-1073741825
  69              		.cfi_endproc
  70              	.LFE4:
  71              		.size	CySysClkImoDisableWcoLock, .-CySysClkImoDisableWcoLock
  72              		.section	.text.CySysClkImoStop,"ax",%progbits
  73              		.align	2
  74              		.global	CySysClkImoStop
  75              		.code	16
  76              		.thumb_func
  77              		.type	CySysClkImoStop, %function
  78              	CySysClkImoStop:
  79              	.LFB2:
 150:.\Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
  80              		.loc 1 150 0
  81              		.cfi_startproc
  82 0000 08B5     		push	{r3, lr}
  83              		.cfi_def_cfa_offset 8
  84              		.cfi_offset 3, -8
  85              		.cfi_offset 14, -4
 152:.\Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
  86              		.loc 1 152 0
  87 0002 FFF7FEFF 		bl	CySysClkImoDisableWcoLock
  88              	.LVL0:
 159:.\Generated_Source\PSoC4/CyLib.c **** }
  89              		.loc 1 159 0
  90 0006 034A     		ldr	r2, .L8
  91 0008 1368     		ldr	r3, [r2]
  92 000a 5B00     		lsl	r3, r3, #1
  93 000c 5B08     		lsr	r3, r3, #1
  94 000e 1360     		str	r3, [r2]
 160:.\Generated_Source\PSoC4/CyLib.c **** 
  95              		.loc 1 160 0
  96              		@ sp needed
  97 0010 08BD     		pop	{r3, pc}
  98              	.L9:
  99 0012 C046     		.align	2
 100              	.L8:
 101 0014 08010B40 		.word	1074462984
 102              		.cfi_endproc
 103              	.LFE2:
 104              		.size	CySysClkImoStop, .-CySysClkImoStop
 105              		.section	.text.CySysClkImoGetWcoLock,"ax",%progbits
 106              		.align	2
 107              		.global	CySysClkImoGetWcoLock
 108              		.code	16
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccBBFZQS.s 			page 8


 109              		.thumb_func
 110              		.type	CySysClkImoGetWcoLock, %function
 111              	CySysClkImoGetWcoLock:
 112              	.LFB5:
 288:.\Generated_Source\PSoC4/CyLib.c **** 
 289:.\Generated_Source\PSoC4/CyLib.c **** 
 290:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 291:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoGetWcoLock
 292:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
 293:.\Generated_Source\PSoC4/CyLib.c ****     *
 294:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
 295:.\Generated_Source\PSoC4/CyLib.c ****     *  Reports the IMO to WCO lock enable state.
 296:.\Generated_Source\PSoC4/CyLib.c ****     *
 297:.\Generated_Source\PSoC4/CyLib.c ****     *  This function is applicable for PSoC 4100M, PSoC 4200M and  PSoC 4200L.
 298:.\Generated_Source\PSoC4/CyLib.c ****     *
 299:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
 300:.\Generated_Source\PSoC4/CyLib.c ****     *  None
 301:.\Generated_Source\PSoC4/CyLib.c ****     *
 302:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
 303:.\Generated_Source\PSoC4/CyLib.c ****     *  1 if IMO to WCO lock is enabled, and 0 if IMO to WCO lock is disabled.
 304:.\Generated_Source\PSoC4/CyLib.c ****     *
 305:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 306:.\Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoGetWcoLock(void)
 307:.\Generated_Source\PSoC4/CyLib.c ****     {
 113              		.loc 1 307 0
 114              		.cfi_startproc
 308:.\Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_WCO_CONFIG_REG & CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE)) ?
 115              		.loc 1 308 0
 116 0000 034B     		ldr	r3, .L12
 117 0002 1868     		ldr	r0, [r3]
 118 0004 8023     		mov	r3, #128
 119 0006 DB05     		lsl	r3, r3, #23
 120 0008 1840     		and	r0, r3
 309:.\Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
 121              		.loc 1 309 0
 122 000a 00D0     		beq	.L11
 123 000c 0120     		mov	r0, #1
 124              	.L11:
 310:.\Generated_Source\PSoC4/CyLib.c ****                 (uint32) 0u);
 311:.\Generated_Source\PSoC4/CyLib.c ****     }
 125              		.loc 1 311 0
 126              		@ sp needed
 127 000e 7047     		bx	lr
 128              	.L13:
 129              		.align	2
 130              	.L12:
 131 0010 00002240 		.word	1075970048
 132              		.cfi_endproc
 133              	.LFE5:
 134              		.size	CySysClkImoGetWcoLock, .-CySysClkImoGetWcoLock
 135              		.section	.text.CySysClkWriteHfclkDirect,"ax",%progbits
 136              		.align	2
 137              		.global	CySysClkWriteHfclkDirect
 138              		.code	16
 139              		.thumb_func
 140              		.type	CySysClkWriteHfclkDirect, %function
 141              	CySysClkWriteHfclkDirect:
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccBBFZQS.s 			page 9


 142              	.LFB6:
 312:.\Generated_Source\PSoC4/CyLib.c **** 
 313:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 314:.\Generated_Source\PSoC4/CyLib.c **** 
 315:.\Generated_Source\PSoC4/CyLib.c **** 
 316:.\Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 317:.\Generated_Source\PSoC4/CyLib.c **** 
 318:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 319:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoEnableUsbLock
 320:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
 321:.\Generated_Source\PSoC4/CyLib.c ****     *
 322:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
 323:.\Generated_Source\PSoC4/CyLib.c ****     *  Enables the IMO to USB lock feature.
 324:.\Generated_Source\PSoC4/CyLib.c ****     *
 325:.\Generated_Source\PSoC4/CyLib.c ****     *  This function must be called before CySysClkWriteImoFreq().
 326:.\Generated_Source\PSoC4/CyLib.c ****     *
 327:.\Generated_Source\PSoC4/CyLib.c ****     *  This function is called from CySysClkImoStart() function if USB lock
 328:.\Generated_Source\PSoC4/CyLib.c ****     *  selected in the Design Wide Resources tab.
 329:.\Generated_Source\PSoC4/CyLib.c ****     *
 330:.\Generated_Source\PSoC4/CyLib.c ****     *  This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 331:.\Generated_Source\PSoC4/CyLib.c ****     *  devices, the IMO can lock to either WCO or USB, but not both.
 332:.\Generated_Source\PSoC4/CyLib.c ****     *
 333:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
 334:.\Generated_Source\PSoC4/CyLib.c ****     *  None
 335:.\Generated_Source\PSoC4/CyLib.c ****     *
 336:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
 337:.\Generated_Source\PSoC4/CyLib.c ****     *  None
 338:.\Generated_Source\PSoC4/CyLib.c ****     *
 339:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 340:.\Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoEnableUsbLock(void)
 341:.\Generated_Source\PSoC4/CyLib.c ****     {
 342:.\Generated_Source\PSoC4/CyLib.c ****         /* Set oscillator interface control port to USB */
 343:.\Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB)
 344:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_OSCINTF_CTL_REG = (CY_SYS_CLK_OSCINTF_CTL_REG & (uint32) ~CY_SYS_CLK_OSCINTF
 345:.\Generated_Source\PSoC4/CyLib.c ****                                           CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_USB;
 346:.\Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB) */
 347:.\Generated_Source\PSoC4/CyLib.c **** 
 348:.\Generated_Source\PSoC4/CyLib.c ****         /* Save CY_SYS_CLK_IMO_TRIM4_REG and set IMO gain for USB lock */
 349:.\Generated_Source\PSoC4/CyLib.c ****         CySysClkImoTrim4 = CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_GAIN_MASK;
 350:.\Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_GAIN_
 351:.\Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_IMO_TRIM4_USB_GAIN;
 352:.\Generated_Source\PSoC4/CyLib.c **** 
 353:.\Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_USBDEVv2_CR1_REG |= CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK;
 354:.\Generated_Source\PSoC4/CyLib.c ****     }
 355:.\Generated_Source\PSoC4/CyLib.c **** 
 356:.\Generated_Source\PSoC4/CyLib.c **** 
 357:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 358:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoDisableUsbLock
 359:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
 360:.\Generated_Source\PSoC4/CyLib.c ****     *
 361:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
 362:.\Generated_Source\PSoC4/CyLib.c ****     *  Disables the IMO to USB lock feature.
 363:.\Generated_Source\PSoC4/CyLib.c ****     *
 364:.\Generated_Source\PSoC4/CyLib.c ****     *  This function is called from CySysClkImoStop() function if USB lock selected
 365:.\Generated_Source\PSoC4/CyLib.c ****     *  in the Design Wide Resources tab.
 366:.\Generated_Source\PSoC4/CyLib.c ****     *
 367:.\Generated_Source\PSoC4/CyLib.c ****     *  This is applicable for PSoC 4200L family of devices only.
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccBBFZQS.s 			page 10


 368:.\Generated_Source\PSoC4/CyLib.c ****     *
 369:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
 370:.\Generated_Source\PSoC4/CyLib.c ****     *  None
 371:.\Generated_Source\PSoC4/CyLib.c ****     *
 372:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
 373:.\Generated_Source\PSoC4/CyLib.c ****     *  None
 374:.\Generated_Source\PSoC4/CyLib.c ****     *
 375:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 376:.\Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoDisableUsbLock(void)
 377:.\Generated_Source\PSoC4/CyLib.c ****     {
 378:.\Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_USBDEVv2_CR1_REG &= (uint32) ~CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK;
 379:.\Generated_Source\PSoC4/CyLib.c **** 
 380:.\Generated_Source\PSoC4/CyLib.c ****         /* Restore CY_SYS_CLK_IMO_TRIM4_REG */
 381:.\Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_GAIN_
 382:.\Generated_Source\PSoC4/CyLib.c ****                                     CySysClkImoTrim4;
 383:.\Generated_Source\PSoC4/CyLib.c ****     }
 384:.\Generated_Source\PSoC4/CyLib.c **** 
 385:.\Generated_Source\PSoC4/CyLib.c **** 
 386:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 387:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoGetUsbLock
 388:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
 389:.\Generated_Source\PSoC4/CyLib.c ****     *
 390:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
 391:.\Generated_Source\PSoC4/CyLib.c ****     *  Reports the IMO to USB lock enable state.
 392:.\Generated_Source\PSoC4/CyLib.c ****     *
 393:.\Generated_Source\PSoC4/CyLib.c ****     *  This function is applicable for PSoC 4200L devices only.
 394:.\Generated_Source\PSoC4/CyLib.c ****     *
 395:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
 396:.\Generated_Source\PSoC4/CyLib.c ****     *  None
 397:.\Generated_Source\PSoC4/CyLib.c ****     *
 398:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
 399:.\Generated_Source\PSoC4/CyLib.c ****     *  1 if IMO to USB lock is enabled, and 0 if IMO to USB lock is disabled.
 400:.\Generated_Source\PSoC4/CyLib.c ****     *
 401:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 402:.\Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoGetUsbLock(void)
 403:.\Generated_Source\PSoC4/CyLib.c ****     {
 404:.\Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_USBDEVv2_CR1_REG & CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK)) ?
 405:.\Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
 406:.\Generated_Source\PSoC4/CyLib.c ****                 (uint32) 0u);
 407:.\Generated_Source\PSoC4/CyLib.c ****     }
 408:.\Generated_Source\PSoC4/CyLib.c **** #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 409:.\Generated_Source\PSoC4/CyLib.c **** 
 410:.\Generated_Source\PSoC4/CyLib.c **** 
 411:.\Generated_Source\PSoC4/CyLib.c **** 
 412:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 413:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteHfclkDirect
 414:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
 415:.\Generated_Source\PSoC4/CyLib.c **** *
 416:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
 417:.\Generated_Source\PSoC4/CyLib.c **** *  Selects the direct source for the HFCLK.
 418:.\Generated_Source\PSoC4/CyLib.c **** *
 419:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
 420:.\Generated_Source\PSoC4/CyLib.c **** *  clkSelect: One of the available HFCLK direct sources:
 421:.\Generated_Source\PSoC4/CyLib.c **** *   Define                    Source
 422:.\Generated_Source\PSoC4/CyLib.c **** *    CY_SYS_CLK_HFCLK_IMO     IMO
 423:.\Generated_Source\PSoC4/CyLib.c **** *    CY_SYS_CLK_HFCLK_EXTCLK  External clock pin
 424:.\Generated_Source\PSoC4/CyLib.c **** *    CY_SYS_CLK_HFCLK_ECO     External crystal oscillator
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccBBFZQS.s 			page 11


 425:.\Generated_Source\PSoC4/CyLib.c **** *                             (applicable only for PSoC 4100-BL / PSoC 4200-BL)
 426:.\Generated_Source\PSoC4/CyLib.c **** *    CY_SYS_CLK_HFCLK_PLL0    PLL#0
 427:.\Generated_Source\PSoC4/CyLib.c **** *                             (applicable only for PSoC 4200L)
 428:.\Generated_Source\PSoC4/CyLib.c **** *    CY_SYS_CLK_HFCLK_PLL1    PLL#1
 429:.\Generated_Source\PSoC4/CyLib.c **** *                             (applicable only for PSoC 4200L)
 430:.\Generated_Source\PSoC4/CyLib.c **** *
 431:.\Generated_Source\PSoC4/CyLib.c **** * Return:
 432:.\Generated_Source\PSoC4/CyLib.c **** *  None
 433:.\Generated_Source\PSoC4/CyLib.c **** *
 434:.\Generated_Source\PSoC4/CyLib.c **** * Side Effects:
 435:.\Generated_Source\PSoC4/CyLib.c **** *  The new source must be running and stable before calling this function.
 436:.\Generated_Source\PSoC4/CyLib.c **** *
 437:.\Generated_Source\PSoC4/CyLib.c **** *  PSoC 4000:
 438:.\Generated_Source\PSoC4/CyLib.c **** *  The SYSCLK has a maximum speed of 16 MHz, so HFCLK and SYSCLK dividers should
 439:.\Generated_Source\PSoC4/CyLib.c **** *  be selected in a way to not to exceed 16 MHz for the System clock.
 440:.\Generated_Source\PSoC4/CyLib.c **** *
 441:.\Generated_Source\PSoC4/CyLib.c **** *  If the SYSCLK clock frequency increases during device operation, call
 442:.\Generated_Source\PSoC4/CyLib.c **** *  CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
 443:.\Generated_Source\PSoC4/CyLib.c **** *  of clock cycles the cache will wait before sampling data comes back from
 444:.\Generated_Source\PSoC4/CyLib.c **** *  Flash. If the SYSCLK clock frequency decreases, you can call
 445:.\Generated_Source\PSoC4/CyLib.c **** *  CySysFlashSetWaitCycles() to improve the CPU performance. See
 446:.\Generated_Source\PSoC4/CyLib.c **** *  CySysFlashSetWaitCycles() description for more information.
 447:.\Generated_Source\PSoC4/CyLib.c **** *
 448:.\Generated_Source\PSoC4/CyLib.c **** *  Do not select PLL as the source for HFCLK if PLL output frequency exceeds
 449:.\Generated_Source\PSoC4/CyLib.c **** *  maximum permissible value for HFCLK.
 450:.\Generated_Source\PSoC4/CyLib.c **** *
 451:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 452:.\Generated_Source\PSoC4/CyLib.c **** void CySysClkWriteHfclkDirect(uint32 clkSelect)
 453:.\Generated_Source\PSoC4/CyLib.c **** {
 143              		.loc 1 453 0
 144              		.cfi_startproc
 145              	.LVL1:
 146 0000 10B5     		push	{r4, lr}
 147              		.cfi_def_cfa_offset 8
 148              		.cfi_offset 4, -8
 149              		.cfi_offset 14, -4
 150 0002 041C     		mov	r4, r0
 454:.\Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 455:.\Generated_Source\PSoC4/CyLib.c ****     uint32 tmpReg;
 456:.\Generated_Source\PSoC4/CyLib.c **** 
 457:.\Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 151              		.loc 1 457 0
 152 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 153              	.LVL2:
 458:.\Generated_Source\PSoC4/CyLib.c **** 
 459:.\Generated_Source\PSoC4/CyLib.c **** 
 460:.\Generated_Source\PSoC4/CyLib.c ****     tmpReg = CY_SYS_CLK_SELECT_REG & ~(CY_SYS_CLK_SELECT_DIRECT_SEL_MASK |
 154              		.loc 1 460 0
 155 0008 0449     		ldr	r1, .L15
 156 000a 0A68     		ldr	r2, [r1]
 157 000c 0723     		mov	r3, #7
 158 000e 9A43     		bic	r2, r3
 159              	.LVL3:
 461:.\Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 462:.\Generated_Source\PSoC4/CyLib.c **** 
 463:.\Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
 464:.\Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_HFCLK_PLL0 == clkSelect) || (CY_SYS_CLK_HFCLK_PLL1 == clkSelect))
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccBBFZQS.s 			page 12


 465:.\Generated_Source\PSoC4/CyLib.c ****     {
 466:.\Generated_Source\PSoC4/CyLib.c ****         tmpReg |= (clkSelect & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 467:.\Generated_Source\PSoC4/CyLib.c ****     }
 468:.\Generated_Source\PSoC4/CyLib.c ****     else
 469:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
 470:.\Generated_Source\PSoC4/CyLib.c ****     {
 471:.\Generated_Source\PSoC4/CyLib.c ****         tmpReg |= (clkSelect & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK);
 160              		.loc 1 471 0
 161 0010 2340     		and	r3, r4
 162 0012 1343     		orr	r3, r2
 163              	.LVL4:
 472:.\Generated_Source\PSoC4/CyLib.c ****     }
 473:.\Generated_Source\PSoC4/CyLib.c **** 
 474:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = tmpReg;
 164              		.loc 1 474 0
 165 0014 0B60     		str	r3, [r1]
 475:.\Generated_Source\PSoC4/CyLib.c **** 
 476:.\Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 166              		.loc 1 476 0
 167 0016 FFF7FEFF 		bl	CyExitCriticalSection
 168              	.LVL5:
 477:.\Generated_Source\PSoC4/CyLib.c **** }
 169              		.loc 1 477 0
 170              		@ sp needed
 171              	.LVL6:
 172 001a 10BD     		pop	{r4, pc}
 173              	.L16:
 174              		.align	2
 175              	.L15:
 176 001c 00010B40 		.word	1074462976
 177              		.cfi_endproc
 178              	.LFE6:
 179              		.size	CySysClkWriteHfclkDirect, .-CySysClkWriteHfclkDirect
 180              		.section	.text.CySysClkGetSysclkSource,"ax",%progbits
 181              		.align	2
 182              		.global	CySysClkGetSysclkSource
 183              		.code	16
 184              		.thumb_func
 185              		.type	CySysClkGetSysclkSource, %function
 186              	CySysClkGetSysclkSource:
 187              	.LFB7:
 478:.\Generated_Source\PSoC4/CyLib.c **** 
 479:.\Generated_Source\PSoC4/CyLib.c **** 
 480:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 481:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkGetSysclkSource
 482:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
 483:.\Generated_Source\PSoC4/CyLib.c **** *
 484:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
 485:.\Generated_Source\PSoC4/CyLib.c **** *  Returns the source of the System clock.
 486:.\Generated_Source\PSoC4/CyLib.c **** *
 487:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
 488:.\Generated_Source\PSoC4/CyLib.c **** *  None
 489:.\Generated_Source\PSoC4/CyLib.c **** *
 490:.\Generated_Source\PSoC4/CyLib.c **** * Return:
 491:.\Generated_Source\PSoC4/CyLib.c **** *  The same as CySysClkWriteHfclkDirect() function parameters.
 492:.\Generated_Source\PSoC4/CyLib.c **** *
 493:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccBBFZQS.s 			page 13


 494:.\Generated_Source\PSoC4/CyLib.c **** uint32 CySysClkGetSysclkSource(void)
 495:.\Generated_Source\PSoC4/CyLib.c **** {
 188              		.loc 1 495 0
 189              		.cfi_startproc
 190 0000 10B5     		push	{r4, lr}
 191              		.cfi_def_cfa_offset 8
 192              		.cfi_offset 4, -8
 193              		.cfi_offset 14, -4
 496:.\Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 497:.\Generated_Source\PSoC4/CyLib.c ****     uint32 sysclkSource;
 498:.\Generated_Source\PSoC4/CyLib.c **** 
 499:.\Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 194              		.loc 1 499 0
 195 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 196              	.LVL7:
 500:.\Generated_Source\PSoC4/CyLib.c **** 
 501:.\Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
 502:.\Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK) != 0u)
 503:.\Generated_Source\PSoC4/CyLib.c ****     {
 504:.\Generated_Source\PSoC4/CyLib.c ****         sysclkSource = (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 505:.\Generated_Source\PSoC4/CyLib.c ****     }
 506:.\Generated_Source\PSoC4/CyLib.c ****     else
 507:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
 508:.\Generated_Source\PSoC4/CyLib.c ****     {
 509:.\Generated_Source\PSoC4/CyLib.c ****         sysclkSource = (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK);
 197              		.loc 1 509 0
 198 0006 044B     		ldr	r3, .L18
 199 0008 1B68     		ldr	r3, [r3]
 200 000a 0724     		mov	r4, #7
 201 000c 1C40     		and	r4, r3
 202              	.LVL8:
 510:.\Generated_Source\PSoC4/CyLib.c ****     }
 511:.\Generated_Source\PSoC4/CyLib.c **** 
 512:.\Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 203              		.loc 1 512 0
 204 000e FFF7FEFF 		bl	CyExitCriticalSection
 205              	.LVL9:
 513:.\Generated_Source\PSoC4/CyLib.c **** 
 514:.\Generated_Source\PSoC4/CyLib.c ****     return (sysclkSource);
 515:.\Generated_Source\PSoC4/CyLib.c **** }
 206              		.loc 1 515 0
 207 0012 201C     		mov	r0, r4
 208              		@ sp needed
 209              	.LVL10:
 210 0014 10BD     		pop	{r4, pc}
 211              	.L19:
 212 0016 C046     		.align	2
 213              	.L18:
 214 0018 00010B40 		.word	1074462976
 215              		.cfi_endproc
 216              	.LFE7:
 217              		.size	CySysClkGetSysclkSource, .-CySysClkGetSysclkSource
 218              		.section	.text.CySysClkWriteSysclkDiv,"ax",%progbits
 219              		.align	2
 220              		.global	CySysClkWriteSysclkDiv
 221              		.code	16
 222              		.thumb_func
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccBBFZQS.s 			page 14


 223              		.type	CySysClkWriteSysclkDiv, %function
 224              	CySysClkWriteSysclkDiv:
 225              	.LFB8:
 516:.\Generated_Source\PSoC4/CyLib.c **** 
 517:.\Generated_Source\PSoC4/CyLib.c **** 
 518:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 519:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteSysclkDiv
 520:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
 521:.\Generated_Source\PSoC4/CyLib.c **** *
 522:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
 523:.\Generated_Source\PSoC4/CyLib.c **** *  Selects the prescaler divide amount for SYSCLK from HFCLK.
 524:.\Generated_Source\PSoC4/CyLib.c **** *
 525:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
 526:.\Generated_Source\PSoC4/CyLib.c **** *  divider: Power of 2 prescaler selection
 527:.\Generated_Source\PSoC4/CyLib.c **** *
 528:.\Generated_Source\PSoC4/CyLib.c **** *   Define                        Description
 529:.\Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_CLK_SYSCLK_DIV1        SYSCLK = HFCLK / 1
 530:.\Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_CLK_SYSCLK_DIV2        SYSCLK = HFCLK / 2
 531:.\Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_CLK_SYSCLK_DIV4        SYSCLK = HFCLK / 4
 532:.\Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_CLK_SYSCLK_DIV8        SYSCLK = HFCLK / 8
 533:.\Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_CLK_SYSCLK_DIV16       SYSCLK = HFCLK / 16  (N/A for 4000 Family)
 534:.\Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_CLK_SYSCLK_DIV32       SYSCLK = HFCLK / 32  (N/A for 4000 Family)
 535:.\Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_CLK_SYSCLK_DIV64       SYSCLK = HFCLK / 64  (N/A for 4000 Family)
 536:.\Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_CLK_SYSCLK_DIV128      SYSCLK = HFCLK / 128 (N/A for 4000 Family)
 537:.\Generated_Source\PSoC4/CyLib.c **** *
 538:.\Generated_Source\PSoC4/CyLib.c **** * Return:
 539:.\Generated_Source\PSoC4/CyLib.c **** *  None
 540:.\Generated_Source\PSoC4/CyLib.c **** *
 541:.\Generated_Source\PSoC4/CyLib.c **** * Side Effects:
 542:.\Generated_Source\PSoC4/CyLib.c **** *  4000 Family:
 543:.\Generated_Source\PSoC4/CyLib.c **** *  The SYS_CLK has the speed of 16 MHz, so dividers HF_CLK and SYS_CLK
 544:.\Generated_Source\PSoC4/CyLib.c **** *  dividers should be selected in a way, not to exceed 16 MHz for SYS_CLK.
 545:.\Generated_Source\PSoC4/CyLib.c **** *
 546:.\Generated_Source\PSoC4/CyLib.c **** *  If the SYSCLK clock frequency increases during the device operation, call
 547:.\Generated_Source\PSoC4/CyLib.c **** *  CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
 548:.\Generated_Source\PSoC4/CyLib.c **** *  of clock cycles the cache will wait before sampling data comes back from
 549:.\Generated_Source\PSoC4/CyLib.c **** *  Flash. If the SYSCLK clock frequency decreases, you can call
 550:.\Generated_Source\PSoC4/CyLib.c **** *  CySysFlashSetWaitCycles() to improve the CPU performance. See
 551:.\Generated_Source\PSoC4/CyLib.c **** *  CySysFlashSetWaitCycles() description for more information.
 552:.\Generated_Source\PSoC4/CyLib.c **** *
 553:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 554:.\Generated_Source\PSoC4/CyLib.c **** void CySysClkWriteSysclkDiv(uint32 divider)
 555:.\Generated_Source\PSoC4/CyLib.c **** {
 226              		.loc 1 555 0
 227              		.cfi_startproc
 228              	.LVL11:
 229 0000 10B5     		push	{r4, lr}
 230              		.cfi_def_cfa_offset 8
 231              		.cfi_offset 4, -8
 232              		.cfi_offset 14, -4
 233 0002 041C     		mov	r4, r0
 556:.\Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 557:.\Generated_Source\PSoC4/CyLib.c **** 
 558:.\Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 234              		.loc 1 558 0
 235 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 236              	.LVL12:
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccBBFZQS.s 			page 15


 559:.\Generated_Source\PSoC4/CyLib.c **** 
 560:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = ((uint32)(((uint32)divider & CY_SYS_CLK_SELECT_SYSCLK_DIV_MASK) <<
 237              		.loc 1 560 0
 238 0008 0723     		mov	r3, #7
 239 000a 1C40     		and	r4, r3
 240              	.LVL13:
 241 000c E404     		lsl	r4, r4, #19
 561:.\Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 562:.\Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_CLK_SELECT_REG & ((uint32)(~(uint32)(CY_SYS_CLK_SELECT_SYSCLK_D
 242              		.loc 1 562 0
 243 000e 0449     		ldr	r1, .L21
 244 0010 0B68     		ldr	r3, [r1]
 245 0012 044A     		ldr	r2, .L21+4
 246 0014 1340     		and	r3, r2
 561:.\Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 247              		.loc 1 561 0
 248 0016 2343     		orr	r3, r4
 560:.\Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 249              		.loc 1 560 0
 250 0018 0B60     		str	r3, [r1]
 563:.\Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT))));
 564:.\Generated_Source\PSoC4/CyLib.c **** 
 565:.\Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 251              		.loc 1 565 0
 252 001a FFF7FEFF 		bl	CyExitCriticalSection
 253              	.LVL14:
 566:.\Generated_Source\PSoC4/CyLib.c **** }
 254              		.loc 1 566 0
 255              		@ sp needed
 256 001e 10BD     		pop	{r4, pc}
 257              	.L22:
 258              		.align	2
 259              	.L21:
 260 0020 00010B40 		.word	1074462976
 261 0024 FFFFC7FF 		.word	-3670017
 262              		.cfi_endproc
 263              	.LFE8:
 264              		.size	CySysClkWriteSysclkDiv, .-CySysClkWriteSysclkDiv
 265              		.section	.text.CySysLvdDisable,"ax",%progbits
 266              		.align	2
 267              		.global	CySysLvdDisable
 268              		.code	16
 269              		.thumb_func
 270              		.type	CySysLvdDisable, %function
 271              	CySysLvdDisable:
 272              	.LFB11:
 567:.\Generated_Source\PSoC4/CyLib.c **** 
 568:.\Generated_Source\PSoC4/CyLib.c **** 
 569:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 570:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteImoFreq
 571:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
 572:.\Generated_Source\PSoC4/CyLib.c **** *
 573:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
 574:.\Generated_Source\PSoC4/CyLib.c **** *  Sets the frequency of the IMO.
 575:.\Generated_Source\PSoC4/CyLib.c **** *
 576:.\Generated_Source\PSoC4/CyLib.c **** *  If IMO is currently driving the HFCLK, and if the HFCLK frequency decreases,
 577:.\Generated_Source\PSoC4/CyLib.c **** *  you can call CySysFlashSetWaitCycles () to improve CPU performance. See
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccBBFZQS.s 			page 16


 578:.\Generated_Source\PSoC4/CyLib.c **** *  CySysFlashSetWaitCycles () for more information.
 579:.\Generated_Source\PSoC4/CyLib.c **** *
 580:.\Generated_Source\PSoC4/CyLib.c **** *  For PSoC 4000 family of devices, maximum HFCLK frequency is 16 MHz. If IMO is
 581:.\Generated_Source\PSoC4/CyLib.c **** *  configured to frequencies above 16 MHz, ensure to set the appropriate HFCLK
 582:.\Generated_Source\PSoC4/CyLib.c **** *  predivider value first.
 583:.\Generated_Source\PSoC4/CyLib.c **** *
 584:.\Generated_Source\PSoC4/CyLib.c **** *  For PSoC 4200M and PSoC 4200L device families, if WCO lock feature is enabled
 585:.\Generated_Source\PSoC4/CyLib.c **** *  then this API will disable the lock, write the new IMO frequency and then
 586:.\Generated_Source\PSoC4/CyLib.c **** *  re-enable the lock.
 587:.\Generated_Source\PSoC4/CyLib.c **** *
 588:.\Generated_Source\PSoC4/CyLib.c **** *  For PSoC 4200L device families, this function enables the USB lock when 24 or
 589:.\Generated_Source\PSoC4/CyLib.c **** *  48 MHz passed as a parameter if the USB lock option is enabled in Design Wide
 590:.\Generated_Source\PSoC4/CyLib.c **** *  Resources tab or CySysClkImoEnableUsbLock() was called before. Note the USB
 591:.\Generated_Source\PSoC4/CyLib.c **** *  lock is disabled during IMO frequency change.
 592:.\Generated_Source\PSoC4/CyLib.c **** *
 593:.\Generated_Source\PSoC4/CyLib.c **** *  Note: The CPU is halted if new frequency is invalid and project is compiled
 594:.\Generated_Source\PSoC4/CyLib.c **** *  in debug mode.
 595:.\Generated_Source\PSoC4/CyLib.c **** *
 596:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
 597:.\Generated_Source\PSoC4/CyLib.c **** *  All PSoC 4 families excluding PSoC 4000: Valid range [3-48] with step size
 598:.\Generated_Source\PSoC4/CyLib.c **** *  equals 1.
 599:.\Generated_Source\PSoC4/CyLib.c **** *
 600:.\Generated_Source\PSoC4/CyLib.c **** *  PSoC 4000: Valid range [24-48] with step size equals 4.
 601:.\Generated_Source\PSoC4/CyLib.c **** *
 602:.\Generated_Source\PSoC4/CyLib.c **** *  Note: The CPU is halted if new frequency is invalid and project is
 603:.\Generated_Source\PSoC4/CyLib.c **** *  compiled in debug mode.
 604:.\Generated_Source\PSoC4/CyLib.c **** *
 605:.\Generated_Source\PSoC4/CyLib.c **** * Return:
 606:.\Generated_Source\PSoC4/CyLib.c **** *  None
 607:.\Generated_Source\PSoC4/CyLib.c **** *
 608:.\Generated_Source\PSoC4/CyLib.c **** * Side Effects:
 609:.\Generated_Source\PSoC4/CyLib.c **** *  If the SYSCLK clock frequency increases during the device operation, call
 610:.\Generated_Source\PSoC4/CyLib.c **** *  CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
 611:.\Generated_Source\PSoC4/CyLib.c **** *  of clock cycles the cache will wait before sampling data comes back from
 612:.\Generated_Source\PSoC4/CyLib.c **** *  Flash. If the SYSCLK clock frequency decreases, you can call
 613:.\Generated_Source\PSoC4/CyLib.c **** *  CySysFlashSetWaitCycles() to improve the CPU performance. See
 614:.\Generated_Source\PSoC4/CyLib.c **** *  CySysFlashSetWaitCycles() description for more information.
 615:.\Generated_Source\PSoC4/CyLib.c **** *
 616:.\Generated_Source\PSoC4/CyLib.c **** *  PSoC 4000: The System Clock (SYSCLK) has maximum speed of 16 MHz, so HFCLK
 617:.\Generated_Source\PSoC4/CyLib.c **** *  and SYSCLK dividers should be selected in a way, to not to exceed 16 MHz for
 618:.\Generated_Source\PSoC4/CyLib.c **** *  the System clock.
 619:.\Generated_Source\PSoC4/CyLib.c **** *
 620:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 621:.\Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
 622:.\Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteImoFreq(uint32 freq)
 623:.\Generated_Source\PSoC4/CyLib.c ****     {
 624:.\Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 625:.\Generated_Source\PSoC4/CyLib.c ****             volatile uint32   parameters[2u];
 626:.\Generated_Source\PSoC4/CyLib.c ****             volatile uint32   regValues[4u];
 627:.\Generated_Source\PSoC4/CyLib.c ****         #else
 628:.\Generated_Source\PSoC4/CyLib.c ****             uint8  bgTrim4;
 629:.\Generated_Source\PSoC4/CyLib.c ****             uint8  bgTrim5;
 630:.\Generated_Source\PSoC4/CyLib.c ****             uint8  newImoTrim2Value;
 631:.\Generated_Source\PSoC4/CyLib.c ****             uint8  currentImoTrim2Value;
 632:.\Generated_Source\PSoC4/CyLib.c ****             uint8  imoTrim1Value;
 633:.\Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_FM) */
 634:.\Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccBBFZQS.s 			page 17


 635:.\Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 636:.\Generated_Source\PSoC4/CyLib.c ****             uint32 wcoLock = 0u;
 637:.\Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 638:.\Generated_Source\PSoC4/CyLib.c **** 
 639:.\Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 640:.\Generated_Source\PSoC4/CyLib.c ****             uint32 usbLock = 0u;
 641:.\Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 642:.\Generated_Source\PSoC4/CyLib.c **** 
 643:.\Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 644:.\Generated_Source\PSoC4/CyLib.c **** 
 645:.\Generated_Source\PSoC4/CyLib.c **** 
 646:.\Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 647:.\Generated_Source\PSoC4/CyLib.c **** 
 648:.\Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 649:.\Generated_Source\PSoC4/CyLib.c ****             if(0u != CySysClkImoGetWcoLock())
 650:.\Generated_Source\PSoC4/CyLib.c ****             {
 651:.\Generated_Source\PSoC4/CyLib.c ****                 wcoLock = 1u;
 652:.\Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoDisableWcoLock();
 653:.\Generated_Source\PSoC4/CyLib.c ****             }
 654:.\Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 655:.\Generated_Source\PSoC4/CyLib.c **** 
 656:.\Generated_Source\PSoC4/CyLib.c **** 
 657:.\Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 658:.\Generated_Source\PSoC4/CyLib.c **** 
 659:.\Generated_Source\PSoC4/CyLib.c ****             #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 660:.\Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkImoGetUsbLock())
 661:.\Generated_Source\PSoC4/CyLib.c ****                 {
 662:.\Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 663:.\Generated_Source\PSoC4/CyLib.c **** 
 664:.\Generated_Source\PSoC4/CyLib.c ****                 if ((24u == freq) || (48u == freq))
 665:.\Generated_Source\PSoC4/CyLib.c ****                 {
 666:.\Generated_Source\PSoC4/CyLib.c ****                     usbLock = 1u;
 667:.\Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoDisableUsbLock();
 668:.\Generated_Source\PSoC4/CyLib.c ****                 }
 669:.\Generated_Source\PSoC4/CyLib.c **** 
 670:.\Generated_Source\PSoC4/CyLib.c ****             #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 671:.\Generated_Source\PSoC4/CyLib.c ****                 }
 672:.\Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 673:.\Generated_Source\PSoC4/CyLib.c **** 
 674:.\Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 675:.\Generated_Source\PSoC4/CyLib.c **** 
 676:.\Generated_Source\PSoC4/CyLib.c **** 
 677:.\Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 678:.\Generated_Source\PSoC4/CyLib.c **** 
 679:.\Generated_Source\PSoC4/CyLib.c ****             /* FM-Lite Clock Restore */
 680:.\Generated_Source\PSoC4/CyLib.c ****             regValues[0u] = CY_SYS_CLK_IMO_CONFIG_REG;
 681:.\Generated_Source\PSoC4/CyLib.c ****             regValues[1u] = CY_SYS_CLK_SELECT_REG;
 682:.\Generated_Source\PSoC4/CyLib.c ****             regValues[2u] = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 683:.\Generated_Source\PSoC4/CyLib.c ****             regValues[3u] = CY_FLASH_CTL_REG;
 684:.\Generated_Source\PSoC4/CyLib.c **** 
 685:.\Generated_Source\PSoC4/CyLib.c ****             parameters[0u] =
 686:.\Generated_Source\PSoC4/CyLib.c ****                 (uint32) ((CY_FLASH_KEY_TWO(CY_FLASH_API_OPCODE_CLK_RESTORE) <<  CY_FLASH_PARAM_KEY
 687:.\Generated_Source\PSoC4/CyLib.c ****                             CY_FLASH_KEY_ONE);
 688:.\Generated_Source\PSoC4/CyLib.c ****             parameters[1u] = (uint32) &regValues[0u];
 689:.\Generated_Source\PSoC4/CyLib.c **** 
 690:.\Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSARG_REG = (uint32) &parameters[0u];
 691:.\Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_CLK_RESTORE;
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccBBFZQS.s 			page 18


 692:.\Generated_Source\PSoC4/CyLib.c ****             (void) CY_FLASH_CPUSS_SYSARG_REG;
 693:.\Generated_Source\PSoC4/CyLib.c **** 
 694:.\Generated_Source\PSoC4/CyLib.c ****         #else /* (CY_IP_FM) */
 695:.\Generated_Source\PSoC4/CyLib.c **** 
 696:.\Generated_Source\PSoC4/CyLib.c ****         if ((freq >= CY_SYS_CLK_IMO_MIN_FREQ_MHZ) && (freq <= CY_SYS_CLK_IMO_MAX_FREQ_MHZ))
 697:.\Generated_Source\PSoC4/CyLib.c ****         {
 698:.\Generated_Source\PSoC4/CyLib.c ****             if(freq <= CY_SFLASH_IMO_MAXF0_REG)
 699:.\Generated_Source\PSoC4/CyLib.c ****             {
 700:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS0_REG;
 701:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO0_REG;
 702:.\Generated_Source\PSoC4/CyLib.c ****             }
 703:.\Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF1_REG)
 704:.\Generated_Source\PSoC4/CyLib.c ****             {
 705:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS1_REG;
 706:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO1_REG;
 707:.\Generated_Source\PSoC4/CyLib.c ****             }
 708:.\Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF2_REG)
 709:.\Generated_Source\PSoC4/CyLib.c ****             {
 710:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS2_REG;
 711:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO2_REG;
 712:.\Generated_Source\PSoC4/CyLib.c ****             }
 713:.\Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF3_REG)
 714:.\Generated_Source\PSoC4/CyLib.c ****             {
 715:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS3_REG;
 716:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO3_REG;
 717:.\Generated_Source\PSoC4/CyLib.c ****             }
 718:.\Generated_Source\PSoC4/CyLib.c ****             else
 719:.\Generated_Source\PSoC4/CyLib.c ****             {
 720:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS4_REG;
 721:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO4_REG;
 722:.\Generated_Source\PSoC4/CyLib.c ****             }
 723:.\Generated_Source\PSoC4/CyLib.c **** 
 724:.\Generated_Source\PSoC4/CyLib.c ****             /* Get IMO_TRIM2 value for the new frequency */
 725:.\Generated_Source\PSoC4/CyLib.c ****             newImoTrim2Value = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 726:.\Generated_Source\PSoC4/CyLib.c **** 
 727:.\Generated_Source\PSoC4/CyLib.c **** 
 728:.\Generated_Source\PSoC4/CyLib.c ****             /****************************************************************************
 729:.\Generated_Source\PSoC4/CyLib.c ****             * The IMO can have a different trim per frequency. To avoid possible corner
 730:.\Generated_Source\PSoC4/CyLib.c ****             * cases where a trim change can exceed the maximum frequency, the trim must
 731:.\Generated_Source\PSoC4/CyLib.c ****             * be applied at a frequency that is low enough.
 732:.\Generated_Source\PSoC4/CyLib.c ****             *
 733:.\Generated_Source\PSoC4/CyLib.c ****             * Comparing IMO_TRIM2 values for the current and new frequencies, since
 734:.\Generated_Source\PSoC4/CyLib.c ****             * IMO_TRIM2 value as a function of IMO frequency is a strictly increasing
 735:.\Generated_Source\PSoC4/CyLib.c ****             * function and is time-invariant.
 736:.\Generated_Source\PSoC4/CyLib.c ****             ***************************************************************************/
 737:.\Generated_Source\PSoC4/CyLib.c ****             if ((newImoTrim2Value >= CY_SYS_CLK_IMO_BOUNDARY_FREQ_TRIM2) && (freq >= CY_SYS_CLK_IMO
 738:.\Generated_Source\PSoC4/CyLib.c ****             {
 739:.\Generated_Source\PSoC4/CyLib.c ****                 /* Set boundary IMO frequency: safe for IMO above 48 MHZ trimming */
 740:.\Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = (uint32) cyImoFreqMhz2Reg[CY_SYS_CLK_IMO_TEMP_FREQ_MHZ -
 741:.\Generated_Source\PSoC4/CyLib.c ****                                                                      CY_SYS_CLK_IMO_FREQ_TABLE_OFFS
 742:.\Generated_Source\PSoC4/CyLib.c **** 
 743:.\Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 744:.\Generated_Source\PSoC4/CyLib.c **** 
 745:.\Generated_Source\PSoC4/CyLib.c ****                 currentImoTrim2Value = CY_SYS_CLK_IMO_TEMP_FREQ_TRIM2;
 746:.\Generated_Source\PSoC4/CyLib.c ****             }
 747:.\Generated_Source\PSoC4/CyLib.c ****             else
 748:.\Generated_Source\PSoC4/CyLib.c ****             {
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccBBFZQS.s 			page 19


 749:.\Generated_Source\PSoC4/CyLib.c ****                 currentImoTrim2Value = (uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS
 750:.\Generated_Source\PSoC4/CyLib.c ****             }
 751:.\Generated_Source\PSoC4/CyLib.c **** 
 752:.\Generated_Source\PSoC4/CyLib.c **** 
 753:.\Generated_Source\PSoC4/CyLib.c ****             /***************************************************************************
 754:.\Generated_Source\PSoC4/CyLib.c ****             * A trim change needs to be allowed to settle (within 5us) before the Freq
 755:.\Generated_Source\PSoC4/CyLib.c ****             * can be changed to a new frequency.
 756:.\Generated_Source\PSoC4/CyLib.c ****             *
 757:.\Generated_Source\PSoC4/CyLib.c ****             * Comparing IMO_TRIM2 values for the current and new frequencies, since
 758:.\Generated_Source\PSoC4/CyLib.c ****             * IMO_TRIM2 value as a function of IMO frequency is a strictly increasing
 759:.\Generated_Source\PSoC4/CyLib.c ****             * function and is time-invariant.
 760:.\Generated_Source\PSoC4/CyLib.c ****             ***************************************************************************/
 761:.\Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value < currentImoTrim2Value)
 762:.\Generated_Source\PSoC4/CyLib.c ****             {
 763:.\Generated_Source\PSoC4/CyLib.c ****                 /* Set new IMO frequency */
 764:.\Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
 765:.\Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 766:.\Generated_Source\PSoC4/CyLib.c ****             }
 767:.\Generated_Source\PSoC4/CyLib.c **** 
 768:.\Generated_Source\PSoC4/CyLib.c ****             /* Set trims for the new IMO frequency */
 769:.\Generated_Source\PSoC4/CyLib.c **** 
 770:.\Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 771:.\Generated_Source\PSoC4/CyLib.c ****                 if ((1u == usbLock) && (48u == freq))
 772:.\Generated_Source\PSoC4/CyLib.c ****                 {
 773:.\Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_48_REG;
 774:.\Generated_Source\PSoC4/CyLib.c ****                 }
 775:.\Generated_Source\PSoC4/CyLib.c ****                 else if ((1u == usbLock) && (24u == freq))
 776:.\Generated_Source\PSoC4/CyLib.c ****                 {
 777:.\Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_24_REG;
 778:.\Generated_Source\PSoC4/CyLib.c ****                 }
 779:.\Generated_Source\PSoC4/CyLib.c ****                 else
 780:.\Generated_Source\PSoC4/CyLib.c ****                 {
 781:.\Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_TABLE
 782:.\Generated_Source\PSoC4/CyLib.c ****                 }
 783:.\Generated_Source\PSoC4/CyLib.c ****             #else
 784:.\Generated_Source\PSoC4/CyLib.c ****                 imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFF
 785:.\Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 786:.\Generated_Source\PSoC4/CyLib.c **** 
 787:.\Generated_Source\PSoC4/CyLib.c **** 
 788:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = (uint32) imoTrim1Value;
 789:.\Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM4_REG  = bgTrim4;
 790:.\Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM5_REG  = bgTrim5;
 791:.\Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_IMO_TRIM_TIMEOUT_US);
 792:.\Generated_Source\PSoC4/CyLib.c **** 
 793:.\Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value > currentImoTrim2Value)
 794:.\Generated_Source\PSoC4/CyLib.c ****             {
 795:.\Generated_Source\PSoC4/CyLib.c ****                 /* Set new IMO frequency */
 796:.\Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
 797:.\Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 798:.\Generated_Source\PSoC4/CyLib.c ****             }
 799:.\Generated_Source\PSoC4/CyLib.c ****         }
 800:.\Generated_Source\PSoC4/CyLib.c ****         else
 801:.\Generated_Source\PSoC4/CyLib.c ****         {
 802:.\Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if new frequency is invalid */
 803:.\Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
 804:.\Generated_Source\PSoC4/CyLib.c ****         }
 805:.\Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccBBFZQS.s 			page 20


 806:.\Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_FMLT) */
 807:.\Generated_Source\PSoC4/CyLib.c **** 
 808:.\Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 809:.\Generated_Source\PSoC4/CyLib.c ****             if (1u == wcoLock)
 810:.\Generated_Source\PSoC4/CyLib.c ****             {
 811:.\Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoEnableWcoLock();
 812:.\Generated_Source\PSoC4/CyLib.c ****             }
 813:.\Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 814:.\Generated_Source\PSoC4/CyLib.c **** 
 815:.\Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 816:.\Generated_Source\PSoC4/CyLib.c ****             if (1u == usbLock)
 817:.\Generated_Source\PSoC4/CyLib.c ****             {
 818:.\Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoEnableUsbLock();
 819:.\Generated_Source\PSoC4/CyLib.c ****             }
 820:.\Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 821:.\Generated_Source\PSoC4/CyLib.c **** 
 822:.\Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 823:.\Generated_Source\PSoC4/CyLib.c ****     }
 824:.\Generated_Source\PSoC4/CyLib.c **** 
 825:.\Generated_Source\PSoC4/CyLib.c **** #else
 826:.\Generated_Source\PSoC4/CyLib.c **** 
 827:.\Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteImoFreq(uint32 freq)
 828:.\Generated_Source\PSoC4/CyLib.c ****     {
 829:.\Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 830:.\Generated_Source\PSoC4/CyLib.c **** 
 831:.\Generated_Source\PSoC4/CyLib.c ****         if ((freq == 24u) || (freq == 32u) || (freq == 48u))
 832:.\Generated_Source\PSoC4/CyLib.c ****         {
 833:.\Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 834:.\Generated_Source\PSoC4/CyLib.c **** 
 835:.\Generated_Source\PSoC4/CyLib.c ****             /* Set IMO to 24 MHz - CLK_IMO_SELECT.FREQ = 0 */
 836:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_SELECT_REG &= ((uint32) ~CY_SYS_CLK_IMO_SELECT_FREQ_MASK);
 837:.\Generated_Source\PSoC4/CyLib.c **** 
 838:.\Generated_Source\PSoC4/CyLib.c ****             /* Apply coarse trim */
 839:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = (CY_SYS_CLK_IMO_TRIM1_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM1_
 840:.\Generated_Source\PSoC4/CyLib.c ****                 (CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) & CY_SYS_CLK_IMO_TRIM1_
 841:.\Generated_Source\PSoC4/CyLib.c **** 
 842:.\Generated_Source\PSoC4/CyLib.c ****             /* Zero out fine trim */
 843:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM2_REG = CY_SYS_CLK_IMO_TRIM2_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM2_F
 844:.\Generated_Source\PSoC4/CyLib.c **** 
 845:.\Generated_Source\PSoC4/CyLib.c ****             /* Apply TC trim */
 846:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM3_REG = (CY_SYS_CLK_IMO_TRIM3_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM3_
 847:.\Generated_Source\PSoC4/CyLib.c ****                 (CY_SFLASH_IMO_TCTRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) & CY_SYS_CLK_IMO_TRIM
 848:.\Generated_Source\PSoC4/CyLib.c **** 
 849:.\Generated_Source\PSoC4/CyLib.c ****             CyDelayCycles(CY_SYS_CLK_IMO_TRIM_DELAY_US);
 850:.\Generated_Source\PSoC4/CyLib.c **** 
 851:.\Generated_Source\PSoC4/CyLib.c ****             if (freq > CY_SYS_CLK_IMO_MIN_FREQ_MHZ)
 852:.\Generated_Source\PSoC4/CyLib.c ****             {
 853:.\Generated_Source\PSoC4/CyLib.c ****                 /* Select nearby intermediate frequency */
 854:.\Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_SELECT_REG = (CY_SYS_CLK_IMO_SELECT_REG & ((uint32) ~CY_SYS_CLK_IMO_
 855:.\Generated_Source\PSoC4/CyLib.c ****                     (((freq - 4u - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ
 856:.\Generated_Source\PSoC4/CyLib.c **** 
 857:.\Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_TRIM_DELAY_US);
 858:.\Generated_Source\PSoC4/CyLib.c **** 
 859:.\Generated_Source\PSoC4/CyLib.c ****                 /* Make small step to final frequency */
 860:.\Generated_Source\PSoC4/CyLib.c ****                 /* Select nearby intermediate frequency */
 861:.\Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_SELECT_REG = (CY_SYS_CLK_IMO_SELECT_REG & ((uint32) ~CY_SYS_CLK_IMO_
 862:.\Generated_Source\PSoC4/CyLib.c ****                     (((freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ_MASK
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccBBFZQS.s 			page 21


 863:.\Generated_Source\PSoC4/CyLib.c ****             }
 864:.\Generated_Source\PSoC4/CyLib.c **** 
 865:.\Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
 866:.\Generated_Source\PSoC4/CyLib.c ****         }
 867:.\Generated_Source\PSoC4/CyLib.c ****         else
 868:.\Generated_Source\PSoC4/CyLib.c ****         {
 869:.\Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if new frequency is invalid */
 870:.\Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
 871:.\Generated_Source\PSoC4/CyLib.c ****         }
 872:.\Generated_Source\PSoC4/CyLib.c ****     }
 873:.\Generated_Source\PSoC4/CyLib.c **** 
 874:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
 875:.\Generated_Source\PSoC4/CyLib.c **** 
 876:.\Generated_Source\PSoC4/CyLib.c **** 
 877:.\Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSLT)
 878:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 879:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkWriteHfclkDiv
 880:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
 881:.\Generated_Source\PSoC4/CyLib.c ****     *
 882:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
 883:.\Generated_Source\PSoC4/CyLib.c ****     *  Selects the pre-scaler divider value for HFCLK from IMO.
 884:.\Generated_Source\PSoC4/CyLib.c ****     *
 885:.\Generated_Source\PSoC4/CyLib.c ****     *  The HFCLK predivider allows the device to divide the HFCLK selection mux
 886:.\Generated_Source\PSoC4/CyLib.c ****     *  input before use as HFCLK. The predivider is capable of dividing the HFCLK by
 887:.\Generated_Source\PSoC4/CyLib.c ****     *  powers of 2 between 1 and 8.
 888:.\Generated_Source\PSoC4/CyLib.c ****     *
 889:.\Generated_Source\PSoC4/CyLib.c ****     *  Note HFCLK's frequency cannot exceed 16 MHz. This API is applicable for
 890:.\Generated_Source\PSoC4/CyLib.c ****     *  PSoC 4000 family of devices only.
 891:.\Generated_Source\PSoC4/CyLib.c ****     *
 892:.\Generated_Source\PSoC4/CyLib.c ****     *
 893:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
 894:.\Generated_Source\PSoC4/CyLib.c ****     *  divider: HF clock divider value
 895:.\Generated_Source\PSoC4/CyLib.c ****     *   Define                        Description
 896:.\Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_CLK_HFCLK_DIV_NODIV    Transparent mode (w/o dividing)
 897:.\Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_CLK_HFCLK_DIV_2        Divide selected clock source by 2
 898:.\Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_CLK_HFCLK_DIV_4        Divide selected clock source by 4
 899:.\Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_CLK_HFCLK_DIV_8        Divide selected clock source by 8
 900:.\Generated_Source\PSoC4/CyLib.c ****     *
 901:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
 902:.\Generated_Source\PSoC4/CyLib.c ****     *  None
 903:.\Generated_Source\PSoC4/CyLib.c ****     *
 904:.\Generated_Source\PSoC4/CyLib.c ****     * Side Effects:
 905:.\Generated_Source\PSoC4/CyLib.c ****     *  If the SYSCLK clock frequency increases during the device operation, call
 906:.\Generated_Source\PSoC4/CyLib.c ****     *  CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
 907:.\Generated_Source\PSoC4/CyLib.c ****     *  of clock cycles the cache will wait before sampling data comes back from
 908:.\Generated_Source\PSoC4/CyLib.c ****     *  Flash. If the SYSCLK clock frequency decreases, you can call
 909:.\Generated_Source\PSoC4/CyLib.c ****     *  CySysFlashSetWaitCycles() to improve the CPU performance. See
 910:.\Generated_Source\PSoC4/CyLib.c ****     *  CySysFlashSetWaitCycles() description for more information.
 911:.\Generated_Source\PSoC4/CyLib.c ****     *
 912:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 913:.\Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteHfclkDiv(uint32 divider)
 914:.\Generated_Source\PSoC4/CyLib.c ****     {
 915:.\Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 916:.\Generated_Source\PSoC4/CyLib.c **** 
 917:.\Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 918:.\Generated_Source\PSoC4/CyLib.c **** 
 919:.\Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_SELECT_REG = ((CY_SYS_CLK_SELECT_REG & ((uint32) (~(CY_SYS_CLK_SELECT_HFCLK_DIV_
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccBBFZQS.s 			page 22


 920:.\Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)))) |
 921:.\Generated_Source\PSoC4/CyLib.c ****                     ((uint32)((divider & CY_SYS_CLK_SELECT_HFCLK_DIV_MASK) << CY_SYS_CLK_SELECT_HFC
 922:.\Generated_Source\PSoC4/CyLib.c **** 
 923:.\Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 924:.\Generated_Source\PSoC4/CyLib.c ****     }
 925:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSLT) */
 926:.\Generated_Source\PSoC4/CyLib.c **** 
 927:.\Generated_Source\PSoC4/CyLib.c **** 
 928:.\Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_ECO)
 929:.\Generated_Source\PSoC4/CyLib.c **** 
 930:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 931:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoStart
 932:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
 933:.\Generated_Source\PSoC4/CyLib.c ****     *
 934:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
 935:.\Generated_Source\PSoC4/CyLib.c ****     *  Starts the External Crystal Oscillator (ECO). Refer to the device datasheet
 936:.\Generated_Source\PSoC4/CyLib.c ****     *  for the ECO startup time.
 937:.\Generated_Source\PSoC4/CyLib.c ****     *
 938:.\Generated_Source\PSoC4/CyLib.c ****     *  The timeout interval is measured based on the system frequency defined by
 939:.\Generated_Source\PSoC4/CyLib.c ****     *  PSoC Creator at build time. If System clock frequency is changed in
 940:.\Generated_Source\PSoC4/CyLib.c ****     *  runtime, the CyDelayFreq() with the appropriate parameter should be called.
 941:.\Generated_Source\PSoC4/CyLib.c ****     *
 942:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
 943:.\Generated_Source\PSoC4/CyLib.c ****     *  timeoutUs: Timeout in microseconds. If zero is specified, the function
 944:.\Generated_Source\PSoC4/CyLib.c ****     *             starts the crystal and returns CYRET_SUCCESS. If non-zero
 945:.\Generated_Source\PSoC4/CyLib.c ****     *             value is passed, the CYRET_SUCCESS is returned once crystal
 946:.\Generated_Source\PSoC4/CyLib.c ****     *             is oscillating and amplitude reached 60% and it does not mean
 947:.\Generated_Source\PSoC4/CyLib.c ****     *             24 MHz crystal is within 50 ppm. If it is not oscillating or
 948:.\Generated_Source\PSoC4/CyLib.c ****     *             amplitude didn't reach 60% after specified amount of time, the
 949:.\Generated_Source\PSoC4/CyLib.c ****     *             CYRET_TIMEOUT is returned.
 950:.\Generated_Source\PSoC4/CyLib.c ****     *
 951:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
 952:.\Generated_Source\PSoC4/CyLib.c ****     *   CYRET_SUCCESS - Completed successfully. The ECO is oscillating and amplitude
 953:.\Generated_Source\PSoC4/CyLib.c ****     *                   reached 60% and it does not mean 24 MHz crystal is within
 954:.\Generated_Source\PSoC4/CyLib.c ****     *                   50 ppm.
 955:.\Generated_Source\PSoC4/CyLib.c ****     *   CYRET_TIMEOUT - Timeout occurred.
 956:.\Generated_Source\PSoC4/CyLib.c ****     *
 957:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 958:.\Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkEcoStart(uint32 timeoutUs)
 959:.\Generated_Source\PSoC4/CyLib.c ****     {
 960:.\Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
 961:.\Generated_Source\PSoC4/CyLib.c **** 
 962:.\Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
 963:.\Generated_Source\PSoC4/CyLib.c ****             /* Enable the RF oscillator band gap */
 964:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLESS_RF_CONFIG_REG |= CY_SYS_XTAL_BLESS_RF_CONFIG_RF_ENABLE;
 965:.\Generated_Source\PSoC4/CyLib.c **** 
 966:.\Generated_Source\PSoC4/CyLib.c ****             /* Update trimming register */
 967:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_BB_XO_REG = CY_SYS_XTAL_BLERD_BB_XO_TRIM;
 968:.\Generated_Source\PSoC4/CyLib.c **** 
 969:.\Generated_Source\PSoC4/CyLib.c ****             /* Enable the Crystal */
 970:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_DBUS_REG |= CY_SYS_XTAL_BLERD_DBUS_XTAL_ENABLE;
 971:.\Generated_Source\PSoC4/CyLib.c ****         #else /* CY_IP_WCO_SRSSV2 */
 972:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_ENABLE;
 973:.\Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_ECO_CONFIG_CLK_EN_TIMEOUT_US);
 974:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_CLK_EN;
 975:.\Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
 976:.\Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccBBFZQS.s 			page 23


 977:.\Generated_Source\PSoC4/CyLib.c ****         if(timeoutUs > 0u)
 978:.\Generated_Source\PSoC4/CyLib.c ****         {
 979:.\Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_TIMEOUT;
 980:.\Generated_Source\PSoC4/CyLib.c **** 
 981:.\Generated_Source\PSoC4/CyLib.c ****             for( ; timeoutUs > 0u; timeoutUs--)
 982:.\Generated_Source\PSoC4/CyLib.c ****             {
 983:.\Generated_Source\PSoC4/CyLib.c ****                 CyDelayUs(1u);
 984:.\Generated_Source\PSoC4/CyLib.c **** 
 985:.\Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkEcoReadStatus())
 986:.\Generated_Source\PSoC4/CyLib.c ****                 {
 987:.\Generated_Source\PSoC4/CyLib.c ****                     returnStatus = CYRET_SUCCESS;
 988:.\Generated_Source\PSoC4/CyLib.c ****                     break;
 989:.\Generated_Source\PSoC4/CyLib.c ****                 }
 990:.\Generated_Source\PSoC4/CyLib.c ****             }
 991:.\Generated_Source\PSoC4/CyLib.c **** 
 992:.\Generated_Source\PSoC4/CyLib.c ****         }
 993:.\Generated_Source\PSoC4/CyLib.c **** 
 994:.\Generated_Source\PSoC4/CyLib.c ****         return(returnStatus);
 995:.\Generated_Source\PSoC4/CyLib.c ****     }
 996:.\Generated_Source\PSoC4/CyLib.c **** 
 997:.\Generated_Source\PSoC4/CyLib.c **** 
 998:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 999:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoStop
1000:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
1001:.\Generated_Source\PSoC4/CyLib.c ****     *
1002:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
1003:.\Generated_Source\PSoC4/CyLib.c ****     *  Stops the megahertz crystal.
1004:.\Generated_Source\PSoC4/CyLib.c ****     *
1005:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
1006:.\Generated_Source\PSoC4/CyLib.c ****     *  None
1007:.\Generated_Source\PSoC4/CyLib.c ****     *
1008:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
1009:.\Generated_Source\PSoC4/CyLib.c ****     *  None
1010:.\Generated_Source\PSoC4/CyLib.c ****     *
1011:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1012:.\Generated_Source\PSoC4/CyLib.c ****     void CySysClkEcoStop(void)
1013:.\Generated_Source\PSoC4/CyLib.c ****     {
1014:.\Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
1015:.\Generated_Source\PSoC4/CyLib.c ****             /* Disable the RF oscillator band gap */
1016:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLESS_RF_CONFIG_REG &= (uint32) ~CY_SYS_XTAL_BLESS_RF_CONFIG_RF_ENABLE;
1017:.\Generated_Source\PSoC4/CyLib.c **** 
1018:.\Generated_Source\PSoC4/CyLib.c ****             /* Disable the Crystal */
1019:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_DBUS_REG &= (uint32) ~CY_SYS_XTAL_BLERD_DBUS_XTAL_ENABLE;
1020:.\Generated_Source\PSoC4/CyLib.c ****         #else
1021:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG &= (uint32) ~(CY_SYS_CLK_ECO_CONFIG_ENABLE | CY_SYS_CLK_ECO_C
1022:.\Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
1023:.\Generated_Source\PSoC4/CyLib.c ****     }
1024:.\Generated_Source\PSoC4/CyLib.c **** 
1025:.\Generated_Source\PSoC4/CyLib.c **** 
1026:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1027:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoReadStatus
1028:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
1029:.\Generated_Source\PSoC4/CyLib.c ****     *
1030:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
1031:.\Generated_Source\PSoC4/CyLib.c ****     *  Reads the status bit for the megahertz crystal.
1032:.\Generated_Source\PSoC4/CyLib.c ****     *
1033:.\Generated_Source\PSoC4/CyLib.c ****     *  For PSoC 4100 BLE/PSoC 4200 BLE devices, the status bit is the XO_AMP_DETECT
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccBBFZQS.s 			page 24


1034:.\Generated_Source\PSoC4/CyLib.c ****     *  bit in FSM register.
1035:.\Generated_Source\PSoC4/CyLib.c ****     *
1036:.\Generated_Source\PSoC4/CyLib.c ****     *  For PSoC 4200L devices, the error status bit is the WATCHDOG_ERROR bit in
1037:.\Generated_Source\PSoC4/CyLib.c ****     *  ECO_STATUS register.
1038:.\Generated_Source\PSoC4/CyLib.c ****     *
1039:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
1040:.\Generated_Source\PSoC4/CyLib.c ****     *  None
1041:.\Generated_Source\PSoC4/CyLib.c ****     *
1042:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
1043:.\Generated_Source\PSoC4/CyLib.c ****     *  PSoC 4100 BLE/PSoC 4200 BLE:
1044:.\Generated_Source\PSoC4/CyLib.c ****     *  Non-zero indicates that ECO output reached 50 ppm and is oscillating in valid
1045:.\Generated_Source\PSoC4/CyLib.c ****     *  range.
1046:.\Generated_Source\PSoC4/CyLib.c ****     *
1047:.\Generated_Source\PSoC4/CyLib.c ****     *  PSoC 4200L:
1048:.\Generated_Source\PSoC4/CyLib.c ****     *  Non-zero indicates that ECO is running.
1049:.\Generated_Source\PSoC4/CyLib.c ****     *
1050:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1051:.\Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkEcoReadStatus(void)
1052:.\Generated_Source\PSoC4/CyLib.c ****     {
1053:.\Generated_Source\PSoC4/CyLib.c ****         uint32 returnValue;
1054:.\Generated_Source\PSoC4/CyLib.c **** 
1055:.\Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
1056:.\Generated_Source\PSoC4/CyLib.c ****             returnValue = CY_SYS_XTAL_BLERD_FSM_REG & CY_SYS_XTAL_BLERD_FSM_XO_AMP_DETECT;
1057:.\Generated_Source\PSoC4/CyLib.c ****         #else
1058:.\Generated_Source\PSoC4/CyLib.c ****             returnValue = (0u != (CY_SYS_CLK_ECO_STATUS_REG & CY_SYS_CLK_ECO_STATUS_WATCHDOG_ERROR)
1059:.\Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
1060:.\Generated_Source\PSoC4/CyLib.c **** 
1061:.\Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1062:.\Generated_Source\PSoC4/CyLib.c ****     }
1063:.\Generated_Source\PSoC4/CyLib.c **** 
1064:.\Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_ECO_BLESS)
1065:.\Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1066:.\Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkWriteEcoDiv
1067:.\Generated_Source\PSoC4/CyLib.c ****         ********************************************************************************
1068:.\Generated_Source\PSoC4/CyLib.c ****         *
1069:.\Generated_Source\PSoC4/CyLib.c ****         * Summary:
1070:.\Generated_Source\PSoC4/CyLib.c ****         *  Selects value for the ECO divider.
1071:.\Generated_Source\PSoC4/CyLib.c ****         *
1072:.\Generated_Source\PSoC4/CyLib.c ****         *  The ECO must not be the HFCLK clock source when this function is called.
1073:.\Generated_Source\PSoC4/CyLib.c ****         *  The HFCLK source can be changed to the other clock source by call to the
1074:.\Generated_Source\PSoC4/CyLib.c ****         *  CySysClkWriteHfclkDirect() function. If the ECO sources the HFCLK this
1075:.\Generated_Source\PSoC4/CyLib.c ****         *  function will not have any effect if compiler in release mode, and halt the
1076:.\Generated_Source\PSoC4/CyLib.c ****         *  CPU when compiler in debug mode.
1077:.\Generated_Source\PSoC4/CyLib.c ****         *
1078:.\Generated_Source\PSoC4/CyLib.c ****         * Parameters:
1079:.\Generated_Source\PSoC4/CyLib.c ****         *  divider: Power of 2 divider selection.
1080:.\Generated_Source\PSoC4/CyLib.c ****         *
1081:.\Generated_Source\PSoC4/CyLib.c ****         *   Define                        Description
1082:.\Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_DIV1             HFCLK = ECO / 1
1083:.\Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_DIV2             HFCLK = ECO / 2
1084:.\Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_DIV4             HFCLK = ECO / 4
1085:.\Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_DIV8             HFCLK = ECO / 8
1086:.\Generated_Source\PSoC4/CyLib.c ****         *
1087:.\Generated_Source\PSoC4/CyLib.c ****         * Return:
1088:.\Generated_Source\PSoC4/CyLib.c ****         *  None
1089:.\Generated_Source\PSoC4/CyLib.c ****         *
1090:.\Generated_Source\PSoC4/CyLib.c ****         * Side Effects:
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccBBFZQS.s 			page 25


1091:.\Generated_Source\PSoC4/CyLib.c ****         *  If the SYSCLK clock frequency increases during the device operation, call
1092:.\Generated_Source\PSoC4/CyLib.c ****         *  CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
1093:.\Generated_Source\PSoC4/CyLib.c ****         *  of clock cycles the cache will wait before sampling data comes back from
1094:.\Generated_Source\PSoC4/CyLib.c ****         *  Flash. If the SYSCLK clock frequency decreases, you can call
1095:.\Generated_Source\PSoC4/CyLib.c ****         *  CySysFlashSetWaitCycles() to improve the CPU performance. See
1096:.\Generated_Source\PSoC4/CyLib.c ****         *  CySysFlashSetWaitCycles() description for more information.
1097:.\Generated_Source\PSoC4/CyLib.c ****         *
1098:.\Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1099:.\Generated_Source\PSoC4/CyLib.c ****         void CySysClkWriteEcoDiv(uint32 divider)
1100:.\Generated_Source\PSoC4/CyLib.c ****         {
1101:.\Generated_Source\PSoC4/CyLib.c ****             uint8  interruptState;
1102:.\Generated_Source\PSoC4/CyLib.c **** 
1103:.\Generated_Source\PSoC4/CyLib.c ****             if (CY_SYS_CLK_HFCLK_ECO != (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK)
1104:.\Generated_Source\PSoC4/CyLib.c ****             {
1105:.\Generated_Source\PSoC4/CyLib.c ****                 interruptState = CyEnterCriticalSection();
1106:.\Generated_Source\PSoC4/CyLib.c **** 
1107:.\Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG =  (divider & CY_SYS_CLK_XTAL_CLK_DIV_MASK) |
1108:.\Generated_Source\PSoC4/CyLib.c ****                                                       (CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG & ((uint3
1109:.\Generated_Source\PSoC4/CyLib.c **** 
1110:.\Generated_Source\PSoC4/CyLib.c ****                 CyExitCriticalSection(interruptState);
1111:.\Generated_Source\PSoC4/CyLib.c ****             }
1112:.\Generated_Source\PSoC4/CyLib.c ****             else
1113:.\Generated_Source\PSoC4/CyLib.c ****             {
1114:.\Generated_Source\PSoC4/CyLib.c ****                 /* Halt CPU in debug mode if ECO sources HFCLK */
1115:.\Generated_Source\PSoC4/CyLib.c ****                 CYASSERT(0u != 0u);
1116:.\Generated_Source\PSoC4/CyLib.c ****             }
1117:.\Generated_Source\PSoC4/CyLib.c ****         }
1118:.\Generated_Source\PSoC4/CyLib.c **** 
1119:.\Generated_Source\PSoC4/CyLib.c ****     #else
1120:.\Generated_Source\PSoC4/CyLib.c **** 
1121:.\Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1122:.\Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkConfigureEcoTrim
1123:.\Generated_Source\PSoC4/CyLib.c ****         ********************************************************************************
1124:.\Generated_Source\PSoC4/CyLib.c ****         *
1125:.\Generated_Source\PSoC4/CyLib.c ****         * Summary:
1126:.\Generated_Source\PSoC4/CyLib.c ****         *  Selects trim setting values for ECO. This API is available only for PSoC
1127:.\Generated_Source\PSoC4/CyLib.c ****         *  4200L devices only.
1128:.\Generated_Source\PSoC4/CyLib.c ****         *
1129:.\Generated_Source\PSoC4/CyLib.c ****         *  The following parameters can be trimmed for ECO. The affected registers are
1130:.\Generated_Source\PSoC4/CyLib.c ****         *  ECO_TRIM0 and ECO_TRIM1.
1131:.\Generated_Source\PSoC4/CyLib.c ****         *
1132:.\Generated_Source\PSoC4/CyLib.c ****         *  Watchdog trim - This bit field sets the error threshold below the steady
1133:.\Generated_Source\PSoC4/CyLib.c ****         *  state amplitude level.
1134:.\Generated_Source\PSoC4/CyLib.c ****         *
1135:.\Generated_Source\PSoC4/CyLib.c ****         *  Amplitude trim - This bit field is to set the crystal drive level when
1136:.\Generated_Source\PSoC4/CyLib.c ****         *  ECO_CONFIG.AGC_EN = 1. WARNING: use care when setting this field because
1137:.\Generated_Source\PSoC4/CyLib.c ****         *  driving a crystal beyond its rated limit can permanently damage the crystal.
1138:.\Generated_Source\PSoC4/CyLib.c ****         *
1139:.\Generated_Source\PSoC4/CyLib.c ****         *  Filter frequency trim - This bit field sets LPF frequency trim and affects
1140:.\Generated_Source\PSoC4/CyLib.c ****         *  the 3rd harmonic content.
1141:.\Generated_Source\PSoC4/CyLib.c ****         *
1142:.\Generated_Source\PSoC4/CyLib.c ****         *  Feedback resistor trim - This bit field sets the feedback resistor trim and
1143:.\Generated_Source\PSoC4/CyLib.c ****         *  impacts the oscillation amplitude.
1144:.\Generated_Source\PSoC4/CyLib.c ****         *
1145:.\Generated_Source\PSoC4/CyLib.c ****         *  Amplifier gain trim - This bit field sets the amplifier gain trim and affects
1146:.\Generated_Source\PSoC4/CyLib.c ****         *  the startup time of the crystal.
1147:.\Generated_Source\PSoC4/CyLib.c ****         *
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccBBFZQS.s 			page 26


1148:.\Generated_Source\PSoC4/CyLib.c ****         * Parameters:
1149:.\Generated_Source\PSoC4/CyLib.c ****         *  wDTrim: Watchdog trim
1150:.\Generated_Source\PSoC4/CyLib.c ****         *       Parameter                   Value Description
1151:.\Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_WDTRIM0      Error threshold is 0.05 V
1152:.\Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_WDTRIM1      Error threshold is 0.10 V
1153:.\Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_WDTRIM2      Error threshold is 0.15 V
1154:.\Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_WDTRIM3      Error threshold is 0.20 V
1155:.\Generated_Source\PSoC4/CyLib.c ****         *
1156:.\Generated_Source\PSoC4/CyLib.c ****         *  aTrim: Amplitude trim
1157:.\Generated_Source\PSoC4/CyLib.c ****         *       Parameter                   Value Description
1158:.\Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_ATRIM0       Amplitude is 0.3 Vpp
1159:.\Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_ATRIM1       Amplitude is 0.4 Vpp
1160:.\Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_ATRIM2       Amplitude is 0.5 Vpp
1161:.\Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_ATRIM3       Amplitude is 0.6 Vpp
1162:.\Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_ATRIM4       Amplitude is 0.7 Vpp
1163:.\Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_ATRIM5       Amplitude is 0.8 Vpp
1164:.\Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_ATRIM6       Amplitude is 0.9 Vpp
1165:.\Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_ATRIM7       Amplitude is 1.0 Vpp
1166:.\Generated_Source\PSoC4/CyLib.c ****         *
1167:.\Generated_Source\PSoC4/CyLib.c ****         *  fTrim: Filter frequency trim
1168:.\Generated_Source\PSoC4/CyLib.c ****         *       Parameter                   Value Description
1169:.\Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_FTRIM0       Crystal frequency > 30 MHz
1170:.\Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_FTRIM1       24 MHz < Crystal frequency <= 30 MHz
1171:.\Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_FTRIM2       17 MHz < Crystal frequency <= 24 MHz
1172:.\Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_FTRIM3       Crystal frequency <= 17 MHz
1173:.\Generated_Source\PSoC4/CyLib.c ****         *
1174:.\Generated_Source\PSoC4/CyLib.c ****         *  rTrim: Feedback resistor trim
1175:.\Generated_Source\PSoC4/CyLib.c ****         *       Parameter                   Value Description
1176:.\Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_RTRIM0       Crystal frequency > 30 MHz
1177:.\Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_RTRIM1       24 MHz < Crystal frequency <= 30 MHz
1178:.\Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_RTRIM2       17 MHz < Crystal frequency <= 24 MHz
1179:.\Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_RTRIM3       Crystal frequency <= 17 MHz        *
1180:.\Generated_Source\PSoC4/CyLib.c ****         *
1181:.\Generated_Source\PSoC4/CyLib.c ****         *  gTrim: Amplifier gain trim. Calculate the minimum required gm
1182:.\Generated_Source\PSoC4/CyLib.c ****         *         (trans-conductance value). Divide the calculated gm value by
1183:.\Generated_Source\PSoC4/CyLib.c ****         *         4.5 to obtain an integer value 'result'. For more information
1184:.\Generated_Source\PSoC4/CyLib.c ****         *         please refer to the device TRM.
1185:.\Generated_Source\PSoC4/CyLib.c ****         *       Parameter                   Value Description
1186:.\Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_GTRIM0       If result = 1
1187:.\Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_GTRIM1       If result = 0
1188:.\Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_GTRIM2       If result = 2
1189:.\Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_GTRIM2       If result = 3
1190:.\Generated_Source\PSoC4/CyLib.c **** 
1191:.\Generated_Source\PSoC4/CyLib.c ****         * Return:
1192:.\Generated_Source\PSoC4/CyLib.c ****         *  None
1193:.\Generated_Source\PSoC4/CyLib.c ****         *
1194:.\Generated_Source\PSoC4/CyLib.c ****         * Side Effects:
1195:.\Generated_Source\PSoC4/CyLib.c ****         *  Use care when setting the amplitude trim field because driving a crystal
1196:.\Generated_Source\PSoC4/CyLib.c ****         *  beyond its rated limit can permanently damage the crystal.
1197:.\Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1198:.\Generated_Source\PSoC4/CyLib.c ****         void CySysClkConfigureEcoTrim(uint32 wDTrim, uint32 aTrim, uint32 fTrim, uint32 rTrim, uint
1199:.\Generated_Source\PSoC4/CyLib.c ****         {
1200:.\Generated_Source\PSoC4/CyLib.c ****             uint8  interruptState;
1201:.\Generated_Source\PSoC4/CyLib.c ****             uint32 regTmp;
1202:.\Generated_Source\PSoC4/CyLib.c **** 
1203:.\Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1204:.\Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccBBFZQS.s 			page 27


1205:.\Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_ECO_TRIM0_REG & ~(CY_SYS_CLK_ECO_TRIM0_WDTRIM_MASK | CY_SYS_CLK_EC
1206:.\Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (wDTrim << CY_SYS_CLK_ECO_TRIM0_WDTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM
1207:.\Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (aTrim << CY_SYS_CLK_ECO_TRIM0_ATRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM0_
1208:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_TRIM0_REG = regTmp;
1209:.\Generated_Source\PSoC4/CyLib.c **** 
1210:.\Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_ECO_TRIM1_REG & ~(CY_SYS_CLK_ECO_TRIM1_FTRIM_MASK |
1211:.\Generated_Source\PSoC4/CyLib.c ****                                                    CY_SYS_CLK_ECO_TRIM1_RTRIM_MASK |
1212:.\Generated_Source\PSoC4/CyLib.c ****                                                    CY_SYS_CLK_ECO_TRIM1_GTRIM_MASK);
1213:.\Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (fTrim << CY_SYS_CLK_ECO_TRIM1_FTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1214:.\Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (rTrim << CY_SYS_CLK_ECO_TRIM1_RTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1215:.\Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (gTrim << CY_SYS_CLK_ECO_TRIM1_GTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1216:.\Generated_Source\PSoC4/CyLib.c **** 
1217:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_TRIM1_REG = regTmp;
1218:.\Generated_Source\PSoC4/CyLib.c **** 
1219:.\Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1220:.\Generated_Source\PSoC4/CyLib.c ****         }
1221:.\Generated_Source\PSoC4/CyLib.c **** 
1222:.\Generated_Source\PSoC4/CyLib.c **** 
1223:.\Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1224:.\Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkConfigureEcoDrive
1225:.\Generated_Source\PSoC4/CyLib.c ****         ********************************************************************************
1226:.\Generated_Source\PSoC4/CyLib.c ****         *
1227:.\Generated_Source\PSoC4/CyLib.c ****         * Summary:
1228:.\Generated_Source\PSoC4/CyLib.c ****         *  Selects trim setting values for ECO based on crystal parameters. Use care
1229:.\Generated_Source\PSoC4/CyLib.c ****         *  when setting the driveLevel parameter because driving a crystal beyond its
1230:.\Generated_Source\PSoC4/CyLib.c ****         *  rated limit can permanently damage the crystal.
1231:.\Generated_Source\PSoC4/CyLib.c ****         *
1232:.\Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4200L devices only.
1233:.\Generated_Source\PSoC4/CyLib.c ****         *
1234:.\Generated_Source\PSoC4/CyLib.c ****         * Parameters:
1235:.\Generated_Source\PSoC4/CyLib.c ****         *  freq: frequency of the crystal in kHz.
1236:.\Generated_Source\PSoC4/CyLib.c ****         *  cLoad: crystal load capacitance in pF.
1237:.\Generated_Source\PSoC4/CyLib.c ****         *  esr: equivalent series resistance of the crystal in ohm.
1238:.\Generated_Source\PSoC4/CyLib.c ****         *  maxAmplitude: maximum amplitude level in mV. Calculate as
1239:.\Generated_Source\PSoC4/CyLib.c ****         *  ((sqrt(driveLevel in uW / 2 / esr))/(3.14 * freq * cLoad)) * 10^9.
1240:.\Generated_Source\PSoC4/CyLib.c ****         *
1241:.\Generated_Source\PSoC4/CyLib.c ****         *  The Automatic Gain Control (AGC) is disabled when the specified maximum
1242:.\Generated_Source\PSoC4/CyLib.c ****         *  amplitude level equals or above 2. In this case the amplitude is not
1243:.\Generated_Source\PSoC4/CyLib.c ****         *  explicitly controlled and will grow until it saturates to the supply rail
1244:.\Generated_Source\PSoC4/CyLib.c ****         *  (1.8V nom). WARNING: use care when disabling AGC because driving a crystal
1245:.\Generated_Source\PSoC4/CyLib.c ****         *  beyond its rated limit can permanently damage the crystal.
1246:.\Generated_Source\PSoC4/CyLib.c ****         *
1247:.\Generated_Source\PSoC4/CyLib.c ****         * Return:
1248:.\Generated_Source\PSoC4/CyLib.c ****         *  status:
1249:.\Generated_Source\PSoC4/CyLib.c ****         *  CYRET_SUCCESS - ECO configuration completed successfully.
1250:.\Generated_Source\PSoC4/CyLib.c ****         *  CYRET_BAD_PARAM - One or more invalid parameters
1251:.\Generated_Source\PSoC4/CyLib.c ****         *
1252:.\Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1253:.\Generated_Source\PSoC4/CyLib.c ****         cystatus CySysClkConfigureEcoDrive(uint32 freq, uint32 cLoad, uint32 esr, uint32 maxAmplitu
1254:.\Generated_Source\PSoC4/CyLib.c ****         {
1255:.\Generated_Source\PSoC4/CyLib.c ****             cystatus returnStatus = CYRET_SUCCESS;
1256:.\Generated_Source\PSoC4/CyLib.c **** 
1257:.\Generated_Source\PSoC4/CyLib.c ****             uint32 wDTrim;
1258:.\Generated_Source\PSoC4/CyLib.c ****             uint32 aTrim;
1259:.\Generated_Source\PSoC4/CyLib.c ****             uint32 fTrim;
1260:.\Generated_Source\PSoC4/CyLib.c ****             uint32 rTrim;
1261:.\Generated_Source\PSoC4/CyLib.c ****             uint32 gTrim;
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccBBFZQS.s 			page 28


1262:.\Generated_Source\PSoC4/CyLib.c **** 
1263:.\Generated_Source\PSoC4/CyLib.c ****             uint32 gmMin;
1264:.\Generated_Source\PSoC4/CyLib.c **** 
1265:.\Generated_Source\PSoC4/CyLib.c **** 
1266:.\Generated_Source\PSoC4/CyLib.c ****             if ((maxAmplitude < CY_SYS_CLK_ECO_MAX_AMPL_MIN_mV) ||
1267:.\Generated_Source\PSoC4/CyLib.c ****                 (freq < CY_SYS_CLK_ECO_FREQ_KHZ_MIN) || (freq > CY_SYS_CLK_ECO_FREQ_KHZ_MAX))
1268:.\Generated_Source\PSoC4/CyLib.c ****             {
1269:.\Generated_Source\PSoC4/CyLib.c ****                 returnStatus = CYRET_BAD_PARAM;
1270:.\Generated_Source\PSoC4/CyLib.c ****             }
1271:.\Generated_Source\PSoC4/CyLib.c ****             else
1272:.\Generated_Source\PSoC4/CyLib.c ****             {
1273:.\Generated_Source\PSoC4/CyLib.c ****                 /* Calculate amplitude trim */
1274:.\Generated_Source\PSoC4/CyLib.c ****                 aTrim = (maxAmplitude < CY_SYS_CLK_ECO_TRIM_BOUNDARY) ? ((maxAmplitude/100u) - 4u) 
1275:.\Generated_Source\PSoC4/CyLib.c **** 
1276:.\Generated_Source\PSoC4/CyLib.c ****                 if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM0)
1277:.\Generated_Source\PSoC4/CyLib.c ****                 {
1278:.\Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM0;
1279:.\Generated_Source\PSoC4/CyLib.c ****                 }
1280:.\Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM1)
1281:.\Generated_Source\PSoC4/CyLib.c ****                 {
1282:.\Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM1;
1283:.\Generated_Source\PSoC4/CyLib.c ****                 }
1284:.\Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM2)
1285:.\Generated_Source\PSoC4/CyLib.c ****                 {
1286:.\Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM2;
1287:.\Generated_Source\PSoC4/CyLib.c ****                 }
1288:.\Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM3)
1289:.\Generated_Source\PSoC4/CyLib.c ****                 {
1290:.\Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM3;
1291:.\Generated_Source\PSoC4/CyLib.c ****                 }
1292:.\Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM4)
1293:.\Generated_Source\PSoC4/CyLib.c ****                 {
1294:.\Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM4;
1295:.\Generated_Source\PSoC4/CyLib.c ****                 }
1296:.\Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM5)
1297:.\Generated_Source\PSoC4/CyLib.c ****                 {
1298:.\Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM5;
1299:.\Generated_Source\PSoC4/CyLib.c ****                 }
1300:.\Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM6)
1301:.\Generated_Source\PSoC4/CyLib.c ****                 {
1302:.\Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM6;
1303:.\Generated_Source\PSoC4/CyLib.c ****                 }
1304:.\Generated_Source\PSoC4/CyLib.c ****                 else
1305:.\Generated_Source\PSoC4/CyLib.c ****                 {
1306:.\Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM7;
1307:.\Generated_Source\PSoC4/CyLib.c ****                 }
1308:.\Generated_Source\PSoC4/CyLib.c **** 
1309:.\Generated_Source\PSoC4/CyLib.c ****                 /* Calculate Watchdog trim. */
1310:.\Generated_Source\PSoC4/CyLib.c ****                 wDTrim = (maxAmplitude < CY_SYS_CLK_ECO_TRIM_BOUNDARY) ? ((maxAmplitude/200u) - 2u)
1311:.\Generated_Source\PSoC4/CyLib.c **** 
1312:.\Generated_Source\PSoC4/CyLib.c ****                 /* Calculate amplifier gain trim. */
1313:.\Generated_Source\PSoC4/CyLib.c ****                 gmMin = (uint32) (((((CY_SYS_CLK_ECO_GMMIN_COEFFICIENT * freq * cLoad) / 1000) * ((
1314:.\Generated_Source\PSoC4/CyLib.c ****                 if (gmMin > 3u)
1315:.\Generated_Source\PSoC4/CyLib.c ****                 {
1316:.\Generated_Source\PSoC4/CyLib.c ****                     returnStatus = CYRET_BAD_PARAM;
1317:.\Generated_Source\PSoC4/CyLib.c ****                     gTrim = 0u;
1318:.\Generated_Source\PSoC4/CyLib.c ****                 }
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccBBFZQS.s 			page 29


1319:.\Generated_Source\PSoC4/CyLib.c ****                 else if (gmMin > 1u)
1320:.\Generated_Source\PSoC4/CyLib.c ****                 {
1321:.\Generated_Source\PSoC4/CyLib.c ****                     gTrim = gmMin;
1322:.\Generated_Source\PSoC4/CyLib.c ****                 }
1323:.\Generated_Source\PSoC4/CyLib.c ****                 else
1324:.\Generated_Source\PSoC4/CyLib.c ****                 {
1325:.\Generated_Source\PSoC4/CyLib.c ****                     gTrim = (gmMin == 1u) ? 0u : 1u;
1326:.\Generated_Source\PSoC4/CyLib.c ****                 }
1327:.\Generated_Source\PSoC4/CyLib.c **** 
1328:.\Generated_Source\PSoC4/CyLib.c ****                 /* Calculate feedback resistor trim */
1329:.\Generated_Source\PSoC4/CyLib.c ****                 if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM0)
1330:.\Generated_Source\PSoC4/CyLib.c ****                 {
1331:.\Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM0;
1332:.\Generated_Source\PSoC4/CyLib.c ****                 }
1333:.\Generated_Source\PSoC4/CyLib.c ****                 else if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM1)
1334:.\Generated_Source\PSoC4/CyLib.c ****                 {
1335:.\Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM1;
1336:.\Generated_Source\PSoC4/CyLib.c ****                 }
1337:.\Generated_Source\PSoC4/CyLib.c ****                 else if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM2)
1338:.\Generated_Source\PSoC4/CyLib.c ****                 {
1339:.\Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM2;
1340:.\Generated_Source\PSoC4/CyLib.c ****                 }
1341:.\Generated_Source\PSoC4/CyLib.c ****                 else
1342:.\Generated_Source\PSoC4/CyLib.c ****                 {
1343:.\Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM3;
1344:.\Generated_Source\PSoC4/CyLib.c ****                 }
1345:.\Generated_Source\PSoC4/CyLib.c **** 
1346:.\Generated_Source\PSoC4/CyLib.c ****                 /* Calculate filter frequency trim */
1347:.\Generated_Source\PSoC4/CyLib.c ****                 fTrim = rTrim;
1348:.\Generated_Source\PSoC4/CyLib.c **** 
1349:.\Generated_Source\PSoC4/CyLib.c ****                 CySysClkConfigureEcoTrim(wDTrim, aTrim, fTrim, rTrim, gTrim);
1350:.\Generated_Source\PSoC4/CyLib.c **** 
1351:.\Generated_Source\PSoC4/CyLib.c ****                 /* Automatic Gain Control (AGC) enable */
1352:.\Generated_Source\PSoC4/CyLib.c ****                 if (maxAmplitude < 2u)
1353:.\Generated_Source\PSoC4/CyLib.c ****                 {
1354:.\Generated_Source\PSoC4/CyLib.c ****                     /* The oscillation amplitude is controlled to the level selected by amplitude t
1355:.\Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_AGC_EN;
1356:.\Generated_Source\PSoC4/CyLib.c ****                 }
1357:.\Generated_Source\PSoC4/CyLib.c ****                 else
1358:.\Generated_Source\PSoC4/CyLib.c ****                 {
1359:.\Generated_Source\PSoC4/CyLib.c ****                     /* The amplitude is not explicitly controlled and will grow until it saturates 
1360:.\Generated_Source\PSoC4/CyLib.c ****                     * supply rail (1.8V nom).
1361:.\Generated_Source\PSoC4/CyLib.c ****                     */
1362:.\Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_ECO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_ECO_CONFIG_AGC_EN;
1363:.\Generated_Source\PSoC4/CyLib.c ****                 }
1364:.\Generated_Source\PSoC4/CyLib.c ****             }
1365:.\Generated_Source\PSoC4/CyLib.c **** 
1366:.\Generated_Source\PSoC4/CyLib.c ****             return (returnStatus);
1367:.\Generated_Source\PSoC4/CyLib.c ****         }
1368:.\Generated_Source\PSoC4/CyLib.c **** 
1369:.\Generated_Source\PSoC4/CyLib.c ****     #endif /* CY_IP_ECO_BLESS */
1370:.\Generated_Source\PSoC4/CyLib.c **** 
1371:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_ECO) */
1372:.\Generated_Source\PSoC4/CyLib.c **** 
1373:.\Generated_Source\PSoC4/CyLib.c **** 
1374:.\Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
1375:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccBBFZQS.s 			page 30


1376:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllStart
1377:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
1378:.\Generated_Source\PSoC4/CyLib.c ****     *
1379:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
1380:.\Generated_Source\PSoC4/CyLib.c ****     *  Enables the PLL. Optionally waits for it to become stable. Waits at least
1381:.\Generated_Source\PSoC4/CyLib.c ****     *  250 us or until it is detected that the PLL is stable.
1382:.\Generated_Source\PSoC4/CyLib.c ****     *
1383:.\Generated_Source\PSoC4/CyLib.c ****     *  Clears the unlock occurred status bit by calling CySysClkPllGetUnlockStatus(),
1384:.\Generated_Source\PSoC4/CyLib.c ****     *  once the PLL is locked if the wait parameter is 1).
1385:.\Generated_Source\PSoC4/CyLib.c ****     *
1386:.\Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1387:.\Generated_Source\PSoC4/CyLib.c ****     *
1388:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
1389:.\Generated_Source\PSoC4/CyLib.c ****     *  PLL:
1390:.\Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1391:.\Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1392:.\Generated_Source\PSoC4/CyLib.c ****     *
1393:.\Generated_Source\PSoC4/CyLib.c ****     *  wait:
1394:.\Generated_Source\PSoC4/CyLib.c ****     *  0 - Return immediately after configuration.
1395:.\Generated_Source\PSoC4/CyLib.c ****     *  1 - Wait for PLL lock or timeout. This API shall use the CyDelayUs() to
1396:.\Generated_Source\PSoC4/CyLib.c ****     *  implement the timeout feature.
1397:.\Generated_Source\PSoC4/CyLib.c ****     *
1398:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
1399:.\Generated_Source\PSoC4/CyLib.c ****     *  CYRET_SUCCESS - Completed successfully.
1400:.\Generated_Source\PSoC4/CyLib.c ****     *
1401:.\Generated_Source\PSoC4/CyLib.c ****     *  CYRET_TIMEOUT - The timeout occurred without detecting a stable clock.  If the
1402:.\Generated_Source\PSoC4/CyLib.c ****     *  input source of the clock is jittery, then the lock indication may not occur.
1403:.\Generated_Source\PSoC4/CyLib.c ****     *  However, after the timeout has expired, the generated PLL clock can still be
1404:.\Generated_Source\PSoC4/CyLib.c ****     *  used.
1405:.\Generated_Source\PSoC4/CyLib.c ****     *
1406:.\Generated_Source\PSoC4/CyLib.c ****     *  CYRET_BAD_PARAM - Either the PLL or wait parameter is invalid.
1407:.\Generated_Source\PSoC4/CyLib.c ****     *
1408:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1409:.\Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllStart(uint32 pll, uint32 wait)
1410:.\Generated_Source\PSoC4/CyLib.c ****     {
1411:.\Generated_Source\PSoC4/CyLib.c ****         uint32 counts = CY_SYS_CLK_PLL_MAX_STARTUP_US;
1412:.\Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1413:.\Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
1414:.\Generated_Source\PSoC4/CyLib.c **** 
1415:.\Generated_Source\PSoC4/CyLib.c ****         if((pll < CY_IP_PLL_NR) && (wait <= 1u))
1416:.\Generated_Source\PSoC4/CyLib.c ****         {
1417:.\Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1418:.\Generated_Source\PSoC4/CyLib.c **** 
1419:.\Generated_Source\PSoC4/CyLib.c ****             /* Isolate PLL outputs */
1420:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config &= (uint32) ~CY_SYS_CLK_PLL_CONFIG_ISOLATE;
1421:.\Generated_Source\PSoC4/CyLib.c **** 
1422:.\Generated_Source\PSoC4/CyLib.c ****             /* Enable PLL */
1423:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config |= CY_SYS_CLK_PLL_CONFIG_ENABLE;
1424:.\Generated_Source\PSoC4/CyLib.c **** 
1425:.\Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1426:.\Generated_Source\PSoC4/CyLib.c **** 
1427:.\Generated_Source\PSoC4/CyLib.c ****             /* De-isolate >= CY_SYS_CLK_PLL_MIN_STARTUP_US after PLL enabled */
1428:.\Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_PLL_MIN_STARTUP_US);
1429:.\Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1430:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config |= CY_SYS_CLK_PLL_CONFIG_ISOLATE;
1431:.\Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1432:.\Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccBBFZQS.s 			page 31


1433:.\Generated_Source\PSoC4/CyLib.c ****             if(wait != 0u)
1434:.\Generated_Source\PSoC4/CyLib.c ****             {
1435:.\Generated_Source\PSoC4/CyLib.c ****                 returnStatus = CYRET_TIMEOUT;
1436:.\Generated_Source\PSoC4/CyLib.c **** 
1437:.\Generated_Source\PSoC4/CyLib.c ****                 while(0u != counts)
1438:.\Generated_Source\PSoC4/CyLib.c ****                 {
1439:.\Generated_Source\PSoC4/CyLib.c **** 
1440:.\Generated_Source\PSoC4/CyLib.c ****                     if(0u != CySysClkPllGetLockStatus(pll))
1441:.\Generated_Source\PSoC4/CyLib.c ****                     {
1442:.\Generated_Source\PSoC4/CyLib.c ****                         returnStatus = CYRET_SUCCESS;
1443:.\Generated_Source\PSoC4/CyLib.c ****                         (void) CySysClkPllGetUnlockStatus(pll);
1444:.\Generated_Source\PSoC4/CyLib.c ****                         break;
1445:.\Generated_Source\PSoC4/CyLib.c ****                     }
1446:.\Generated_Source\PSoC4/CyLib.c **** 
1447:.\Generated_Source\PSoC4/CyLib.c ****                     CyDelayUs(1u);
1448:.\Generated_Source\PSoC4/CyLib.c ****                     counts--;
1449:.\Generated_Source\PSoC4/CyLib.c ****                 }
1450:.\Generated_Source\PSoC4/CyLib.c ****             }
1451:.\Generated_Source\PSoC4/CyLib.c ****         }
1452:.\Generated_Source\PSoC4/CyLib.c ****         else
1453:.\Generated_Source\PSoC4/CyLib.c ****         {
1454:.\Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_BAD_PARAM;
1455:.\Generated_Source\PSoC4/CyLib.c ****         }
1456:.\Generated_Source\PSoC4/CyLib.c **** 
1457:.\Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1458:.\Generated_Source\PSoC4/CyLib.c ****     }
1459:.\Generated_Source\PSoC4/CyLib.c **** 
1460:.\Generated_Source\PSoC4/CyLib.c **** 
1461:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1462:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetLockStatus
1463:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
1464:.\Generated_Source\PSoC4/CyLib.c ****     *
1465:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
1466:.\Generated_Source\PSoC4/CyLib.c ****     *  Returns non-zero if the output of the specified PLL output is locked.
1467:.\Generated_Source\PSoC4/CyLib.c ****     *
1468:.\Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1469:.\Generated_Source\PSoC4/CyLib.c ****     *
1470:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters: PLL:
1471:.\Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1472:.\Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1473:.\Generated_Source\PSoC4/CyLib.c ****     *
1474:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
1475:.\Generated_Source\PSoC4/CyLib.c ****     *  A non-zero value when the specified PLL is locked.
1476:.\Generated_Source\PSoC4/CyLib.c ****     *
1477:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1478:.\Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkPllGetLockStatus(uint32 pll)
1479:.\Generated_Source\PSoC4/CyLib.c ****     {
1480:.\Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1481:.\Generated_Source\PSoC4/CyLib.c ****         uint32 returnStatus;
1482:.\Generated_Source\PSoC4/CyLib.c **** 
1483:.\Generated_Source\PSoC4/CyLib.c ****         CYASSERT(pll < CY_IP_PLL_NR);
1484:.\Generated_Source\PSoC4/CyLib.c **** 
1485:.\Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1486:.\Generated_Source\PSoC4/CyLib.c **** 
1487:.\Generated_Source\PSoC4/CyLib.c ****         /* PLL is locked if reported so for two consecutive read. */
1488:.\Generated_Source\PSoC4/CyLib.c ****         returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].status & CY_SYS_CLK_PLL_STATUS_LOCKED;
1489:.\Generated_Source\PSoC4/CyLib.c ****         if(0u != returnStatus)
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccBBFZQS.s 			page 32


1490:.\Generated_Source\PSoC4/CyLib.c ****         {
1491:.\Generated_Source\PSoC4/CyLib.c ****             returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].status & CY_SYS_CLK_PLL_STATUS_LOCKED;
1492:.\Generated_Source\PSoC4/CyLib.c ****         }
1493:.\Generated_Source\PSoC4/CyLib.c **** 
1494:.\Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1495:.\Generated_Source\PSoC4/CyLib.c **** 
1496:.\Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1497:.\Generated_Source\PSoC4/CyLib.c ****     }
1498:.\Generated_Source\PSoC4/CyLib.c **** 
1499:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1500:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllStop
1501:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
1502:.\Generated_Source\PSoC4/CyLib.c ****     *
1503:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
1504:.\Generated_Source\PSoC4/CyLib.c ****     *  Disables the PLL and isolates its outputs.
1505:.\Generated_Source\PSoC4/CyLib.c ****     *
1506:.\Generated_Source\PSoC4/CyLib.c ****     *  Ensures that either PLL is not the source of HFCLK before it is disabled,
1507:.\Generated_Source\PSoC4/CyLib.c ****     *  otherwise, the CPU will halt.
1508:.\Generated_Source\PSoC4/CyLib.c ****     *
1509:.\Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1510:.\Generated_Source\PSoC4/CyLib.c ****     *
1511:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters: PLL:
1512:.\Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1513:.\Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1514:.\Generated_Source\PSoC4/CyLib.c ****     *
1515:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
1516:.\Generated_Source\PSoC4/CyLib.c ****     *  None
1517:.\Generated_Source\PSoC4/CyLib.c ****     *
1518:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1519:.\Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllStop(uint32 pll)
1520:.\Generated_Source\PSoC4/CyLib.c ****     {
1521:.\Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1522:.\Generated_Source\PSoC4/CyLib.c **** 
1523:.\Generated_Source\PSoC4/CyLib.c ****         if (pll < CY_IP_PLL_NR)
1524:.\Generated_Source\PSoC4/CyLib.c ****         {
1525:.\Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1526:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config &= (uint32) ~(CY_SYS_CLK_PLL_CONFIG_ISOLATE | CY_SY
1527:.\Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1528:.\Generated_Source\PSoC4/CyLib.c ****         }
1529:.\Generated_Source\PSoC4/CyLib.c ****     }
1530:.\Generated_Source\PSoC4/CyLib.c **** 
1531:.\Generated_Source\PSoC4/CyLib.c **** 
1532:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1533:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetPQ
1534:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
1535:.\Generated_Source\PSoC4/CyLib.c ****     *
1536:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
1537:.\Generated_Source\PSoC4/CyLib.c ****     *  Sets feedback (P) and reference the (Q) divider value. This API also sets the
1538:.\Generated_Source\PSoC4/CyLib.c ****     *  programmable charge pump current value. Note that the PLL has to be disabled
1539:.\Generated_Source\PSoC4/CyLib.c ****     *  before calling this API. If this function is called while any PLL is sourcing,
1540:.\Generated_Source\PSoC4/CyLib.c ****     *  the SYSCLK will return an error.
1541:.\Generated_Source\PSoC4/CyLib.c ****     *
1542:.\Generated_Source\PSoC4/CyLib.c ****     *  The PLL must not be the system clock source when calling this function. The
1543:.\Generated_Source\PSoC4/CyLib.c ****     *  PLL output will glitch during this function call.
1544:.\Generated_Source\PSoC4/CyLib.c ****     *
1545:.\Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1546:.\Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccBBFZQS.s 			page 33


1547:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
1548:.\Generated_Source\PSoC4/CyLib.c ****     *  PLL:
1549:.\Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1550:.\Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1551:.\Generated_Source\PSoC4/CyLib.c ****     *
1552:.\Generated_Source\PSoC4/CyLib.c ****     *  feedback: P divider
1553:.\Generated_Source\PSoC4/CyLib.c ****     *   Range 4 - 259. Control bits for the feedback divider
1554:.\Generated_Source\PSoC4/CyLib.c ****     *
1555:.\Generated_Source\PSoC4/CyLib.c ****     *  reference: The Q divider.
1556:.\Generated_Source\PSoC4/CyLib.c ****     *   Range 1 - 64. Divide by the reference.
1557:.\Generated_Source\PSoC4/CyLib.c ****     *
1558:.\Generated_Source\PSoC4/CyLib.c ****     *  current: Charge the pump current in uA. The 2 uA for output frequencies
1559:.\Generated_Source\PSoC4/CyLib.c ****     *  of 67 MHz or less, and 3 uA for higher output frequencies. The default
1560:.\Generated_Source\PSoC4/CyLib.c ****     *  value is 2 uA.
1561:.\Generated_Source\PSoC4/CyLib.c ****     *
1562:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
1563:.\Generated_Source\PSoC4/CyLib.c ****     *  CYRET_SUCCESS - Completed successfully.
1564:.\Generated_Source\PSoC4/CyLib.c ****     *  CYRET_BAD_PARAM - The parameters are out of range or the specified PLL sources
1565:.\Generated_Source\PSoC4/CyLib.c ****     *  the system clock.
1566:.\Generated_Source\PSoC4/CyLib.c ****     *
1567:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1568:.\Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetPQ(uint32 pll, uint32 feedback, uint32 reference, uint32 current)
1569:.\Generated_Source\PSoC4/CyLib.c ****     {
1570:.\Generated_Source\PSoC4/CyLib.c ****         uint32   regTmp;
1571:.\Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
1572:.\Generated_Source\PSoC4/CyLib.c ****         uint8    interruptState;
1573:.\Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
1574:.\Generated_Source\PSoC4/CyLib.c **** 
1575:.\Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1576:.\Generated_Source\PSoC4/CyLib.c **** 
1577:.\Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
1578:.\Generated_Source\PSoC4/CyLib.c **** 
1579:.\Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) &&
1580:.\Generated_Source\PSoC4/CyLib.c ****             (feedback  >= CY_SYS_CLK_PLL_CONFIG_FEEDBACK_DIV_MIN)  && (feedback  <= CY_SYS_CLK_PLL_
1581:.\Generated_Source\PSoC4/CyLib.c ****             (reference >= CY_SYS_CLK_PLL_CONFIG_REFERENCE_DIV_MIN) && (reference <= CY_SYS_CLK_PLL_
1582:.\Generated_Source\PSoC4/CyLib.c ****             (current   >= CY_SYS_CLK_PLL_CONFIG_ICP_SEL_MIN )      && (current   <= CY_SYS_CLK_PLL_
1583:.\Generated_Source\PSoC4/CyLib.c ****             (CYRET_SUCCESS == tmp))
1584:.\Generated_Source\PSoC4/CyLib.c ****         {
1585:.\Generated_Source\PSoC4/CyLib.c ****             /* Set new feedback, reference and current values */
1586:.\Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~(CY_SYS_CLK_PLL_CONFIG_FEEDBA
1587:.\Generated_Source\PSoC4/CyLib.c ****                                                                        CY_SYS_CLK_PLL_CONFIG_REFERE
1588:.\Generated_Source\PSoC4/CyLib.c ****                                                                        CY_SYS_CLK_PLL_CONFIG_ICP_SE
1589:.\Generated_Source\PSoC4/CyLib.c **** 
1590:.\Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((feedback << CY_SYS_CLK_PLL_CONFIG_FEEDBACK_DIV_SHIFT) & CY_SYS_CLK_PLL_CONF
1591:.\Generated_Source\PSoC4/CyLib.c ****             regTmp |= (((reference - 1u) << CY_SYS_CLK_PLL_CONFIG_REFERENCE_DIV_SHIFT) & CY_SYS_CLK
1592:.\Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((current << CY_SYS_CLK_PLL_CONFIG_ICP_SEL_SHIFT) & CY_SYS_CLK_PLL_CONFIG_ICP
1593:.\Generated_Source\PSoC4/CyLib.c **** 
1594:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = regTmp;
1595:.\Generated_Source\PSoC4/CyLib.c **** 
1596:.\Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_SUCCESS;
1597:.\Generated_Source\PSoC4/CyLib.c ****         }
1598:.\Generated_Source\PSoC4/CyLib.c **** 
1599:.\Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1600:.\Generated_Source\PSoC4/CyLib.c **** 
1601:.\Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1602:.\Generated_Source\PSoC4/CyLib.c ****     }
1603:.\Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccBBFZQS.s 			page 34


1604:.\Generated_Source\PSoC4/CyLib.c **** 
1605:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1606:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetBypassMode
1607:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
1608:.\Generated_Source\PSoC4/CyLib.c ****     *
1609:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
1610:.\Generated_Source\PSoC4/CyLib.c ****     *  Sets the bypass mode for the specified PLL.
1611:.\Generated_Source\PSoC4/CyLib.c ****     *
1612:.\Generated_Source\PSoC4/CyLib.c ****     *  The PLL must not be the system clock source when calling this function.
1613:.\Generated_Source\PSoC4/CyLib.c ****     *  The PLL output will glitch during this function call.
1614:.\Generated_Source\PSoC4/CyLib.c ****     *
1615:.\Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1616:.\Generated_Source\PSoC4/CyLib.c ****     *
1617:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
1618:.\Generated_Source\PSoC4/CyLib.c ****     *  PLL:
1619:.\Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1620:.\Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1621:.\Generated_Source\PSoC4/CyLib.c ****     *
1622:.\Generated_Source\PSoC4/CyLib.c ****     *  bypass: The bypass mode.
1623:.\Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_PLL_BYPASS_AUTO - Automatic usage of the lock indicator. When unlocked,
1624:.\Generated_Source\PSoC4/CyLib.c ****     *   automatically selects PLL the reference input (bypass mode). When locked,
1625:.\Generated_Source\PSoC4/CyLib.c ****     *   automatically selects the PLL output.
1626:.\Generated_Source\PSoC4/CyLib.c ****     *
1627:.\Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_PLL_BYPASS_PLL_REF - Selects the PLL reference input (bypass mode).
1628:.\Generated_Source\PSoC4/CyLib.c ****     *   Ignores the lock indicator.
1629:.\Generated_Source\PSoC4/CyLib.c ****     *
1630:.\Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_PLL_BYPASS_PLL_OUT - Selects the PLL output.  Ignores the lock indicator.
1631:.\Generated_Source\PSoC4/CyLib.c ****     *
1632:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
1633:.\Generated_Source\PSoC4/CyLib.c ****     *  None
1634:.\Generated_Source\PSoC4/CyLib.c ****     *
1635:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1636:.\Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllSetBypassMode(uint32 pll, uint32 bypass)
1637:.\Generated_Source\PSoC4/CyLib.c ****     {
1638:.\Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
1639:.\Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1640:.\Generated_Source\PSoC4/CyLib.c **** 
1641:.\Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1642:.\Generated_Source\PSoC4/CyLib.c **** 
1643:.\Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) && (bypass <= CY_SYS_PLL_BYPASS_PLL_OUT))
1644:.\Generated_Source\PSoC4/CyLib.c ****         {
1645:.\Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~CY_SYS_CLK_PLL_CONFIG_BYPASS_
1646:.\Generated_Source\PSoC4/CyLib.c ****             regTmp |=  (uint32)(bypass << CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_SHIFT);
1647:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = regTmp;
1648:.\Generated_Source\PSoC4/CyLib.c ****         }
1649:.\Generated_Source\PSoC4/CyLib.c **** 
1650:.\Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1651:.\Generated_Source\PSoC4/CyLib.c ****     }
1652:.\Generated_Source\PSoC4/CyLib.c **** 
1653:.\Generated_Source\PSoC4/CyLib.c **** 
1654:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1655:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetBypassMode
1656:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
1657:.\Generated_Source\PSoC4/CyLib.c ****     *
1658:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
1659:.\Generated_Source\PSoC4/CyLib.c ****     *  Gets the bypass mode for the specified PLL.
1660:.\Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccBBFZQS.s 			page 35


1661:.\Generated_Source\PSoC4/CyLib.c ****     *
1662:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
1663:.\Generated_Source\PSoC4/CyLib.c ****     *  PLL:
1664:.\Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1665:.\Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1666:.\Generated_Source\PSoC4/CyLib.c ****     *
1667:.\Generated_Source\PSoC4/CyLib.c ****     *  Return
1668:.\Generated_Source\PSoC4/CyLib.c ****     *  bypass: Bypass mode.
1669:.\Generated_Source\PSoC4/CyLib.c ****     *   The same as the parameter of the CySysClkPllSetBypassMode().
1670:.\Generated_Source\PSoC4/CyLib.c ****     *
1671:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1672:.\Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysClkPllGetBypassMode(uint32 pll)
1673:.\Generated_Source\PSoC4/CyLib.c ****     {
1674:.\Generated_Source\PSoC4/CyLib.c ****         uint32 returnValue;
1675:.\Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1676:.\Generated_Source\PSoC4/CyLib.c **** 
1677:.\Generated_Source\PSoC4/CyLib.c ****         CYASSERT(pll < CY_IP_PLL_NR);
1678:.\Generated_Source\PSoC4/CyLib.c **** 
1679:.\Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1680:.\Generated_Source\PSoC4/CyLib.c **** 
1681:.\Generated_Source\PSoC4/CyLib.c ****         returnValue = CY_SYS_CLK_PLL_BASE.pll[pll].config & CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_MASK;
1682:.\Generated_Source\PSoC4/CyLib.c ****         returnValue =  returnValue >> CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_SHIFT;
1683:.\Generated_Source\PSoC4/CyLib.c **** 
1684:.\Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1685:.\Generated_Source\PSoC4/CyLib.c **** 
1686:.\Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1687:.\Generated_Source\PSoC4/CyLib.c ****     }
1688:.\Generated_Source\PSoC4/CyLib.c **** 
1689:.\Generated_Source\PSoC4/CyLib.c **** 
1690:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1691:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllConfigChangeAllowed
1692:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
1693:.\Generated_Source\PSoC4/CyLib.c ****     *
1694:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
1695:.\Generated_Source\PSoC4/CyLib.c ****     *  The function returns non-zero value if the specified PLL sources the System
1696:.\Generated_Source\PSoC4/CyLib.c ****     *  clock and the PLL is not in the bypass mode.
1697:.\Generated_Source\PSoC4/CyLib.c ****     *
1698:.\Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1699:.\Generated_Source\PSoC4/CyLib.c ****     *
1700:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
1701:.\Generated_Source\PSoC4/CyLib.c ****     *  PLL:
1702:.\Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1703:.\Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1704:.\Generated_Source\PSoC4/CyLib.c ****     *
1705:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
1706:.\Generated_Source\PSoC4/CyLib.c ****     *  Non-zero value when the specified PLL sources the System clock and the PLL
1707:.\Generated_Source\PSoC4/CyLib.c ****     *  is not in the bypass mode.
1708:.\Generated_Source\PSoC4/CyLib.c ****     *
1709:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1710:.\Generated_Source\PSoC4/CyLib.c ****     static cystatus CySysClkPllConfigChangeAllowed(uint32 pll)
1711:.\Generated_Source\PSoC4/CyLib.c ****     {
1712:.\Generated_Source\PSoC4/CyLib.c ****         uint32   pllBypassMode;
1713:.\Generated_Source\PSoC4/CyLib.c ****         uint32   sysclkSource;
1714:.\Generated_Source\PSoC4/CyLib.c ****         cystatus returnValue = CYRET_LOCKED;
1715:.\Generated_Source\PSoC4/CyLib.c **** 
1716:.\Generated_Source\PSoC4/CyLib.c ****         sysclkSource  = CySysClkGetSysclkSource();
1717:.\Generated_Source\PSoC4/CyLib.c ****         pllBypassMode = CySysClkPllGetBypassMode(pll);
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccBBFZQS.s 			page 36


1718:.\Generated_Source\PSoC4/CyLib.c **** 
1719:.\Generated_Source\PSoC4/CyLib.c ****         if ((CY_SYS_PLL_BYPASS_PLL_REF == pllBypassMode)             ||
1720:.\Generated_Source\PSoC4/CyLib.c ****             ((CY_SYS_CLK_HFCLK_PLL0 != sysclkSource) && (0u == pll)) ||
1721:.\Generated_Source\PSoC4/CyLib.c ****             ((CY_SYS_CLK_HFCLK_PLL1 != sysclkSource) && (1u == pll)))
1722:.\Generated_Source\PSoC4/CyLib.c ****         {
1723:.\Generated_Source\PSoC4/CyLib.c ****             returnValue = CYRET_SUCCESS;
1724:.\Generated_Source\PSoC4/CyLib.c ****         }
1725:.\Generated_Source\PSoC4/CyLib.c **** 
1726:.\Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1727:.\Generated_Source\PSoC4/CyLib.c ****     }
1728:.\Generated_Source\PSoC4/CyLib.c **** 
1729:.\Generated_Source\PSoC4/CyLib.c **** 
1730:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1731:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetUnlockStatus
1732:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
1733:.\Generated_Source\PSoC4/CyLib.c ****     *
1734:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
1735:.\Generated_Source\PSoC4/CyLib.c ****     *  Returns a non-zero value if the specified PLL output was unlocked.
1736:.\Generated_Source\PSoC4/CyLib.c ****     *  The unlock status is an indicator that the PLL has lost a lock at least once
1737:.\Generated_Source\PSoC4/CyLib.c ****     *  during its operation. The unlock status is cleared once it is read using
1738:.\Generated_Source\PSoC4/CyLib.c ****     *  this API.
1739:.\Generated_Source\PSoC4/CyLib.c ****     *
1740:.\Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1741:.\Generated_Source\PSoC4/CyLib.c ****     *
1742:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
1743:.\Generated_Source\PSoC4/CyLib.c ****     *  PLL:
1744:.\Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1745:.\Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1746:.\Generated_Source\PSoC4/CyLib.c ****     *
1747:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
1748:.\Generated_Source\PSoC4/CyLib.c ****     *  Non-zero value when the specified PLL was unlocked.
1749:.\Generated_Source\PSoC4/CyLib.c ****     *
1750:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1751:.\Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkPllGetUnlockStatus(uint32 pll)
1752:.\Generated_Source\PSoC4/CyLib.c ****     {
1753:.\Generated_Source\PSoC4/CyLib.c ****         uint32 returnStatus = 0u;
1754:.\Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1755:.\Generated_Source\PSoC4/CyLib.c **** 
1756:.\Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1757:.\Generated_Source\PSoC4/CyLib.c **** 
1758:.\Generated_Source\PSoC4/CyLib.c ****         returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].test & CY_SYS_CLK_PLL_TEST_UNLOCK_OCCURRED_MASK
1759:.\Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_PLL_BASE.pll[pll].test |= CY_SYS_CLK_PLL_TEST_UNLOCK_OCCURRED_MASK;
1760:.\Generated_Source\PSoC4/CyLib.c **** 
1761:.\Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1762:.\Generated_Source\PSoC4/CyLib.c **** 
1763:.\Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1764:.\Generated_Source\PSoC4/CyLib.c ****     }
1765:.\Generated_Source\PSoC4/CyLib.c **** 
1766:.\Generated_Source\PSoC4/CyLib.c **** 
1767:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1768:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetFrequency
1769:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
1770:.\Generated_Source\PSoC4/CyLib.c ****     *
1771:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
1772:.\Generated_Source\PSoC4/CyLib.c ****     *  Configures either PLL#0 or PLL#1 for the requested input/output frequencies.
1773:.\Generated_Source\PSoC4/CyLib.c ****     *  The input frequency is the frequency of the source to the PLL. The source is
1774:.\Generated_Source\PSoC4/CyLib.c ****     *  set using the CySysClkPllSetSource() function.
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccBBFZQS.s 			page 37


1775:.\Generated_Source\PSoC4/CyLib.c ****     *
1776:.\Generated_Source\PSoC4/CyLib.c ****     *  The PLL must not be the system clock source when calling this function. The
1777:.\Generated_Source\PSoC4/CyLib.c ****     *  PLL output will glitch during this function call.
1778:.\Generated_Source\PSoC4/CyLib.c ****     *
1779:.\Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1780:.\Generated_Source\PSoC4/CyLib.c ****     *
1781:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
1782:.\Generated_Source\PSoC4/CyLib.c ****     *  PLL:
1783:.\Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1784:.\Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1785:.\Generated_Source\PSoC4/CyLib.c ****     *
1786:.\Generated_Source\PSoC4/CyLib.c ****     *  inputFreq:
1787:.\Generated_Source\PSoC4/CyLib.c ****     *   The reference frequency in KHz. The valid range is from 1000 to 49152 KHz.
1788:.\Generated_Source\PSoC4/CyLib.c ****     *
1789:.\Generated_Source\PSoC4/CyLib.c ****     *  pllFreq:
1790:.\Generated_Source\PSoC4/CyLib.c ****     *   The target frequency in KHz. The valid range is from 22500 to 49152 KHz.
1791:.\Generated_Source\PSoC4/CyLib.c ****     *
1792:.\Generated_Source\PSoC4/CyLib.c ****     * divider:
1793:.\Generated_Source\PSoC4/CyLib.c ****     *  The output clock divider for the PLL:
1794:.\Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIVPASS    Pass Through
1795:.\Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV2       Divide by 2
1796:.\Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV4       Divide by 4
1797:.\Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV8       Divide by 8
1798:.\Generated_Source\PSoC4/CyLib.c ****     *
1799:.\Generated_Source\PSoC4/CyLib.c ****     * freqTol:
1800:.\Generated_Source\PSoC4/CyLib.c ****     *  The tolerance in ppm, 10 ppm is equal to 0.001%.
1801:.\Generated_Source\PSoC4/CyLib.c ****     *
1802:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
1803:.\Generated_Source\PSoC4/CyLib.c ****     *  CYRET_SUCCESS - The PLL was successfully configured for the requested
1804:.\Generated_Source\PSoC4/CyLib.c ****     *  frequency.
1805:.\Generated_Source\PSoC4/CyLib.c ****     *
1806:.\Generated_Source\PSoC4/CyLib.c ****     *  CYRET_BAD_PARAM - The PLL was not able to successfully configure for the
1807:.\Generated_Source\PSoC4/CyLib.c ****     *  requested frequency.
1808:.\Generated_Source\PSoC4/CyLib.c ****     *
1809:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1810:.\Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetFrequency(uint32 pll, uint32 inputFreq, uint32 pllFreq, uint32 divider, 
1811:.\Generated_Source\PSoC4/CyLib.c ****     {
1812:.\Generated_Source\PSoC4/CyLib.c ****         uint32 qMin;
1813:.\Generated_Source\PSoC4/CyLib.c ****         uint32 qMax;
1814:.\Generated_Source\PSoC4/CyLib.c **** 
1815:.\Generated_Source\PSoC4/CyLib.c ****         uint32 qVal = CY_SYS_CLK_PLL_INVALID;
1816:.\Generated_Source\PSoC4/CyLib.c ****         uint32 pVal = CY_SYS_CLK_PLL_INVALID;
1817:.\Generated_Source\PSoC4/CyLib.c **** 
1818:.\Generated_Source\PSoC4/CyLib.c ****         uint32 q;
1819:.\Generated_Source\PSoC4/CyLib.c ****         uint32 p;
1820:.\Generated_Source\PSoC4/CyLib.c **** 
1821:.\Generated_Source\PSoC4/CyLib.c ****         uint32 fvco;
1822:.\Generated_Source\PSoC4/CyLib.c ****         int32 ferr;
1823:.\Generated_Source\PSoC4/CyLib.c **** 
1824:.\Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
1825:.\Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
1826:.\Generated_Source\PSoC4/CyLib.c **** 
1827:.\Generated_Source\PSoC4/CyLib.c **** 
1828:.\Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
1829:.\Generated_Source\PSoC4/CyLib.c **** 
1830:.\Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) &&
1831:.\Generated_Source\PSoC4/CyLib.c ****             (inputFreq  >= CY_SYS_CLK_PLL_INPUT_FREQ_MIN )  && (inputFreq  <= CY_SYS_CLK_PLL_INPUT_
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccBBFZQS.s 			page 38


1832:.\Generated_Source\PSoC4/CyLib.c ****             (pllFreq >= CY_SYS_CLK_PLL_OUTPUT_FREQ_MIN ) && (pllFreq <= CY_SYS_CLK_PLL_OUTPUT_FREQ_
1833:.\Generated_Source\PSoC4/CyLib.c ****             (divider <= CY_SYS_PLL_OUTPUT_DIV8) &&
1834:.\Generated_Source\PSoC4/CyLib.c ****             (CYRET_SUCCESS == tmp))
1835:.\Generated_Source\PSoC4/CyLib.c ****         {
1836:.\Generated_Source\PSoC4/CyLib.c **** 
1837:.\Generated_Source\PSoC4/CyLib.c ****             /* Minimum feed forward loop divisor */
1838:.\Generated_Source\PSoC4/CyLib.c ****             qMin = (inputFreq + (CY_SYS_CLK_PLL_FPFDMAX - 1u)) / CY_SYS_CLK_PLL_FPFDMAX;
1839:.\Generated_Source\PSoC4/CyLib.c ****             qMin = (qMin < CY_SYS_CLK_PLL_QMINIP) ? CY_SYS_CLK_PLL_QMINIP : qMin;
1840:.\Generated_Source\PSoC4/CyLib.c **** 
1841:.\Generated_Source\PSoC4/CyLib.c ****             /* Maximum feed forward loop divisor */
1842:.\Generated_Source\PSoC4/CyLib.c ****             qMax = inputFreq / CY_SYS_CLK_PLL_FPFDMIN;
1843:.\Generated_Source\PSoC4/CyLib.c ****             qMax = (qMax > CY_SYS_CLK_PLL_QMAXIP) ? CY_SYS_CLK_PLL_QMAXIP : qMax;
1844:.\Generated_Source\PSoC4/CyLib.c **** 
1845:.\Generated_Source\PSoC4/CyLib.c ****             if (qMin <= qMax)
1846:.\Generated_Source\PSoC4/CyLib.c ****             {
1847:.\Generated_Source\PSoC4/CyLib.c ****                 for(q = qMin; q <= qMax; q++)
1848:.\Generated_Source\PSoC4/CyLib.c ****                 {
1849:.\Generated_Source\PSoC4/CyLib.c ****                     /* Solve for the feedback divisor value */
1850:.\Generated_Source\PSoC4/CyLib.c **** 
1851:.\Generated_Source\PSoC4/CyLib.c ****                     /* INT((pllFreq * q ) / inputFreq), where INT is normal rounding  */
1852:.\Generated_Source\PSoC4/CyLib.c ****                     p = ((pllFreq * q) + (inputFreq / 2u)) / inputFreq;
1853:.\Generated_Source\PSoC4/CyLib.c **** 
1854:.\Generated_Source\PSoC4/CyLib.c ****                     /* Calculate the actual VCO frequency (FVCO) */
1855:.\Generated_Source\PSoC4/CyLib.c ****                     fvco = ((inputFreq * p) / q);
1856:.\Generated_Source\PSoC4/CyLib.c **** 
1857:.\Generated_Source\PSoC4/CyLib.c ****                     /* Calculate the frequency error (FERR) */
1858:.\Generated_Source\PSoC4/CyLib.c ****                     ferr = ((1000000 * ((int32) fvco - (int32) pllFreq))/ (int32) pllFreq);
1859:.\Generated_Source\PSoC4/CyLib.c **** 
1860:.\Generated_Source\PSoC4/CyLib.c ****                     /* Bound check the frequency error and decide next action */
1861:.\Generated_Source\PSoC4/CyLib.c ****                     if ((( -1 * (int32) freqTol) <= ferr) && (ferr <= (int32) freqTol))
1862:.\Generated_Source\PSoC4/CyLib.c ****                     {
1863:.\Generated_Source\PSoC4/CyLib.c ****                         qVal = q;
1864:.\Generated_Source\PSoC4/CyLib.c ****                         pVal = p;
1865:.\Generated_Source\PSoC4/CyLib.c ****                         break;
1866:.\Generated_Source\PSoC4/CyLib.c ****                     }
1867:.\Generated_Source\PSoC4/CyLib.c ****                 }
1868:.\Generated_Source\PSoC4/CyLib.c **** 
1869:.\Generated_Source\PSoC4/CyLib.c **** 
1870:.\Generated_Source\PSoC4/CyLib.c ****                 if ((pVal != CY_SYS_CLK_PLL_INVALID) && (qVal != CY_SYS_CLK_PLL_INVALID))
1871:.\Generated_Source\PSoC4/CyLib.c ****                 {
1872:.\Generated_Source\PSoC4/CyLib.c ****                     if (CySysClkPllSetPQ(pll, pVal, qVal, CY_SYS_CLK_PLL_CURRENT_DEFAULT) == CYRET_
1873:.\Generated_Source\PSoC4/CyLib.c ****                     {
1874:.\Generated_Source\PSoC4/CyLib.c ****                         returnStatus = CySysClkPllSetOutputDivider(pll, divider);
1875:.\Generated_Source\PSoC4/CyLib.c ****                     }
1876:.\Generated_Source\PSoC4/CyLib.c ****                 }
1877:.\Generated_Source\PSoC4/CyLib.c ****             }
1878:.\Generated_Source\PSoC4/CyLib.c **** 
1879:.\Generated_Source\PSoC4/CyLib.c ****         }
1880:.\Generated_Source\PSoC4/CyLib.c **** 
1881:.\Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1882:.\Generated_Source\PSoC4/CyLib.c ****     }
1883:.\Generated_Source\PSoC4/CyLib.c **** 
1884:.\Generated_Source\PSoC4/CyLib.c **** 
1885:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1886:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetSource
1887:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
1888:.\Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccBBFZQS.s 			page 39


1889:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
1890:.\Generated_Source\PSoC4/CyLib.c ****     *  Sets the input clock source to the PLL. The PLL must not be the system clock
1891:.\Generated_Source\PSoC4/CyLib.c ****     *  source when calling this function. The PLL output will glitch during this
1892:.\Generated_Source\PSoC4/CyLib.c ****     *  function call.
1893:.\Generated_Source\PSoC4/CyLib.c ****     *
1894:.\Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1895:.\Generated_Source\PSoC4/CyLib.c ****     *
1896:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
1897:.\Generated_Source\PSoC4/CyLib.c ****     *  PLL:
1898:.\Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1899:.\Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1900:.\Generated_Source\PSoC4/CyLib.c ****     *
1901:.\Generated_Source\PSoC4/CyLib.c ****     * source:
1902:.\Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_IMO        IMO
1903:.\Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_EXTCLK     External Clock
1904:.\Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_ECO        ECO
1905:.\Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI0       DSI_OUT[0]
1906:.\Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI1       DSI_OUT[1]
1907:.\Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI2       DSI_OUT[2]
1908:.\Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI3       DSI_OUT[3]
1909:.\Generated_Source\PSoC4/CyLib.c ****     *
1910:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
1911:.\Generated_Source\PSoC4/CyLib.c ****     *  None
1912:.\Generated_Source\PSoC4/CyLib.c ****     *
1913:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1914:.\Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllSetSource(uint32 pll, uint32 source)
1915:.\Generated_Source\PSoC4/CyLib.c ****     {
1916:.\Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
1917:.\Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1918:.\Generated_Source\PSoC4/CyLib.c **** 
1919:.\Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1920:.\Generated_Source\PSoC4/CyLib.c **** 
1921:.\Generated_Source\PSoC4/CyLib.c ****         if (pll < CY_IP_PLL_NR)
1922:.\Generated_Source\PSoC4/CyLib.c ****         {
1923:.\Generated_Source\PSoC4/CyLib.c ****             regTmp = CY_SYS_CLK_SELECT_REG & (uint32) ~CY_SYS_CLK_SELECT_PLL_MASK(pll);
1924:.\Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((source << CY_SYS_CLK_SELECT_PLL_SHIFT(pll)) & CY_SYS_CLK_SELECT_PLL_MASK(pl
1925:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_SELECT_REG = regTmp;
1926:.\Generated_Source\PSoC4/CyLib.c ****         }
1927:.\Generated_Source\PSoC4/CyLib.c **** 
1928:.\Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1929:.\Generated_Source\PSoC4/CyLib.c ****     }
1930:.\Generated_Source\PSoC4/CyLib.c **** 
1931:.\Generated_Source\PSoC4/CyLib.c **** 
1932:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1933:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetOutputDivider
1934:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
1935:.\Generated_Source\PSoC4/CyLib.c ****     *
1936:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
1937:.\Generated_Source\PSoC4/CyLib.c ****     *  Sets the output clock divider for the PLL.
1938:.\Generated_Source\PSoC4/CyLib.c ****     *
1939:.\Generated_Source\PSoC4/CyLib.c ****     *  The PLL must not be the System Clock source when calling this function. The
1940:.\Generated_Source\PSoC4/CyLib.c ****     *  PLL output will glitch during this function call.
1941:.\Generated_Source\PSoC4/CyLib.c ****     *
1942:.\Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1943:.\Generated_Source\PSoC4/CyLib.c ****     *
1944:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
1945:.\Generated_Source\PSoC4/CyLib.c ****     *  PLL:
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccBBFZQS.s 			page 40


1946:.\Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1947:.\Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1948:.\Generated_Source\PSoC4/CyLib.c ****     *
1949:.\Generated_Source\PSoC4/CyLib.c ****     * divider:
1950:.\Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIVPASS    Pass through
1951:.\Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV2       Divide by 2
1952:.\Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV4       Divide by 4
1953:.\Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV8       Divide by 8
1954:.\Generated_Source\PSoC4/CyLib.c ****     *
1955:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
1956:.\Generated_Source\PSoC4/CyLib.c ****     *  CYRET_SUCCESS   - Completed successfully.
1957:.\Generated_Source\PSoC4/CyLib.c ****     *  CYRET_BAD_PARAM - The parameters are out of range or the specified PLL
1958:.\Generated_Source\PSoC4/CyLib.c ****     *                    sources the System clock.
1959:.\Generated_Source\PSoC4/CyLib.c ****     *
1960:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1961:.\Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetOutputDivider(uint32 pll, uint32 divider)
1962:.\Generated_Source\PSoC4/CyLib.c ****     {
1963:.\Generated_Source\PSoC4/CyLib.c ****         uint32   tmpReg;
1964:.\Generated_Source\PSoC4/CyLib.c ****         uint8    interruptState;
1965:.\Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
1966:.\Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
1967:.\Generated_Source\PSoC4/CyLib.c **** 
1968:.\Generated_Source\PSoC4/CyLib.c **** 
1969:.\Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1970:.\Generated_Source\PSoC4/CyLib.c **** 
1971:.\Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
1972:.\Generated_Source\PSoC4/CyLib.c **** 
1973:.\Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) && (CYRET_SUCCESS == tmp) && (divider <= CY_SYS_PLL_OUTPUT_DIV8))
1974:.\Generated_Source\PSoC4/CyLib.c ****         {
1975:.\Generated_Source\PSoC4/CyLib.c ****             tmpReg  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~(CY_SYS_CLK_PLL_CONFIG_OUTPUT
1976:.\Generated_Source\PSoC4/CyLib.c ****             tmpReg |= ((divider << CY_SYS_CLK_PLL_CONFIG_OUTPUT_DIV_SHIFT) & CY_SYS_CLK_PLL_CONFIG_
1977:.\Generated_Source\PSoC4/CyLib.c **** 
1978:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = tmpReg;
1979:.\Generated_Source\PSoC4/CyLib.c **** 
1980:.\Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_SUCCESS;
1981:.\Generated_Source\PSoC4/CyLib.c ****         }
1982:.\Generated_Source\PSoC4/CyLib.c **** 
1983:.\Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1984:.\Generated_Source\PSoC4/CyLib.c **** 
1985:.\Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1986:.\Generated_Source\PSoC4/CyLib.c ****     }
1987:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
1988:.\Generated_Source\PSoC4/CyLib.c **** 
1989:.\Generated_Source\PSoC4/CyLib.c **** 
1990:.\Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
1991:.\Generated_Source\PSoC4/CyLib.c **** 
1992:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1993:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdEnable
1994:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
1995:.\Generated_Source\PSoC4/CyLib.c ****     *
1996:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
1997:.\Generated_Source\PSoC4/CyLib.c ****     *  Enables the output of the low-voltage monitor when Vddd is at or below the
1998:.\Generated_Source\PSoC4/CyLib.c ****     *  trip point, configures the device to generate an interrupt, and sets the
1999:.\Generated_Source\PSoC4/CyLib.c ****     *  voltage trip level.
2000:.\Generated_Source\PSoC4/CyLib.c ****     *
2001:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
2002:.\Generated_Source\PSoC4/CyLib.c ****     *  threshold: Threshold selection for Low Voltage Detect circuit.
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccBBFZQS.s 			page 41


2003:.\Generated_Source\PSoC4/CyLib.c ****     *  Threshold variation is +/- 2.5% from these typical voltage choices.
2004:.\Generated_Source\PSoC4/CyLib.c ****     *         Define                     Voltage threshold
2005:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_75_V       1.7500 V
2006:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_80_V       1.8000 V
2007:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_90_V       1.9000 V
2008:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_00_V       2.0000 V
2009:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_10_V       2.1000 V
2010:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_20_V       2.2000 V
2011:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_30_V       2.3000 V
2012:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_40_V       2.4000 V
2013:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_50_V       2.5000 V
2014:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_60_V       2.6000 V
2015:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_70_V       2.7000 V
2016:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_80_V       2.8000 V
2017:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_90_V       2.9000 V
2018:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_3_00_V       3.0000 V
2019:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_3_20_V       3.2000 V
2020:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_4_50_V       4.5000 V
2021:.\Generated_Source\PSoC4/CyLib.c ****     *
2022:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
2023:.\Generated_Source\PSoC4/CyLib.c ****     *  None
2024:.\Generated_Source\PSoC4/CyLib.c ****     *
2025:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2026:.\Generated_Source\PSoC4/CyLib.c ****     void CySysLvdEnable(uint32 threshold)
2027:.\Generated_Source\PSoC4/CyLib.c ****     {
2028:.\Generated_Source\PSoC4/CyLib.c ****         /* Prevent propagating a false interrupt */
2029:.\Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= (uint32) ~CY_LVD_PROPAGATE_INT_TO_CPU;
2030:.\Generated_Source\PSoC4/CyLib.c **** 
2031:.\Generated_Source\PSoC4/CyLib.c ****         /* Set specified threshold */
2032:.\Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG = (CY_LVD_PWR_VMON_CONFIG_REG & ~CY_LVD_PWR_VMON_CONFIG_LVD_SEL_
2033:.\Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
2034:.\Generated_Source\PSoC4/CyLib.c **** 
2035:.\Generated_Source\PSoC4/CyLib.c ****         /* Enable the LVD. This may cause a false LVD event. */
2036:.\Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG |= CY_LVD_PWR_VMON_CONFIG_LVD_EN;
2037:.\Generated_Source\PSoC4/CyLib.c **** 
2038:.\Generated_Source\PSoC4/CyLib.c ****         /* Wait for the circuit to stabilize */
2039:.\Generated_Source\PSoC4/CyLib.c ****         CyDelayUs(CY_LVD_STABILIZE_TIMEOUT_US);
2040:.\Generated_Source\PSoC4/CyLib.c **** 
2041:.\Generated_Source\PSoC4/CyLib.c ****         /* Clear the false event */
2042:.\Generated_Source\PSoC4/CyLib.c ****         CySysLvdClearInterrupt();
2043:.\Generated_Source\PSoC4/CyLib.c **** 
2044:.\Generated_Source\PSoC4/CyLib.c ****         /* Unmask the interrupt */
2045:.\Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   |= CY_LVD_PROPAGATE_INT_TO_CPU;
2046:.\Generated_Source\PSoC4/CyLib.c ****     }
2047:.\Generated_Source\PSoC4/CyLib.c **** 
2048:.\Generated_Source\PSoC4/CyLib.c **** 
2049:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2050:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdDisable
2051:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
2052:.\Generated_Source\PSoC4/CyLib.c ****     *
2053:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
2054:.\Generated_Source\PSoC4/CyLib.c ****     *  Disables the low voltage detection. A low voltage interrupt is disabled.
2055:.\Generated_Source\PSoC4/CyLib.c ****     *
2056:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
2057:.\Generated_Source\PSoC4/CyLib.c ****     *  None
2058:.\Generated_Source\PSoC4/CyLib.c ****     *
2059:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccBBFZQS.s 			page 42


2060:.\Generated_Source\PSoC4/CyLib.c ****     *  None
2061:.\Generated_Source\PSoC4/CyLib.c ****     *
2062:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2063:.\Generated_Source\PSoC4/CyLib.c ****     void CySysLvdDisable(void)
2064:.\Generated_Source\PSoC4/CyLib.c ****     {
 273              		.loc 1 2064 0
 274              		.cfi_startproc
2065:.\Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= ~CY_LVD_PROPAGATE_INT_TO_CPU;
 275              		.loc 1 2065 0
 276 0000 054A     		ldr	r2, .L24
 277 0002 1368     		ldr	r3, [r2]
 278 0004 0221     		mov	r1, #2
 279 0006 8B43     		bic	r3, r1
 280 0008 1360     		str	r3, [r2]
2066:.\Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG &= ~CY_LVD_PWR_VMON_CONFIG_LVD_EN;
 281              		.loc 1 2066 0
 282 000a 044A     		ldr	r2, .L24+4
 283 000c 1368     		ldr	r3, [r2]
 284 000e 0139     		sub	r1, r1, #1
 285 0010 8B43     		bic	r3, r1
 286 0012 1360     		str	r3, [r2]
2067:.\Generated_Source\PSoC4/CyLib.c ****     }
 287              		.loc 1 2067 0
 288              		@ sp needed
 289 0014 7047     		bx	lr
 290              	.L25:
 291 0016 C046     		.align	2
 292              	.L24:
 293 0018 08000B40 		.word	1074462728
 294 001c 18000B40 		.word	1074462744
 295              		.cfi_endproc
 296              	.LFE11:
 297              		.size	CySysLvdDisable, .-CySysLvdDisable
 298              		.section	.text.CySysLvdGetInterruptSource,"ax",%progbits
 299              		.align	2
 300              		.global	CySysLvdGetInterruptSource
 301              		.code	16
 302              		.thumb_func
 303              		.type	CySysLvdGetInterruptSource, %function
 304              	CySysLvdGetInterruptSource:
 305              	.LFB12:
2068:.\Generated_Source\PSoC4/CyLib.c **** 
2069:.\Generated_Source\PSoC4/CyLib.c **** 
2070:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2071:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdGetInterruptSource
2072:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
2073:.\Generated_Source\PSoC4/CyLib.c ****     *
2074:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
2075:.\Generated_Source\PSoC4/CyLib.c ****     *  Gets the low voltage detection interrupt status (without clearing).
2076:.\Generated_Source\PSoC4/CyLib.c ****     *
2077:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
2078:.\Generated_Source\PSoC4/CyLib.c ****     *  None
2079:.\Generated_Source\PSoC4/CyLib.c ****     *
2080:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
2081:.\Generated_Source\PSoC4/CyLib.c ****     *  Interrupt request value:
2082:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_SYS_LVD_INT - Indicates an Low Voltage Detect interrupt
2083:.\Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccBBFZQS.s 			page 43


2084:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2085:.\Generated_Source\PSoC4/CyLib.c ****     uint32 CySysLvdGetInterruptSource(void)
2086:.\Generated_Source\PSoC4/CyLib.c ****     {
 306              		.loc 1 2086 0
 307              		.cfi_startproc
2087:.\Generated_Source\PSoC4/CyLib.c ****         return (CY_LVD_PWR_INTR_REG & CY_SYS_LVD_INT);
 308              		.loc 1 2087 0
 309 0000 024B     		ldr	r3, .L27
 310 0002 1B68     		ldr	r3, [r3]
 311 0004 0220     		mov	r0, #2
 312 0006 1840     		and	r0, r3
2088:.\Generated_Source\PSoC4/CyLib.c ****     }
 313              		.loc 1 2088 0
 314              		@ sp needed
 315 0008 7047     		bx	lr
 316              	.L28:
 317 000a C046     		.align	2
 318              	.L27:
 319 000c 04000B40 		.word	1074462724
 320              		.cfi_endproc
 321              	.LFE12:
 322              		.size	CySysLvdGetInterruptSource, .-CySysLvdGetInterruptSource
 323              		.section	.text.CySysLvdClearInterrupt,"ax",%progbits
 324              		.align	2
 325              		.global	CySysLvdClearInterrupt
 326              		.code	16
 327              		.thumb_func
 328              		.type	CySysLvdClearInterrupt, %function
 329              	CySysLvdClearInterrupt:
 330              	.LFB13:
2089:.\Generated_Source\PSoC4/CyLib.c **** 
2090:.\Generated_Source\PSoC4/CyLib.c **** 
2091:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2092:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdClearInterrupt
2093:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
2094:.\Generated_Source\PSoC4/CyLib.c ****     *
2095:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
2096:.\Generated_Source\PSoC4/CyLib.c ****     *  Clears the low voltage detection interrupt status.
2097:.\Generated_Source\PSoC4/CyLib.c ****     *
2098:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
2099:.\Generated_Source\PSoC4/CyLib.c ****     *  None
2100:.\Generated_Source\PSoC4/CyLib.c ****     *
2101:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
2102:.\Generated_Source\PSoC4/CyLib.c ****     *  None
2103:.\Generated_Source\PSoC4/CyLib.c ****     *
2104:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2105:.\Generated_Source\PSoC4/CyLib.c ****     void CySysLvdClearInterrupt(void)
2106:.\Generated_Source\PSoC4/CyLib.c ****     {
 331              		.loc 1 2106 0
 332              		.cfi_startproc
2107:.\Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_REG = CY_SYS_LVD_INT;
 333              		.loc 1 2107 0
 334 0000 0222     		mov	r2, #2
 335 0002 014B     		ldr	r3, .L30
 336 0004 1A60     		str	r2, [r3]
2108:.\Generated_Source\PSoC4/CyLib.c ****     }
 337              		.loc 1 2108 0
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccBBFZQS.s 			page 44


 338              		@ sp needed
 339 0006 7047     		bx	lr
 340              	.L31:
 341              		.align	2
 342              	.L30:
 343 0008 04000B40 		.word	1074462724
 344              		.cfi_endproc
 345              	.LFE13:
 346              		.size	CySysLvdClearInterrupt, .-CySysLvdClearInterrupt
 347              		.section	.text.CySysGetResetReason,"ax",%progbits
 348              		.align	2
 349              		.global	CySysGetResetReason
 350              		.code	16
 351              		.thumb_func
 352              		.type	CySysGetResetReason, %function
 353              	CySysGetResetReason:
 354              	.LFB14:
2109:.\Generated_Source\PSoC4/CyLib.c **** 
2110:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
2111:.\Generated_Source\PSoC4/CyLib.c **** 
2112:.\Generated_Source\PSoC4/CyLib.c **** 
2113:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2114:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysGetResetReason
2115:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2116:.\Generated_Source\PSoC4/CyLib.c **** *
2117:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
2118:.\Generated_Source\PSoC4/CyLib.c **** *  Reports the cause for the latest reset(s) that occurred in the system. All
2119:.\Generated_Source\PSoC4/CyLib.c **** *  the bits in the RES_CAUSE register assert when the corresponding reset cause
2120:.\Generated_Source\PSoC4/CyLib.c **** *  occurs and must be cleared by the firmware. These bits are cleared by the
2121:.\Generated_Source\PSoC4/CyLib.c **** *  hardware only during XRES, POR, or a detected brown-out.
2122:.\Generated_Source\PSoC4/CyLib.c **** *
2123:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
2124:.\Generated_Source\PSoC4/CyLib.c **** *  reason: bits in the RES_CAUSE register to clear.
2125:.\Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_WDT       - WDT caused a reset
2126:.\Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_PROTFAULT - Occured protection violation that requires reset
2127:.\Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_SW        - Cortex-M0 requested a system reset.
2128:.\Generated_Source\PSoC4/CyLib.c **** *
2129:.\Generated_Source\PSoC4/CyLib.c **** * Return:
2130:.\Generated_Source\PSoC4/CyLib.c **** *  Status. Same enumerated bit values as used for the reason parameter.
2131:.\Generated_Source\PSoC4/CyLib.c **** *
2132:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2133:.\Generated_Source\PSoC4/CyLib.c **** uint32 CySysGetResetReason(uint32 reason)
2134:.\Generated_Source\PSoC4/CyLib.c **** {
 355              		.loc 1 2134 0
 356              		.cfi_startproc
 357              	.LVL15:
 358 0000 021C     		mov	r2, r0
2135:.\Generated_Source\PSoC4/CyLib.c ****     uint32 returnStatus;
2136:.\Generated_Source\PSoC4/CyLib.c **** 
2137:.\Generated_Source\PSoC4/CyLib.c ****     reason &= (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
 359              		.loc 1 2137 0
 360 0002 1920     		mov	r0, #25
 361              	.LVL16:
 362 0004 0240     		and	r2, r0
 363              	.LVL17:
2138:.\Generated_Source\PSoC4/CyLib.c ****     returnStatus = CY_SYS_RES_CAUSE_REG &
 364              		.loc 1 2138 0
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccBBFZQS.s 			page 45


 365 0006 0249     		ldr	r1, .L33
 366 0008 0B68     		ldr	r3, [r1]
 367 000a 1840     		and	r0, r3
 368              	.LVL18:
2139:.\Generated_Source\PSoC4/CyLib.c ****                   (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
2140:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_RES_CAUSE_REG = reason;
 369              		.loc 1 2140 0
 370 000c 0A60     		str	r2, [r1]
2141:.\Generated_Source\PSoC4/CyLib.c **** 
2142:.\Generated_Source\PSoC4/CyLib.c ****     return (returnStatus);
2143:.\Generated_Source\PSoC4/CyLib.c **** }
 371              		.loc 1 2143 0
 372              		@ sp needed
 373 000e 7047     		bx	lr
 374              	.L34:
 375              		.align	2
 376              	.L33:
 377 0010 00030B40 		.word	1074463488
 378              		.cfi_endproc
 379              	.LFE14:
 380              		.size	CySysGetResetReason, .-CySysGetResetReason
 381              		.section	.text.CyDisableInts,"ax",%progbits
 382              		.align	2
 383              		.global	CyDisableInts
 384              		.code	16
 385              		.thumb_func
 386              		.type	CyDisableInts, %function
 387              	CyDisableInts:
 388              	.LFB15:
2144:.\Generated_Source\PSoC4/CyLib.c **** 
2145:.\Generated_Source\PSoC4/CyLib.c **** 
2146:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2147:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDisableInts
2148:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2149:.\Generated_Source\PSoC4/CyLib.c **** *
2150:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
2151:.\Generated_Source\PSoC4/CyLib.c **** *  Disables all interrupts.
2152:.\Generated_Source\PSoC4/CyLib.c **** *
2153:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
2154:.\Generated_Source\PSoC4/CyLib.c **** *  None
2155:.\Generated_Source\PSoC4/CyLib.c **** *
2156:.\Generated_Source\PSoC4/CyLib.c **** * Return:
2157:.\Generated_Source\PSoC4/CyLib.c **** *  32 bit mask of previously enabled interrupts.
2158:.\Generated_Source\PSoC4/CyLib.c **** *
2159:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2160:.\Generated_Source\PSoC4/CyLib.c **** uint32 CyDisableInts(void)
2161:.\Generated_Source\PSoC4/CyLib.c **** {
 389              		.loc 1 2161 0
 390              		.cfi_startproc
2162:.\Generated_Source\PSoC4/CyLib.c ****     uint32 intState;
2163:.\Generated_Source\PSoC4/CyLib.c **** 
2164:.\Generated_Source\PSoC4/CyLib.c ****     /* Get current interrupt state. */
2165:.\Generated_Source\PSoC4/CyLib.c ****     intState = CY_INT_CLEAR_REG;
 391              		.loc 1 2165 0
 392 0000 024B     		ldr	r3, .L36
 393 0002 1868     		ldr	r0, [r3]
 394              	.LVL19:
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccBBFZQS.s 			page 46


2166:.\Generated_Source\PSoC4/CyLib.c **** 
2167:.\Generated_Source\PSoC4/CyLib.c ****     /* Disable all interrupts. */
2168:.\Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = CY_INT_CLEAR_DISABLE_ALL;
 395              		.loc 1 2168 0
 396 0004 0122     		mov	r2, #1
 397 0006 5242     		neg	r2, r2
 398 0008 1A60     		str	r2, [r3]
2169:.\Generated_Source\PSoC4/CyLib.c **** 
2170:.\Generated_Source\PSoC4/CyLib.c ****     return (intState);
2171:.\Generated_Source\PSoC4/CyLib.c **** }
 399              		.loc 1 2171 0
 400              		@ sp needed
 401 000a 7047     		bx	lr
 402              	.L37:
 403              		.align	2
 404              	.L36:
 405 000c 80E100E0 		.word	-536813184
 406              		.cfi_endproc
 407              	.LFE15:
 408              		.size	CyDisableInts, .-CyDisableInts
 409              		.section	.text.CyEnableInts,"ax",%progbits
 410              		.align	2
 411              		.global	CyEnableInts
 412              		.code	16
 413              		.thumb_func
 414              		.type	CyEnableInts, %function
 415              	CyEnableInts:
 416              	.LFB16:
2172:.\Generated_Source\PSoC4/CyLib.c **** 
2173:.\Generated_Source\PSoC4/CyLib.c **** 
2174:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2175:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyEnableInts
2176:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2177:.\Generated_Source\PSoC4/CyLib.c **** *
2178:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
2179:.\Generated_Source\PSoC4/CyLib.c **** *  Enables interrupts to a given state.
2180:.\Generated_Source\PSoC4/CyLib.c **** *
2181:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
2182:.\Generated_Source\PSoC4/CyLib.c **** *   mask, 32 bit mask of interrupts to enable.
2183:.\Generated_Source\PSoC4/CyLib.c **** *
2184:.\Generated_Source\PSoC4/CyLib.c **** * Return:
2185:.\Generated_Source\PSoC4/CyLib.c **** *  None
2186:.\Generated_Source\PSoC4/CyLib.c **** *
2187:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2188:.\Generated_Source\PSoC4/CyLib.c **** void CyEnableInts(uint32 mask)
2189:.\Generated_Source\PSoC4/CyLib.c **** {
 417              		.loc 1 2189 0
 418              		.cfi_startproc
 419              	.LVL20:
2190:.\Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = mask;
 420              		.loc 1 2190 0
 421 0000 014B     		ldr	r3, .L39
 422 0002 1860     		str	r0, [r3]
2191:.\Generated_Source\PSoC4/CyLib.c **** }
 423              		.loc 1 2191 0
 424              		@ sp needed
 425 0004 7047     		bx	lr
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccBBFZQS.s 			page 47


 426              	.L40:
 427 0006 C046     		.align	2
 428              	.L39:
 429 0008 00E100E0 		.word	-536813312
 430              		.cfi_endproc
 431              	.LFE16:
 432              		.size	CyEnableInts, .-CyEnableInts
 433              		.section	.text.CyIntEnable,"ax",%progbits
 434              		.align	2
 435              		.global	CyIntEnable
 436              		.code	16
 437              		.thumb_func
 438              		.type	CyIntEnable, %function
 439              	CyIntEnable:
 440              	.LFB23:
2192:.\Generated_Source\PSoC4/CyLib.c **** 
2193:.\Generated_Source\PSoC4/CyLib.c **** 
2194:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2195:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetSysVector
2196:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2197:.\Generated_Source\PSoC4/CyLib.c **** *
2198:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
2199:.\Generated_Source\PSoC4/CyLib.c **** *  Sets the interrupt vector of the specified system interrupt number. These
2200:.\Generated_Source\PSoC4/CyLib.c **** *  interrupts are for SysTick, PendSV and others.
2201:.\Generated_Source\PSoC4/CyLib.c **** *
2202:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
2203:.\Generated_Source\PSoC4/CyLib.c **** *  number: System interrupt number:
2204:.\Generated_Source\PSoC4/CyLib.c **** *    CY_INT_NMI_IRQN        - Non Maskable Interrupt
2205:.\Generated_Source\PSoC4/CyLib.c **** *    CY_INT_HARD_FAULT_IRQN - Hard Fault Interrupt
2206:.\Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SVCALL_IRQN     - SV Call Interrupt
2207:.\Generated_Source\PSoC4/CyLib.c **** *    CY_INT_PEND_SV_IRQN    - Pend SV Interrupt
2208:.\Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SYSTICK_IRQN    - System Tick Interrupt
2209:.\Generated_Source\PSoC4/CyLib.c **** *
2210:.\Generated_Source\PSoC4/CyLib.c **** *  address: Pointer to an interrupt service routine.
2211:.\Generated_Source\PSoC4/CyLib.c **** *
2212:.\Generated_Source\PSoC4/CyLib.c **** * Return:
2213:.\Generated_Source\PSoC4/CyLib.c **** *  The old ISR vector at this location.
2214:.\Generated_Source\PSoC4/CyLib.c **** *
2215:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2216:.\Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntSetSysVector(uint8 number, cyisraddress address)
2217:.\Generated_Source\PSoC4/CyLib.c **** {
2218:.\Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
2219:.\Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2220:.\Generated_Source\PSoC4/CyLib.c **** 
2221:.\Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
2222:.\Generated_Source\PSoC4/CyLib.c **** 
2223:.\Generated_Source\PSoC4/CyLib.c ****     /* Save old Interrupt service routine. */
2224:.\Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[number];
2225:.\Generated_Source\PSoC4/CyLib.c **** 
2226:.\Generated_Source\PSoC4/CyLib.c ****     /* Set new Interrupt service routine. */
2227:.\Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[number] = address;
2228:.\Generated_Source\PSoC4/CyLib.c **** 
2229:.\Generated_Source\PSoC4/CyLib.c ****     return(oldIsr);
2230:.\Generated_Source\PSoC4/CyLib.c **** }
2231:.\Generated_Source\PSoC4/CyLib.c **** 
2232:.\Generated_Source\PSoC4/CyLib.c **** 
2233:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccBBFZQS.s 			page 48


2234:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetSysVector
2235:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2236:.\Generated_Source\PSoC4/CyLib.c **** *
2237:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
2238:.\Generated_Source\PSoC4/CyLib.c **** *   Gets the interrupt vector of the specified system interrupt number. These
2239:.\Generated_Source\PSoC4/CyLib.c **** *   interrupts are for SysTick, PendSV and others.
2240:.\Generated_Source\PSoC4/CyLib.c **** *
2241:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
2242:.\Generated_Source\PSoC4/CyLib.c **** *  number: System interrupt number:
2243:.\Generated_Source\PSoC4/CyLib.c **** *    CY_INT_NMI_IRQN        - Non Maskable Interrupt
2244:.\Generated_Source\PSoC4/CyLib.c **** *    CY_INT_HARD_FAULT_IRQN - Hard Fault Interrupt
2245:.\Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SVCALL_IRQN     - SV Call Interrupt
2246:.\Generated_Source\PSoC4/CyLib.c **** *    CY_INT_PEND_SV_IRQN    - Pend SV Interrupt
2247:.\Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SYSTICK_IRQN    - System Tick Interrupt
2248:.\Generated_Source\PSoC4/CyLib.c **** *
2249:.\Generated_Source\PSoC4/CyLib.c **** * Return:
2250:.\Generated_Source\PSoC4/CyLib.c **** *   Address of the ISR in the interrupt vector table.
2251:.\Generated_Source\PSoC4/CyLib.c **** *
2252:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2253:.\Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntGetSysVector(uint8 number)
2254:.\Generated_Source\PSoC4/CyLib.c **** {
2255:.\Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2256:.\Generated_Source\PSoC4/CyLib.c **** 
2257:.\Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
2258:.\Generated_Source\PSoC4/CyLib.c **** 
2259:.\Generated_Source\PSoC4/CyLib.c ****     return(ramVectorTable[number]);
2260:.\Generated_Source\PSoC4/CyLib.c **** }
2261:.\Generated_Source\PSoC4/CyLib.c **** 
2262:.\Generated_Source\PSoC4/CyLib.c **** 
2263:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2264:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetVector
2265:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2266:.\Generated_Source\PSoC4/CyLib.c **** *
2267:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
2268:.\Generated_Source\PSoC4/CyLib.c **** *  Sets the interrupt vector of the specified interrupt number.
2269:.\Generated_Source\PSoC4/CyLib.c **** *
2270:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
2271:.\Generated_Source\PSoC4/CyLib.c **** *  number: Valid range [0-31].  Interrupt number
2272:.\Generated_Source\PSoC4/CyLib.c **** *  address: Pointer to an interrupt service routine
2273:.\Generated_Source\PSoC4/CyLib.c **** *
2274:.\Generated_Source\PSoC4/CyLib.c **** * Return:
2275:.\Generated_Source\PSoC4/CyLib.c **** *   Previous interrupt vector value.
2276:.\Generated_Source\PSoC4/CyLib.c **** *
2277:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2278:.\Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntSetVector(uint8 number, cyisraddress address)
2279:.\Generated_Source\PSoC4/CyLib.c **** {
2280:.\Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
2281:.\Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2282:.\Generated_Source\PSoC4/CyLib.c **** 
2283:.\Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2284:.\Generated_Source\PSoC4/CyLib.c **** 
2285:.\Generated_Source\PSoC4/CyLib.c ****     /* Save old Interrupt service routine. */
2286:.\Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[CY_INT_IRQ_BASE + number];
2287:.\Generated_Source\PSoC4/CyLib.c **** 
2288:.\Generated_Source\PSoC4/CyLib.c ****     /* Set new Interrupt service routine. */
2289:.\Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[CY_INT_IRQ_BASE + number] = address;
2290:.\Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccBBFZQS.s 			page 49


2291:.\Generated_Source\PSoC4/CyLib.c ****     return(oldIsr);
2292:.\Generated_Source\PSoC4/CyLib.c **** }
2293:.\Generated_Source\PSoC4/CyLib.c **** 
2294:.\Generated_Source\PSoC4/CyLib.c **** 
2295:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2296:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetVector
2297:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2298:.\Generated_Source\PSoC4/CyLib.c **** *
2299:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
2300:.\Generated_Source\PSoC4/CyLib.c **** *  Gets the interrupt vector of the specified interrupt number.
2301:.\Generated_Source\PSoC4/CyLib.c **** *
2302:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
2303:.\Generated_Source\PSoC4/CyLib.c **** *  number: Valid range [0-31].  Interrupt number
2304:.\Generated_Source\PSoC4/CyLib.c **** *
2305:.\Generated_Source\PSoC4/CyLib.c **** * Return:
2306:.\Generated_Source\PSoC4/CyLib.c **** *  Address of the ISR in the interrupt vector table.
2307:.\Generated_Source\PSoC4/CyLib.c **** *
2308:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2309:.\Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntGetVector(uint8 number)
2310:.\Generated_Source\PSoC4/CyLib.c **** {
2311:.\Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2312:.\Generated_Source\PSoC4/CyLib.c **** 
2313:.\Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2314:.\Generated_Source\PSoC4/CyLib.c **** 
2315:.\Generated_Source\PSoC4/CyLib.c ****     return (ramVectorTable[CY_INT_IRQ_BASE + number]);
2316:.\Generated_Source\PSoC4/CyLib.c **** }
2317:.\Generated_Source\PSoC4/CyLib.c **** 
2318:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2319:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetPriority
2320:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2321:.\Generated_Source\PSoC4/CyLib.c **** *
2322:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
2323:.\Generated_Source\PSoC4/CyLib.c **** *  Sets the priority of the interrupt.
2324:.\Generated_Source\PSoC4/CyLib.c **** *
2325:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
2326:.\Generated_Source\PSoC4/CyLib.c **** *  priority: Priority of the interrupt. 0 - 3, 0 being the highest.
2327:.\Generated_Source\PSoC4/CyLib.c **** *  number: The number of the interrupt, 0 - 31.
2328:.\Generated_Source\PSoC4/CyLib.c **** *
2329:.\Generated_Source\PSoC4/CyLib.c **** * Return:
2330:.\Generated_Source\PSoC4/CyLib.c **** *  None
2331:.\Generated_Source\PSoC4/CyLib.c **** *
2332:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2333:.\Generated_Source\PSoC4/CyLib.c **** void CyIntSetPriority(uint8 number, uint8 priority)
2334:.\Generated_Source\PSoC4/CyLib.c **** {
2335:.\Generated_Source\PSoC4/CyLib.c ****     uint8 interruptState;
2336:.\Generated_Source\PSoC4/CyLib.c ****     uint32 shift;
2337:.\Generated_Source\PSoC4/CyLib.c ****     uint32 value;
2338:.\Generated_Source\PSoC4/CyLib.c **** 
2339:.\Generated_Source\PSoC4/CyLib.c ****     CYASSERT(priority <= CY_MIN_PRIORITY);
2340:.\Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2341:.\Generated_Source\PSoC4/CyLib.c **** 
2342:.\Generated_Source\PSoC4/CyLib.c ****     shift = CY_INT_PRIORITY_SHIFT(number);
2343:.\Generated_Source\PSoC4/CyLib.c **** 
2344:.\Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
2345:.\Generated_Source\PSoC4/CyLib.c **** 
2346:.\Generated_Source\PSoC4/CyLib.c ****     value = CY_INT_PRIORITY_REG(number);
2347:.\Generated_Source\PSoC4/CyLib.c ****     value &= (uint32)(~((uint32)(CY_INT_PRIORITY_MASK << shift)));
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccBBFZQS.s 			page 50


2348:.\Generated_Source\PSoC4/CyLib.c ****     value |= ((uint32)priority << shift);
2349:.\Generated_Source\PSoC4/CyLib.c ****     CY_INT_PRIORITY_REG(number) = value;
2350:.\Generated_Source\PSoC4/CyLib.c **** 
2351:.\Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
2352:.\Generated_Source\PSoC4/CyLib.c **** }
2353:.\Generated_Source\PSoC4/CyLib.c **** 
2354:.\Generated_Source\PSoC4/CyLib.c **** 
2355:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2356:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetPriority
2357:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2358:.\Generated_Source\PSoC4/CyLib.c **** *
2359:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
2360:.\Generated_Source\PSoC4/CyLib.c **** *  Gets the priority of the interrupt.
2361:.\Generated_Source\PSoC4/CyLib.c **** *
2362:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
2363:.\Generated_Source\PSoC4/CyLib.c **** *  number: The number of the interrupt, 0 - 31.
2364:.\Generated_Source\PSoC4/CyLib.c **** *
2365:.\Generated_Source\PSoC4/CyLib.c **** * Return:
2366:.\Generated_Source\PSoC4/CyLib.c **** *  Priority of the interrupt. 0 - 3, 0 being the highest.
2367:.\Generated_Source\PSoC4/CyLib.c **** *
2368:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2369:.\Generated_Source\PSoC4/CyLib.c **** uint8 CyIntGetPriority(uint8 number)
2370:.\Generated_Source\PSoC4/CyLib.c **** {
2371:.\Generated_Source\PSoC4/CyLib.c ****     uint8 priority;
2372:.\Generated_Source\PSoC4/CyLib.c **** 
2373:.\Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2374:.\Generated_Source\PSoC4/CyLib.c **** 
2375:.\Generated_Source\PSoC4/CyLib.c ****     priority = (uint8) (CY_INT_PRIORITY_REG(number) >> CY_INT_PRIORITY_SHIFT(number));
2376:.\Generated_Source\PSoC4/CyLib.c **** 
2377:.\Generated_Source\PSoC4/CyLib.c ****     return (priority & (uint8) CY_INT_PRIORITY_MASK);
2378:.\Generated_Source\PSoC4/CyLib.c **** }
2379:.\Generated_Source\PSoC4/CyLib.c **** 
2380:.\Generated_Source\PSoC4/CyLib.c **** 
2381:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2382:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntEnable
2383:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2384:.\Generated_Source\PSoC4/CyLib.c **** *
2385:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
2386:.\Generated_Source\PSoC4/CyLib.c **** *  Enables the specified interrupt number.
2387:.\Generated_Source\PSoC4/CyLib.c **** *
2388:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
2389:.\Generated_Source\PSoC4/CyLib.c **** *  number: Valid range [0-31].  Interrupt number
2390:.\Generated_Source\PSoC4/CyLib.c **** *
2391:.\Generated_Source\PSoC4/CyLib.c **** * Return:
2392:.\Generated_Source\PSoC4/CyLib.c **** *  None
2393:.\Generated_Source\PSoC4/CyLib.c **** *
2394:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2395:.\Generated_Source\PSoC4/CyLib.c **** void CyIntEnable(uint8 number)
2396:.\Generated_Source\PSoC4/CyLib.c **** {
 441              		.loc 1 2396 0
 442              		.cfi_startproc
 443              	.LVL21:
2397:.\Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 444              		.loc 1 2397 0
 445 0000 1F23     		mov	r3, #31
 446 0002 1840     		and	r0, r3
 447              	.LVL22:
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccBBFZQS.s 			page 51


 448 0004 1E3B     		sub	r3, r3, #30
 449 0006 8340     		lsl	r3, r3, r0
 450 0008 181C     		mov	r0, r3
 451 000a 014B     		ldr	r3, .L42
 452 000c 1860     		str	r0, [r3]
2398:.\Generated_Source\PSoC4/CyLib.c **** }
 453              		.loc 1 2398 0
 454              		@ sp needed
 455 000e 7047     		bx	lr
 456              	.L43:
 457              		.align	2
 458              	.L42:
 459 0010 00E100E0 		.word	-536813312
 460              		.cfi_endproc
 461              	.LFE23:
 462              		.size	CyIntEnable, .-CyIntEnable
 463              		.section	.text.CyIntGetState,"ax",%progbits
 464              		.align	2
 465              		.global	CyIntGetState
 466              		.code	16
 467              		.thumb_func
 468              		.type	CyIntGetState, %function
 469              	CyIntGetState:
 470              	.LFB24:
2399:.\Generated_Source\PSoC4/CyLib.c **** 
2400:.\Generated_Source\PSoC4/CyLib.c **** 
2401:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2402:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetState
2403:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2404:.\Generated_Source\PSoC4/CyLib.c **** *
2405:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
2406:.\Generated_Source\PSoC4/CyLib.c **** *  Gets the enable state of the specified interrupt number.
2407:.\Generated_Source\PSoC4/CyLib.c **** *
2408:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
2409:.\Generated_Source\PSoC4/CyLib.c **** *  number: Valid range [0-31].  Interrupt number.
2410:.\Generated_Source\PSoC4/CyLib.c **** *
2411:.\Generated_Source\PSoC4/CyLib.c **** * Return:
2412:.\Generated_Source\PSoC4/CyLib.c **** *  Enable status: 1 if enabled, 0 if disabled
2413:.\Generated_Source\PSoC4/CyLib.c **** *
2414:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2415:.\Generated_Source\PSoC4/CyLib.c **** uint8 CyIntGetState(uint8 number)
2416:.\Generated_Source\PSoC4/CyLib.c **** {
 471              		.loc 1 2416 0
 472              		.cfi_startproc
 473              	.LVL23:
2417:.\Generated_Source\PSoC4/CyLib.c ****     /* Get state of interrupt. */
2418:.\Generated_Source\PSoC4/CyLib.c ****     return ((0u != (CY_INT_ENABLE_REG & ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number)))) ?
 474              		.loc 1 2418 0
 475 0000 044B     		ldr	r3, .L45
 476 0002 1B68     		ldr	r3, [r3]
 477 0004 1F22     		mov	r2, #31
 478 0006 1040     		and	r0, r2
 479              	.LVL24:
 480 0008 C340     		lsr	r3, r3, r0
 481 000a 181C     		mov	r0, r3
 482 000c 0123     		mov	r3, #1
 483 000e 1840     		and	r0, r3
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccBBFZQS.s 			page 52


2419:.\Generated_Source\PSoC4/CyLib.c **** }
 484              		.loc 1 2419 0
 485              		@ sp needed
 486 0010 7047     		bx	lr
 487              	.L46:
 488 0012 C046     		.align	2
 489              	.L45:
 490 0014 00E100E0 		.word	-536813312
 491              		.cfi_endproc
 492              	.LFE24:
 493              		.size	CyIntGetState, .-CyIntGetState
 494              		.section	.text.CyIntDisable,"ax",%progbits
 495              		.align	2
 496              		.global	CyIntDisable
 497              		.code	16
 498              		.thumb_func
 499              		.type	CyIntDisable, %function
 500              	CyIntDisable:
 501              	.LFB25:
2420:.\Generated_Source\PSoC4/CyLib.c **** 
2421:.\Generated_Source\PSoC4/CyLib.c **** 
2422:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2423:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntDisable
2424:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2425:.\Generated_Source\PSoC4/CyLib.c **** *
2426:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
2427:.\Generated_Source\PSoC4/CyLib.c **** *   Disables the specified interrupt number.
2428:.\Generated_Source\PSoC4/CyLib.c **** *
2429:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
2430:.\Generated_Source\PSoC4/CyLib.c **** *   number: Valid range [0-31].  Interrupt number.
2431:.\Generated_Source\PSoC4/CyLib.c **** *
2432:.\Generated_Source\PSoC4/CyLib.c **** * Return:
2433:.\Generated_Source\PSoC4/CyLib.c **** *  None
2434:.\Generated_Source\PSoC4/CyLib.c **** *
2435:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2436:.\Generated_Source\PSoC4/CyLib.c **** void CyIntDisable(uint8 number)
2437:.\Generated_Source\PSoC4/CyLib.c **** {
 502              		.loc 1 2437 0
 503              		.cfi_startproc
 504              	.LVL25:
2438:.\Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 505              		.loc 1 2438 0
 506 0000 1F23     		mov	r3, #31
 507 0002 1840     		and	r0, r3
 508              	.LVL26:
 509 0004 1E3B     		sub	r3, r3, #30
 510 0006 8340     		lsl	r3, r3, r0
 511 0008 181C     		mov	r0, r3
 512 000a 014B     		ldr	r3, .L48
 513 000c 1860     		str	r0, [r3]
2439:.\Generated_Source\PSoC4/CyLib.c **** }
 514              		.loc 1 2439 0
 515              		@ sp needed
 516 000e 7047     		bx	lr
 517              	.L49:
 518              		.align	2
 519              	.L48:
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccBBFZQS.s 			page 53


 520 0010 80E100E0 		.word	-536813184
 521              		.cfi_endproc
 522              	.LFE25:
 523              		.size	CyIntDisable, .-CyIntDisable
 524              		.section	.text.CyIntSetPending,"ax",%progbits
 525              		.align	2
 526              		.global	CyIntSetPending
 527              		.code	16
 528              		.thumb_func
 529              		.type	CyIntSetPending, %function
 530              	CyIntSetPending:
 531              	.LFB26:
2440:.\Generated_Source\PSoC4/CyLib.c **** 
2441:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2442:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetPending
2443:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2444:.\Generated_Source\PSoC4/CyLib.c **** *
2445:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
2446:.\Generated_Source\PSoC4/CyLib.c **** *  Forces the specified interrupt number to be pending.
2447:.\Generated_Source\PSoC4/CyLib.c **** *
2448:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
2449:.\Generated_Source\PSoC4/CyLib.c **** *  number: Valid range [0-31].  Interrupt number.
2450:.\Generated_Source\PSoC4/CyLib.c **** *
2451:.\Generated_Source\PSoC4/CyLib.c **** * Return:
2452:.\Generated_Source\PSoC4/CyLib.c **** *  None
2453:.\Generated_Source\PSoC4/CyLib.c **** *
2454:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2455:.\Generated_Source\PSoC4/CyLib.c **** void CyIntSetPending(uint8 number)
2456:.\Generated_Source\PSoC4/CyLib.c **** {
 532              		.loc 1 2456 0
 533              		.cfi_startproc
 534              	.LVL27:
2457:.\Generated_Source\PSoC4/CyLib.c ****     CY_INT_SET_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 535              		.loc 1 2457 0
 536 0000 1F23     		mov	r3, #31
 537 0002 1840     		and	r0, r3
 538              	.LVL28:
 539 0004 1E3B     		sub	r3, r3, #30
 540 0006 8340     		lsl	r3, r3, r0
 541 0008 181C     		mov	r0, r3
 542 000a 014B     		ldr	r3, .L51
 543 000c 1860     		str	r0, [r3]
2458:.\Generated_Source\PSoC4/CyLib.c **** }
 544              		.loc 1 2458 0
 545              		@ sp needed
 546 000e 7047     		bx	lr
 547              	.L52:
 548              		.align	2
 549              	.L51:
 550 0010 00E200E0 		.word	-536813056
 551              		.cfi_endproc
 552              	.LFE26:
 553              		.size	CyIntSetPending, .-CyIntSetPending
 554              		.section	.text.CyIntClearPending,"ax",%progbits
 555              		.align	2
 556              		.global	CyIntClearPending
 557              		.code	16
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccBBFZQS.s 			page 54


 558              		.thumb_func
 559              		.type	CyIntClearPending, %function
 560              	CyIntClearPending:
 561              	.LFB27:
2459:.\Generated_Source\PSoC4/CyLib.c **** 
2460:.\Generated_Source\PSoC4/CyLib.c **** 
2461:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2462:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntClearPending
2463:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2464:.\Generated_Source\PSoC4/CyLib.c **** *
2465:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
2466:.\Generated_Source\PSoC4/CyLib.c **** *  Clears any pending interrupt for the specified interrupt number.
2467:.\Generated_Source\PSoC4/CyLib.c **** *
2468:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
2469:.\Generated_Source\PSoC4/CyLib.c **** *  number: Valid range [0-31].  Interrupt number.
2470:.\Generated_Source\PSoC4/CyLib.c **** *
2471:.\Generated_Source\PSoC4/CyLib.c **** * Return:
2472:.\Generated_Source\PSoC4/CyLib.c **** *  None
2473:.\Generated_Source\PSoC4/CyLib.c **** *
2474:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2475:.\Generated_Source\PSoC4/CyLib.c **** void CyIntClearPending(uint8 number)
2476:.\Generated_Source\PSoC4/CyLib.c **** {
 562              		.loc 1 2476 0
 563              		.cfi_startproc
 564              	.LVL29:
2477:.\Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLR_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 565              		.loc 1 2477 0
 566 0000 1F23     		mov	r3, #31
 567 0002 1840     		and	r0, r3
 568              	.LVL30:
 569 0004 1E3B     		sub	r3, r3, #30
 570 0006 8340     		lsl	r3, r3, r0
 571 0008 181C     		mov	r0, r3
 572 000a 014B     		ldr	r3, .L54
 573 000c 1860     		str	r0, [r3]
2478:.\Generated_Source\PSoC4/CyLib.c **** }
 574              		.loc 1 2478 0
 575              		@ sp needed
 576 000e 7047     		bx	lr
 577              	.L55:
 578              		.align	2
 579              	.L54:
 580 0010 80E200E0 		.word	-536812928
 581              		.cfi_endproc
 582              	.LFE27:
 583              		.size	CyIntClearPending, .-CyIntClearPending
 584              		.section	.text.CyHalt,"ax",%progbits
 585              		.align	2
 586              		.global	CyHalt
 587              		.code	16
 588              		.thumb_func
 589              		.type	CyHalt, %function
 590              	CyHalt:
 591              	.LFB28:
2479:.\Generated_Source\PSoC4/CyLib.c **** 
2480:.\Generated_Source\PSoC4/CyLib.c **** 
2481:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccBBFZQS.s 			page 55


2482:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyHalt
2483:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2484:.\Generated_Source\PSoC4/CyLib.c **** *
2485:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
2486:.\Generated_Source\PSoC4/CyLib.c **** *  Halts the CPU.
2487:.\Generated_Source\PSoC4/CyLib.c **** *
2488:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
2489:.\Generated_Source\PSoC4/CyLib.c **** *  reason: Value to be used during debugging.
2490:.\Generated_Source\PSoC4/CyLib.c **** *
2491:.\Generated_Source\PSoC4/CyLib.c **** * Return:
2492:.\Generated_Source\PSoC4/CyLib.c **** *  None
2493:.\Generated_Source\PSoC4/CyLib.c **** *
2494:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2495:.\Generated_Source\PSoC4/CyLib.c **** void CyHalt(uint8 reason)
2496:.\Generated_Source\PSoC4/CyLib.c **** {
 592              		.loc 1 2496 0
 593              		.cfi_startproc
 594              	.LVL31:
2497:.\Generated_Source\PSoC4/CyLib.c ****     if(0u != reason)
2498:.\Generated_Source\PSoC4/CyLib.c ****     {
2499:.\Generated_Source\PSoC4/CyLib.c ****         /* To remove unreferenced local variable warning */
2500:.\Generated_Source\PSoC4/CyLib.c ****     }
2501:.\Generated_Source\PSoC4/CyLib.c **** 
2502:.\Generated_Source\PSoC4/CyLib.c ****     #if defined (__ARMCC_VERSION)
2503:.\Generated_Source\PSoC4/CyLib.c ****         __breakpoint(0x0);
2504:.\Generated_Source\PSoC4/CyLib.c ****     #elif defined(__GNUC__) || defined (__ICCARM__)
2505:.\Generated_Source\PSoC4/CyLib.c ****         __asm("    bkpt    1");
 595              		.loc 1 2505 0
 596              	@ 2505 ".\Generated_Source\PSoC4\CyLib.c" 1
 597 0000 01BE     		    bkpt    1
 598              	@ 0 "" 2
2506:.\Generated_Source\PSoC4/CyLib.c ****     #elif defined(__C51__)
2507:.\Generated_Source\PSoC4/CyLib.c ****         CYDEV_HALT_CPU;
2508:.\Generated_Source\PSoC4/CyLib.c ****     #endif  /* (__ARMCC_VERSION) */
2509:.\Generated_Source\PSoC4/CyLib.c **** }
 599              		.loc 1 2509 0
 600              		.code	16
 601              		@ sp needed
 602 0002 7047     		bx	lr
 603              		.cfi_endproc
 604              	.LFE28:
 605              		.size	CyHalt, .-CyHalt
 606              		.section	.text.CyIntSetSysVector,"ax",%progbits
 607              		.align	2
 608              		.global	CyIntSetSysVector
 609              		.code	16
 610              		.thumb_func
 611              		.type	CyIntSetSysVector, %function
 612              	CyIntSetSysVector:
 613              	.LFB17:
2217:.\Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
 614              		.loc 1 2217 0
 615              		.cfi_startproc
 616              	.LVL32:
 617 0000 38B5     		push	{r3, r4, r5, lr}
 618              		.cfi_def_cfa_offset 16
 619              		.cfi_offset 3, -16
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccBBFZQS.s 			page 56


 620              		.cfi_offset 4, -12
 621              		.cfi_offset 5, -8
 622              		.cfi_offset 14, -4
 623 0002 041C     		mov	r4, r0
 624 0004 0D1C     		mov	r5, r1
 625              	.LVL33:
2221:.\Generated_Source\PSoC4/CyLib.c **** 
 626              		.loc 1 2221 0
 627 0006 0F28     		cmp	r0, #15
 628 0008 02D9     		bls	.L58
2221:.\Generated_Source\PSoC4/CyLib.c **** 
 629              		.loc 1 2221 0 is_stmt 0 discriminator 1
 630 000a 0020     		mov	r0, #0
 631              	.LVL34:
 632 000c FFF7FEFF 		bl	CyHalt
 633              	.LVL35:
 634              	.L58:
2224:.\Generated_Source\PSoC4/CyLib.c **** 
 635              		.loc 1 2224 0 is_stmt 1
 636 0010 A400     		lsl	r4, r4, #2
 637 0012 8023     		mov	r3, #128
 638 0014 9B05     		lsl	r3, r3, #22
 639 0016 9C46     		mov	ip, r3
 640 0018 6444     		add	r4, r4, ip
 641 001a 2068     		ldr	r0, [r4]
 642              	.LVL36:
2227:.\Generated_Source\PSoC4/CyLib.c **** 
 643              		.loc 1 2227 0
 644 001c 2560     		str	r5, [r4]
2230:.\Generated_Source\PSoC4/CyLib.c **** 
 645              		.loc 1 2230 0
 646              		@ sp needed
 647              	.LVL37:
 648 001e 38BD     		pop	{r3, r4, r5, pc}
 649              		.cfi_endproc
 650              	.LFE17:
 651              		.size	CyIntSetSysVector, .-CyIntSetSysVector
 652              		.section	.text.CyIntGetSysVector,"ax",%progbits
 653              		.align	2
 654              		.global	CyIntGetSysVector
 655              		.code	16
 656              		.thumb_func
 657              		.type	CyIntGetSysVector, %function
 658              	CyIntGetSysVector:
 659              	.LFB18:
2254:.\Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 660              		.loc 1 2254 0
 661              		.cfi_startproc
 662              	.LVL38:
 663 0000 10B5     		push	{r4, lr}
 664              		.cfi_def_cfa_offset 8
 665              		.cfi_offset 4, -8
 666              		.cfi_offset 14, -4
 667 0002 041E     		sub	r4, r0, #0
 668              	.LVL39:
2257:.\Generated_Source\PSoC4/CyLib.c **** 
 669              		.loc 1 2257 0
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccBBFZQS.s 			page 57


 670 0004 0F2C     		cmp	r4, #15
 671 0006 02D9     		bls	.L60
2257:.\Generated_Source\PSoC4/CyLib.c **** 
 672              		.loc 1 2257 0 is_stmt 0 discriminator 1
 673 0008 0020     		mov	r0, #0
 674              	.LVL40:
 675 000a FFF7FEFF 		bl	CyHalt
 676              	.LVL41:
 677              	.L60:
2259:.\Generated_Source\PSoC4/CyLib.c **** }
 678              		.loc 1 2259 0 is_stmt 1
 679 000e A400     		lsl	r4, r4, #2
 680 0010 8023     		mov	r3, #128
 681 0012 9B05     		lsl	r3, r3, #22
 682 0014 9C46     		mov	ip, r3
 683 0016 6444     		add	r4, r4, ip
 684 0018 2068     		ldr	r0, [r4]
2260:.\Generated_Source\PSoC4/CyLib.c **** 
 685              		.loc 1 2260 0
 686              		@ sp needed
 687 001a 10BD     		pop	{r4, pc}
 688              		.cfi_endproc
 689              	.LFE18:
 690              		.size	CyIntGetSysVector, .-CyIntGetSysVector
 691              		.section	.text.CyIntSetVector,"ax",%progbits
 692              		.align	2
 693              		.global	CyIntSetVector
 694              		.code	16
 695              		.thumb_func
 696              		.type	CyIntSetVector, %function
 697              	CyIntSetVector:
 698              	.LFB19:
2279:.\Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
 699              		.loc 1 2279 0
 700              		.cfi_startproc
 701              	.LVL42:
 702 0000 38B5     		push	{r3, r4, r5, lr}
 703              		.cfi_def_cfa_offset 16
 704              		.cfi_offset 3, -16
 705              		.cfi_offset 4, -12
 706              		.cfi_offset 5, -8
 707              		.cfi_offset 14, -4
 708 0002 041C     		mov	r4, r0
 709 0004 0D1C     		mov	r5, r1
 710              	.LVL43:
2283:.\Generated_Source\PSoC4/CyLib.c **** 
 711              		.loc 1 2283 0
 712 0006 1F28     		cmp	r0, #31
 713 0008 02D9     		bls	.L62
2283:.\Generated_Source\PSoC4/CyLib.c **** 
 714              		.loc 1 2283 0 is_stmt 0 discriminator 1
 715 000a 0020     		mov	r0, #0
 716              	.LVL44:
 717 000c FFF7FEFF 		bl	CyHalt
 718              	.LVL45:
 719              	.L62:
2286:.\Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccBBFZQS.s 			page 58


 720              		.loc 1 2286 0 is_stmt 1
 721 0010 A400     		lsl	r4, r4, #2
 722 0012 034B     		ldr	r3, .L63
 723 0014 9C46     		mov	ip, r3
 724 0016 6444     		add	r4, r4, ip
 725 0018 2068     		ldr	r0, [r4]
 726              	.LVL46:
2289:.\Generated_Source\PSoC4/CyLib.c **** 
 727              		.loc 1 2289 0
 728 001a 2560     		str	r5, [r4]
2292:.\Generated_Source\PSoC4/CyLib.c **** 
 729              		.loc 1 2292 0
 730              		@ sp needed
 731              	.LVL47:
 732 001c 38BD     		pop	{r3, r4, r5, pc}
 733              	.L64:
 734 001e C046     		.align	2
 735              	.L63:
 736 0020 40000020 		.word	536870976
 737              		.cfi_endproc
 738              	.LFE19:
 739              		.size	CyIntSetVector, .-CyIntSetVector
 740              		.section	.text.CyIntGetVector,"ax",%progbits
 741              		.align	2
 742              		.global	CyIntGetVector
 743              		.code	16
 744              		.thumb_func
 745              		.type	CyIntGetVector, %function
 746              	CyIntGetVector:
 747              	.LFB20:
2310:.\Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 748              		.loc 1 2310 0
 749              		.cfi_startproc
 750              	.LVL48:
 751 0000 10B5     		push	{r4, lr}
 752              		.cfi_def_cfa_offset 8
 753              		.cfi_offset 4, -8
 754              		.cfi_offset 14, -4
 755 0002 041E     		sub	r4, r0, #0
 756              	.LVL49:
2313:.\Generated_Source\PSoC4/CyLib.c **** 
 757              		.loc 1 2313 0
 758 0004 1F2C     		cmp	r4, #31
 759 0006 02D9     		bls	.L66
2313:.\Generated_Source\PSoC4/CyLib.c **** 
 760              		.loc 1 2313 0 is_stmt 0 discriminator 1
 761 0008 0020     		mov	r0, #0
 762              	.LVL50:
 763 000a FFF7FEFF 		bl	CyHalt
 764              	.LVL51:
 765              	.L66:
2315:.\Generated_Source\PSoC4/CyLib.c **** }
 766              		.loc 1 2315 0 is_stmt 1
 767 000e A400     		lsl	r4, r4, #2
 768 0010 024B     		ldr	r3, .L67
 769 0012 9C46     		mov	ip, r3
 770 0014 6444     		add	r4, r4, ip
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccBBFZQS.s 			page 59


 771 0016 2068     		ldr	r0, [r4]
2316:.\Generated_Source\PSoC4/CyLib.c **** 
 772              		.loc 1 2316 0
 773              		@ sp needed
 774 0018 10BD     		pop	{r4, pc}
 775              	.L68:
 776 001a C046     		.align	2
 777              	.L67:
 778 001c 40000020 		.word	536870976
 779              		.cfi_endproc
 780              	.LFE20:
 781              		.size	CyIntGetVector, .-CyIntGetVector
 782              		.section	.text.CyIntSetPriority,"ax",%progbits
 783              		.align	2
 784              		.global	CyIntSetPriority
 785              		.code	16
 786              		.thumb_func
 787              		.type	CyIntSetPriority, %function
 788              	CyIntSetPriority:
 789              	.LFB21:
2334:.\Generated_Source\PSoC4/CyLib.c ****     uint8 interruptState;
 790              		.loc 1 2334 0
 791              		.cfi_startproc
 792              	.LVL52:
 793 0000 70B5     		push	{r4, r5, r6, lr}
 794              		.cfi_def_cfa_offset 16
 795              		.cfi_offset 4, -16
 796              		.cfi_offset 5, -12
 797              		.cfi_offset 6, -8
 798              		.cfi_offset 14, -4
 799 0002 041C     		mov	r4, r0
 800 0004 0E1E     		sub	r6, r1, #0
2339:.\Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 801              		.loc 1 2339 0
 802 0006 032E     		cmp	r6, #3
 803 0008 02D9     		bls	.L70
2339:.\Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 804              		.loc 1 2339 0 is_stmt 0 discriminator 1
 805 000a 0020     		mov	r0, #0
 806              	.LVL53:
 807 000c FFF7FEFF 		bl	CyHalt
 808              	.LVL54:
 809              	.L70:
2340:.\Generated_Source\PSoC4/CyLib.c **** 
 810              		.loc 1 2340 0 is_stmt 1
 811 0010 1F2C     		cmp	r4, #31
 812 0012 02D9     		bls	.L71
2340:.\Generated_Source\PSoC4/CyLib.c **** 
 813              		.loc 1 2340 0 is_stmt 0 discriminator 1
 814 0014 0020     		mov	r0, #0
 815 0016 FFF7FEFF 		bl	CyHalt
 816              	.LVL55:
 817              	.L71:
2342:.\Generated_Source\PSoC4/CyLib.c **** 
 818              		.loc 1 2342 0 is_stmt 1
 819 001a 0325     		mov	r5, #3
 820 001c 2540     		and	r5, r4
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccBBFZQS.s 			page 60


 821 001e ED00     		lsl	r5, r5, #3
 822 0020 0635     		add	r5, r5, #6
 823              	.LVL56:
2344:.\Generated_Source\PSoC4/CyLib.c **** 
 824              		.loc 1 2344 0
 825 0022 FFF7FEFF 		bl	CyEnterCriticalSection
 826              	.LVL57:
2346:.\Generated_Source\PSoC4/CyLib.c ****     value &= (uint32)(~((uint32)(CY_INT_PRIORITY_MASK << shift)));
 827              		.loc 1 2346 0
 828 0026 A408     		lsr	r4, r4, #2
 829 0028 A400     		lsl	r4, r4, #2
 830 002a 074B     		ldr	r3, .L72
 831 002c 9C46     		mov	ip, r3
 832 002e 6444     		add	r4, r4, ip
 833 0030 2368     		ldr	r3, [r4]
 834              	.LVL58:
2347:.\Generated_Source\PSoC4/CyLib.c ****     value |= ((uint32)priority << shift);
 835              		.loc 1 2347 0
 836 0032 0322     		mov	r2, #3
 837 0034 AA40     		lsl	r2, r2, r5
 838 0036 9343     		bic	r3, r2
 839              	.LVL59:
2348:.\Generated_Source\PSoC4/CyLib.c ****     CY_INT_PRIORITY_REG(number) = value;
 840              		.loc 1 2348 0
 841 0038 AE40     		lsl	r6, r6, r5
 842 003a 351C     		mov	r5, r6
 843              	.LVL60:
 844 003c 1D43     		orr	r5, r3
 845              	.LVL61:
2349:.\Generated_Source\PSoC4/CyLib.c **** 
 846              		.loc 1 2349 0
 847 003e 2560     		str	r5, [r4]
2351:.\Generated_Source\PSoC4/CyLib.c **** }
 848              		.loc 1 2351 0
 849 0040 FFF7FEFF 		bl	CyExitCriticalSection
 850              	.LVL62:
2352:.\Generated_Source\PSoC4/CyLib.c **** 
 851              		.loc 1 2352 0
 852              		@ sp needed
 853              	.LVL63:
 854 0044 70BD     		pop	{r4, r5, r6, pc}
 855              	.L73:
 856 0046 C046     		.align	2
 857              	.L72:
 858 0048 00E400E0 		.word	-536812544
 859              		.cfi_endproc
 860              	.LFE21:
 861              		.size	CyIntSetPriority, .-CyIntSetPriority
 862              		.section	.text.CyIntGetPriority,"ax",%progbits
 863              		.align	2
 864              		.global	CyIntGetPriority
 865              		.code	16
 866              		.thumb_func
 867              		.type	CyIntGetPriority, %function
 868              	CyIntGetPriority:
 869              	.LFB22:
2370:.\Generated_Source\PSoC4/CyLib.c ****     uint8 priority;
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccBBFZQS.s 			page 61


 870              		.loc 1 2370 0
 871              		.cfi_startproc
 872              	.LVL64:
 873 0000 10B5     		push	{r4, lr}
 874              		.cfi_def_cfa_offset 8
 875              		.cfi_offset 4, -8
 876              		.cfi_offset 14, -4
 877 0002 041E     		sub	r4, r0, #0
2373:.\Generated_Source\PSoC4/CyLib.c **** 
 878              		.loc 1 2373 0
 879 0004 1F2C     		cmp	r4, #31
 880 0006 02D9     		bls	.L75
2373:.\Generated_Source\PSoC4/CyLib.c **** 
 881              		.loc 1 2373 0 is_stmt 0 discriminator 1
 882 0008 0020     		mov	r0, #0
 883              	.LVL65:
 884 000a FFF7FEFF 		bl	CyHalt
 885              	.LVL66:
 886              	.L75:
2375:.\Generated_Source\PSoC4/CyLib.c **** 
 887              		.loc 1 2375 0 is_stmt 1
 888 000e A308     		lsr	r3, r4, #2
 889 0010 9B00     		lsl	r3, r3, #2
 890 0012 054A     		ldr	r2, .L76
 891 0014 9446     		mov	ip, r2
 892 0016 6344     		add	r3, r3, ip
 893 0018 1868     		ldr	r0, [r3]
 894 001a 0323     		mov	r3, #3
 895 001c 1C40     		and	r4, r3
 896 001e E400     		lsl	r4, r4, #3
 897 0020 0634     		add	r4, r4, #6
 898 0022 E040     		lsr	r0, r0, r4
 899              	.LVL67:
2377:.\Generated_Source\PSoC4/CyLib.c **** }
 900              		.loc 1 2377 0
 901 0024 1840     		and	r0, r3
 902              	.LVL68:
2378:.\Generated_Source\PSoC4/CyLib.c **** 
 903              		.loc 1 2378 0
 904              		@ sp needed
 905 0026 10BD     		pop	{r4, pc}
 906              	.L77:
 907              		.align	2
 908              	.L76:
 909 0028 00E400E0 		.word	-536812544
 910              		.cfi_endproc
 911              	.LFE22:
 912              		.size	CyIntGetPriority, .-CyIntGetPriority
 913              		.section	.text.CySoftwareReset,"ax",%progbits
 914              		.align	2
 915              		.global	CySoftwareReset
 916              		.code	16
 917              		.thumb_func
 918              		.type	CySoftwareReset, %function
 919              	CySoftwareReset:
 920              	.LFB29:
2510:.\Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccBBFZQS.s 			page 62


2511:.\Generated_Source\PSoC4/CyLib.c **** 
2512:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2513:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySoftwareReset
2514:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2515:.\Generated_Source\PSoC4/CyLib.c **** *
2516:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
2517:.\Generated_Source\PSoC4/CyLib.c **** *  Forces a software reset of the device.
2518:.\Generated_Source\PSoC4/CyLib.c **** *
2519:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
2520:.\Generated_Source\PSoC4/CyLib.c **** *  None
2521:.\Generated_Source\PSoC4/CyLib.c **** *
2522:.\Generated_Source\PSoC4/CyLib.c **** * Return:
2523:.\Generated_Source\PSoC4/CyLib.c **** *  None
2524:.\Generated_Source\PSoC4/CyLib.c **** *
2525:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2526:.\Generated_Source\PSoC4/CyLib.c **** void CySoftwareReset(void)
2527:.\Generated_Source\PSoC4/CyLib.c **** {
 921              		.loc 1 2527 0
 922              		.cfi_startproc
2528:.\Generated_Source\PSoC4/CyLib.c ****     /***************************************************************************
2529:.\Generated_Source\PSoC4/CyLib.c ****     * Setting the system reset request bit. The vector key value must be written
2530:.\Generated_Source\PSoC4/CyLib.c ****     * to the register, otherwise the register write is unpredictable.
2531:.\Generated_Source\PSoC4/CyLib.c ****     ***************************************************************************/
2532:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CM0_AIRCR_REG = (CY_SYS_CM0_AIRCR_REG & (uint32)(~CY_SYS_CM0_AIRCR_VECTKEY_MASK)) |
 923              		.loc 1 2532 0
 924 0000 034A     		ldr	r2, .L79
 925 0002 1368     		ldr	r3, [r2]
 926 0004 1B04     		lsl	r3, r3, #16
 927 0006 1B0C     		lsr	r3, r3, #16
2533:.\Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_CM0_AIRCR_VECTKEY | CY_SYS_CM0_AIRCR_SYSRESETREQ;
 928              		.loc 1 2533 0
 929 0008 0249     		ldr	r1, .L79+4
 930 000a 0B43     		orr	r3, r1
2532:.\Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_CM0_AIRCR_VECTKEY | CY_SYS_CM0_AIRCR_SYSRESETREQ;
 931              		.loc 1 2532 0
 932 000c 1360     		str	r3, [r2]
2534:.\Generated_Source\PSoC4/CyLib.c **** }
 933              		.loc 1 2534 0
 934              		@ sp needed
 935 000e 7047     		bx	lr
 936              	.L80:
 937              		.align	2
 938              	.L79:
 939 0010 0CED00E0 		.word	-536810228
 940 0014 0400FA05 		.word	100270084
 941              		.cfi_endproc
 942              	.LFE29:
 943              		.size	CySoftwareReset, .-CySoftwareReset
 944              		.section	.text.CyDelay,"ax",%progbits
 945              		.align	2
 946              		.global	CyDelay
 947              		.code	16
 948              		.thumb_func
 949              		.type	CyDelay, %function
 950              	CyDelay:
 951              	.LFB30:
2535:.\Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccBBFZQS.s 			page 63


2536:.\Generated_Source\PSoC4/CyLib.c **** 
2537:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2538:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelay
2539:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2540:.\Generated_Source\PSoC4/CyLib.c **** *
2541:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
2542:.\Generated_Source\PSoC4/CyLib.c **** *  Blocks for milliseconds.
2543:.\Generated_Source\PSoC4/CyLib.c **** *
2544:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
2545:.\Generated_Source\PSoC4/CyLib.c **** *  milliseconds: number of milliseconds to delay.
2546:.\Generated_Source\PSoC4/CyLib.c **** *
2547:.\Generated_Source\PSoC4/CyLib.c **** * Return:
2548:.\Generated_Source\PSoC4/CyLib.c **** *  None
2549:.\Generated_Source\PSoC4/CyLib.c **** *
2550:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2551:.\Generated_Source\PSoC4/CyLib.c **** void CyDelay(uint32 milliseconds)
2552:.\Generated_Source\PSoC4/CyLib.c **** {
 952              		.loc 1 2552 0
 953              		.cfi_startproc
 954              	.LVL69:
 955 0000 10B5     		push	{r4, lr}
 956              		.cfi_def_cfa_offset 8
 957              		.cfi_offset 4, -8
 958              		.cfi_offset 14, -4
 959 0002 041C     		mov	r4, r0
2553:.\Generated_Source\PSoC4/CyLib.c ****     while (milliseconds > CY_DELAY_MS_OVERFLOW)
 960              		.loc 1 2553 0
 961 0004 06E0     		b	.L82
 962              	.LVL70:
 963              	.L83:
2554:.\Generated_Source\PSoC4/CyLib.c ****     {
2555:.\Generated_Source\PSoC4/CyLib.c ****         /* This loop prevents overflow.
2556:.\Generated_Source\PSoC4/CyLib.c ****          * At 100MHz, milliseconds * cydelayFreqKhz overflows at about 42 seconds
2557:.\Generated_Source\PSoC4/CyLib.c ****          */
2558:.\Generated_Source\PSoC4/CyLib.c ****         CyDelayCycles(cydelay32kMs);
 964              		.loc 1 2558 0
 965 0006 084B     		ldr	r3, .L84
 966 0008 1868     		ldr	r0, [r3]
 967 000a FFF7FEFF 		bl	CyDelayCycles
 968              	.LVL71:
2559:.\Generated_Source\PSoC4/CyLib.c ****         milliseconds -= CY_DELAY_MS_OVERFLOW;
 969              		.loc 1 2559 0
 970 000e 074B     		ldr	r3, .L84+4
 971 0010 9C46     		mov	ip, r3
 972 0012 6444     		add	r4, r4, ip
 973              	.LVL72:
 974              	.L82:
2553:.\Generated_Source\PSoC4/CyLib.c ****     while (milliseconds > CY_DELAY_MS_OVERFLOW)
 975              		.loc 1 2553 0
 976 0014 8023     		mov	r3, #128
 977 0016 1B02     		lsl	r3, r3, #8
 978 0018 9C42     		cmp	r4, r3
 979 001a F4D8     		bhi	.L83
2560:.\Generated_Source\PSoC4/CyLib.c ****     }
2561:.\Generated_Source\PSoC4/CyLib.c **** 
2562:.\Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles(milliseconds * cydelayFreqKhz);
 980              		.loc 1 2562 0
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccBBFZQS.s 			page 64


 981 001c 024B     		ldr	r3, .L84
 982 001e 5868     		ldr	r0, [r3, #4]
 983 0020 6043     		mul	r0, r4
 984 0022 FFF7FEFF 		bl	CyDelayCycles
 985              	.LVL73:
2563:.\Generated_Source\PSoC4/CyLib.c **** }
 986              		.loc 1 2563 0
 987              		@ sp needed
 988              	.LVL74:
 989 0026 10BD     		pop	{r4, pc}
 990              	.L85:
 991              		.align	2
 992              	.L84:
 993 0028 00000000 		.word	.LANCHOR0
 994 002c 0080FFFF 		.word	-32768
 995              		.cfi_endproc
 996              	.LFE30:
 997              		.size	CyDelay, .-CyDelay
 998              		.section	.text.CySysClkImoEnableWcoLock,"ax",%progbits
 999              		.align	2
 1000              		.global	CySysClkImoEnableWcoLock
 1001              		.code	16
 1002              		.thumb_func
 1003              		.type	CySysClkImoEnableWcoLock, %function
 1004              	CySysClkImoEnableWcoLock:
 1005              	.LFB3:
 192:.\Generated_Source\PSoC4/CyLib.c ****         uint32 i;
 1006              		.loc 1 192 0
 1007              		.cfi_startproc
 1008 0000 30B5     		push	{r4, r5, lr}
 1009              		.cfi_def_cfa_offset 12
 1010              		.cfi_offset 4, -12
 1011              		.cfi_offset 5, -8
 1012              		.cfi_offset 14, -4
 1013 0002 83B0     		sub	sp, sp, #12
 1014              		.cfi_def_cfa_offset 24
 1015              	.LVL75:
 200:.\Generated_Source\PSoC4/CyLib.c ****         {
 1016              		.loc 1 200 0
 1017 0004 FFF7FEFF 		bl	CySysClkWcoEnabled
 1018              	.LVL76:
 1019 0008 0028     		cmp	r0, #0
 1020 000a 56D0     		beq	.L86
 202:.\Generated_Source\PSoC4/CyLib.c **** 
 1021              		.loc 1 202 0
 1022 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1023              	.LVL77:
 1024 0010 041C     		mov	r4, r0
 1025              	.LVL78:
 212:.\Generated_Source\PSoC4/CyLib.c ****             {
 1026              		.loc 1 212 0
 1027 0012 0023     		mov	r3, #0
 1028 0014 0AE0     		b	.L88
 1029              	.LVL79:
 1030              	.L91:
 214:.\Generated_Source\PSoC4/CyLib.c ****                 {
 1031              		.loc 1 214 0
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccBBFZQS.s 			page 65


 1032 0016 2A4A     		ldr	r2, .L96
 1033 0018 1168     		ldr	r1, [r2]
 1034 001a 3F22     		mov	r2, #63
 1035 001c 0A40     		and	r2, r1
 1036 001e 2949     		ldr	r1, .L96+4
 1037 0020 C95C     		ldrb	r1, [r1, r3]
 1038 0022 8A42     		cmp	r2, r1
 1039 0024 01D1     		bne	.L89
 216:.\Generated_Source\PSoC4/CyLib.c ****                     break;
 1040              		.loc 1 216 0
 1041 0026 0333     		add	r3, r3, #3
 1042              	.LVL80:
 217:.\Generated_Source\PSoC4/CyLib.c ****                 }
 1043              		.loc 1 217 0
 1044 0028 03E0     		b	.L90
 1045              	.LVL81:
 1046              	.L89:
 212:.\Generated_Source\PSoC4/CyLib.c ****             {
 1047              		.loc 1 212 0 discriminator 2
 1048 002a 0133     		add	r3, r3, #1
 1049              	.LVL82:
 1050              	.L88:
 212:.\Generated_Source\PSoC4/CyLib.c ****             {
 1051              		.loc 1 212 0 is_stmt 0 discriminator 1
 1052 002c 2D2B     		cmp	r3, #45
 1053 002e F2D9     		bls	.L91
 194:.\Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 1054              		.loc 1 194 0 is_stmt 1
 1055 0030 0323     		mov	r3, #3
 1056              	.LVL83:
 1057              	.L90:
 222:.\Generated_Source\PSoC4/CyLib.c ****             {
 1058              		.loc 1 222 0
 1059 0032 254A     		ldr	r2, .L96+8
 1060 0034 1268     		ldr	r2, [r2]
 1061 0036 D206     		lsl	r2, r2, #27
 1062 0038 06D1     		bne	.L92
 224:.\Generated_Source\PSoC4/CyLib.c **** 			             				    CY_SYS_CLK_IMO_TRIM4_WCO_GAIN;
 1063              		.loc 1 224 0
 1064 003a 2348     		ldr	r0, .L96+8
 1065 003c 0268     		ldr	r2, [r0]
 1066 003e 1F21     		mov	r1, #31
 1067 0040 8A43     		bic	r2, r1
 1068 0042 1339     		sub	r1, r1, #19
 1069 0044 0A43     		orr	r2, r1
 1070 0046 0260     		str	r2, [r0]
 1071              	.L92:
 228:.\Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN_MASK |
 1072              		.loc 1 228 0
 1073 0048 204A     		ldr	r2, .L96+12
 1074 004a 1168     		ldr	r1, [r2]
 1075 004c 204A     		ldr	r2, .L96+16
 1076 004e 1140     		and	r1, r2
 1077              	.LVL84:
 234:.\Generated_Source\PSoC4/CyLib.c **** 
 1078              		.loc 1 234 0
 1079 0050 204A     		ldr	r2, .L96+20
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccBBFZQS.s 			page 66


 1080 0052 5A43     		mul	r2, r3
 1081 0054 8020     		mov	r0, #128
 1082 0056 C001     		lsl	r0, r0, #7
 1083 0058 8446     		mov	ip, r0
 1084 005a 6244     		add	r2, r2, ip
 1085 005c D20B     		lsr	r2, r2, #15
 1086 005e 013A     		sub	r2, r2, #1
 1087 0060 5205     		lsl	r2, r2, #21
 1088 0062 520D     		lsr	r2, r2, #21
 1089 0064 0A43     		orr	r2, r1
 1090              	.LVL85:
 237:.\Generated_Source\PSoC4/CyLib.c **** 
 1091              		.loc 1 237 0
 1092 0066 A021     		mov	r1, #160
 1093 0068 4903     		lsl	r1, r1, #13
 1094 006a 1143     		orr	r1, r2
 1095              	.LVL86:
 240:.\Generated_Source\PSoC4/CyLib.c ****             {
 1096              		.loc 1 240 0
 1097 006c 192B     		cmp	r3, #25
 1098 006e 02D8     		bhi	.L93
 242:.\Generated_Source\PSoC4/CyLib.c ****             }
 1099              		.loc 1 242 0
 1100 0070 1949     		ldr	r1, .L96+24
 1101              	.LVL87:
 1102 0072 0A43     		orr	r2, r1
 1103              	.LVL88:
 1104 0074 0BE0     		b	.L94
 1105              	.LVL89:
 1106              	.L93:
 246:.\Generated_Source\PSoC4/CyLib.c ****                     cyImoFreqMhz2DpllOffset[freq - CY_SYS_CLK_IMO_FREQ_WCO_DPLL_TABLE_OFFSET];
 1107              		.loc 1 246 0
 1108 0076 194A     		ldr	r2, .L96+28
 1109 0078 9A18     		add	r2, r3, r2
 1110 007a 1278     		ldrb	r2, [r2]
 247:.\Generated_Source\PSoC4/CyLib.c **** 
 1111              		.loc 1 247 0
 1112 007c 1148     		ldr	r0, .L96+4
 1113 007e C318     		add	r3, r0, r3
 1114              	.LVL90:
 1115 0080 9B7D     		ldrb	r3, [r3, #22]
 1116              	.LVL91:
 249:.\Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX : lfLimit;
 1117              		.loc 1 249 0
 1118 0082 D218     		add	r2, r2, r3
 1119              	.LVL92:
 1120 0084 FF2A     		cmp	r2, #255
 1121 0086 00D9     		bls	.L95
 1122 0088 FF22     		mov	r2, #255
 1123              	.LVL93:
 1124              	.L95:
 252:.\Generated_Source\PSoC4/CyLib.c ****             }
 1125              		.loc 1 252 0
 1126 008a 9205     		lsl	r2, r2, #22
 1127              	.LVL94:
 1128 008c 0A43     		orr	r2, r1
 1129              	.LVL95:
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccBBFZQS.s 			page 67


 1130              	.L94:
 255:.\Generated_Source\PSoC4/CyLib.c **** 
 1131              		.loc 1 255 0
 1132 008e 0F4B     		ldr	r3, .L96+12
 1133 0090 1A60     		str	r2, [r3]
 257:.\Generated_Source\PSoC4/CyLib.c ****             CySysFlashSetWaitCycles(CY_SYS_CLK_IMO_MAX_FREQ_MHZ);
 1134              		.loc 1 257 0
 1135 0092 134D     		ldr	r5, .L96+32
 1136 0094 2B68     		ldr	r3, [r5]
 1137 0096 0193     		str	r3, [sp, #4]
 258:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_CONFIG_REG |= CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 1138              		.loc 1 258 0
 1139 0098 3020     		mov	r0, #48
 1140 009a FFF7FEFF 		bl	CySysFlashSetWaitCycles
 1141              	.LVL96:
 259:.\Generated_Source\PSoC4/CyLib.c ****             CyDelay(CY_SYS_CLK_WCO_IMO_TIMEOUT_MS);
 1142              		.loc 1 259 0
 1143 009e 114A     		ldr	r2, .L96+36
 1144 00a0 1368     		ldr	r3, [r2]
 1145 00a2 8021     		mov	r1, #128
 1146 00a4 C905     		lsl	r1, r1, #23
 1147 00a6 0B43     		orr	r3, r1
 1148 00a8 1360     		str	r3, [r2]
 260:.\Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CTL_REG = flashCtlReg;
 1149              		.loc 1 260 0
 1150 00aa 1420     		mov	r0, #20
 1151 00ac FFF7FEFF 		bl	CyDelay
 1152              	.LVL97:
 261:.\Generated_Source\PSoC4/CyLib.c **** 
 1153              		.loc 1 261 0
 1154 00b0 019B     		ldr	r3, [sp, #4]
 1155 00b2 2B60     		str	r3, [r5]
 263:.\Generated_Source\PSoC4/CyLib.c ****         }
 1156              		.loc 1 263 0
 1157 00b4 201C     		mov	r0, r4
 1158 00b6 FFF7FEFF 		bl	CyExitCriticalSection
 1159              	.LVL98:
 1160              	.L86:
 265:.\Generated_Source\PSoC4/CyLib.c **** 
 1161              		.loc 1 265 0
 1162 00ba 03B0     		add	sp, sp, #12
 1163              		@ sp needed
 1164 00bc 30BD     		pop	{r4, r5, pc}
 1165              	.L97:
 1166 00be C046     		.align	2
 1167              	.L96:
 1168 00c0 2CFF0B40 		.word	1074528044
 1169 00c4 00000000 		.word	.LANCHOR1
 1170 00c8 34FF0B40 		.word	1074528052
 1171 00cc 08002240 		.word	1075970056
 1172 00d0 00F800C0 		.word	-1073678336
 1173 00d4 40420F00 		.word	1000000
 1174 00d8 0000D43F 		.word	1070858240
 1175 00dc CDF1FF0F 		.word	268431821
 1176 00e0 30001040 		.word	1074790448
 1177 00e4 00002240 		.word	1075970048
 1178              		.cfi_endproc
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccBBFZQS.s 			page 68


 1179              	.LFE3:
 1180              		.size	CySysClkImoEnableWcoLock, .-CySysClkImoEnableWcoLock
 1181              		.section	.text.CySysClkWriteImoFreq,"ax",%progbits
 1182              		.align	2
 1183              		.global	CySysClkWriteImoFreq
 1184              		.code	16
 1185              		.thumb_func
 1186              		.type	CySysClkWriteImoFreq, %function
 1187              	CySysClkWriteImoFreq:
 1188              	.LFB9:
 623:.\Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 1189              		.loc 1 623 0
 1190              		.cfi_startproc
 1191              	.LVL99:
 1192 0000 30B5     		push	{r4, r5, lr}
 1193              		.cfi_def_cfa_offset 12
 1194              		.cfi_offset 4, -12
 1195              		.cfi_offset 5, -8
 1196              		.cfi_offset 14, -4
 1197 0002 87B0     		sub	sp, sp, #28
 1198              		.cfi_def_cfa_offset 40
 1199 0004 041C     		mov	r4, r0
 1200              	.LVL100:
 646:.\Generated_Source\PSoC4/CyLib.c **** 
 1201              		.loc 1 646 0
 1202 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 1203              	.LVL101:
 1204 000a 051C     		mov	r5, r0
 1205              	.LVL102:
 649:.\Generated_Source\PSoC4/CyLib.c ****             {
 1206              		.loc 1 649 0
 1207 000c FFF7FEFF 		bl	CySysClkImoGetWcoLock
 1208              	.LVL103:
 1209 0010 0028     		cmp	r0, #0
 1210 0012 03D0     		beq	.L101
 1211              	.LVL104:
 652:.\Generated_Source\PSoC4/CyLib.c ****             }
 1212              		.loc 1 652 0
 1213 0014 FFF7FEFF 		bl	CySysClkImoDisableWcoLock
 1214              	.LVL105:
 651:.\Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoDisableWcoLock();
 1215              		.loc 1 651 0
 1216 0018 0121     		mov	r1, #1
 1217 001a 00E0     		b	.L99
 1218              	.LVL106:
 1219              	.L101:
 636:.\Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 1220              		.loc 1 636 0
 1221 001c 0021     		mov	r1, #0
 1222              	.LVL107:
 1223              	.L99:
 680:.\Generated_Source\PSoC4/CyLib.c ****             regValues[1u] = CY_SYS_CLK_SELECT_REG;
 1224              		.loc 1 680 0
 1225 001e 104B     		ldr	r3, .L102
 1226 0020 1B68     		ldr	r3, [r3]
 1227 0022 0093     		str	r3, [sp]
 681:.\Generated_Source\PSoC4/CyLib.c ****             regValues[2u] = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccBBFZQS.s 			page 69


 1228              		.loc 1 681 0
 1229 0024 0F4B     		ldr	r3, .L102+4
 1230 0026 1B68     		ldr	r3, [r3]
 1231 0028 0193     		str	r3, [sp, #4]
 682:.\Generated_Source\PSoC4/CyLib.c ****             regValues[3u] = CY_FLASH_CTL_REG;
 1232              		.loc 1 682 0
 1233 002a 033C     		sub	r4, r4, #3
 1234              	.LVL108:
 1235 002c 0E4B     		ldr	r3, .L102+8
 1236 002e 1B5D     		ldrb	r3, [r3, r4]
 1237 0030 0293     		str	r3, [sp, #8]
 683:.\Generated_Source\PSoC4/CyLib.c **** 
 1238              		.loc 1 683 0
 1239 0032 0E4B     		ldr	r3, .L102+12
 1240 0034 1B68     		ldr	r3, [r3]
 1241 0036 0393     		str	r3, [sp, #12]
 685:.\Generated_Source\PSoC4/CyLib.c ****                 (uint32) ((CY_FLASH_KEY_TWO(CY_FLASH_API_OPCODE_CLK_RESTORE) <<  CY_FLASH_PARAM_KEY
 1242              		.loc 1 685 0
 1243 0038 04AA     		add	r2, sp, #16
 1244 003a 0D4B     		ldr	r3, .L102+16
 1245 003c 0493     		str	r3, [sp, #16]
 688:.\Generated_Source\PSoC4/CyLib.c **** 
 1246              		.loc 1 688 0
 1247 003e 6B46     		mov	r3, sp
 1248 0040 0593     		str	r3, [sp, #20]
 690:.\Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_CLK_RESTORE;
 1249              		.loc 1 690 0
 1250 0042 0C4B     		ldr	r3, .L102+20
 1251 0044 1A60     		str	r2, [r3]
 691:.\Generated_Source\PSoC4/CyLib.c ****             (void) CY_FLASH_CPUSS_SYSARG_REG;
 1252              		.loc 1 691 0
 1253 0046 0C48     		ldr	r0, .L102+24
 1254 0048 0C4A     		ldr	r2, .L102+28
 1255 004a 1060     		str	r0, [r2]
 692:.\Generated_Source\PSoC4/CyLib.c **** 
 1256              		.loc 1 692 0
 1257 004c 1B68     		ldr	r3, [r3]
 809:.\Generated_Source\PSoC4/CyLib.c ****             {
 1258              		.loc 1 809 0
 1259 004e 0129     		cmp	r1, #1
 1260 0050 01D1     		bne	.L100
 811:.\Generated_Source\PSoC4/CyLib.c ****             }
 1261              		.loc 1 811 0
 1262 0052 FFF7FEFF 		bl	CySysClkImoEnableWcoLock
 1263              	.LVL109:
 1264              	.L100:
 822:.\Generated_Source\PSoC4/CyLib.c ****     }
 1265              		.loc 1 822 0
 1266 0056 281C     		mov	r0, r5
 1267 0058 FFF7FEFF 		bl	CyExitCriticalSection
 1268              	.LVL110:
 823:.\Generated_Source\PSoC4/CyLib.c **** 
 1269              		.loc 1 823 0
 1270 005c 07B0     		add	sp, sp, #28
 1271              		@ sp needed
 1272              	.LVL111:
 1273              	.LVL112:
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccBBFZQS.s 			page 70


 1274 005e 30BD     		pop	{r4, r5, pc}
 1275              	.L103:
 1276              		.align	2
 1277              	.L102:
 1278 0060 08010B40 		.word	1074462984
 1279 0064 00010B40 		.word	1074462976
 1280 0068 00000000 		.word	.LANCHOR1
 1281 006c 30001040 		.word	1074790448
 1282 0070 B6EA0000 		.word	60086
 1283 0074 08001040 		.word	1074790408
 1284 0078 17000080 		.word	-2147483625
 1285 007c 04001040 		.word	1074790404
 1286              		.cfi_endproc
 1287              	.LFE9:
 1288              		.size	CySysClkWriteImoFreq, .-CySysClkWriteImoFreq
 1289              		.section	.text.CyDelayUs,"ax",%progbits
 1290              		.align	2
 1291              		.global	CyDelayUs
 1292              		.code	16
 1293              		.thumb_func
 1294              		.type	CyDelayUs, %function
 1295              	CyDelayUs:
 1296              	.LFB31:
2564:.\Generated_Source\PSoC4/CyLib.c **** 
2565:.\Generated_Source\PSoC4/CyLib.c **** 
2566:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2567:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelayUs
2568:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2569:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
2570:.\Generated_Source\PSoC4/CyLib.c **** *  Blocks for microseconds.
2571:.\Generated_Source\PSoC4/CyLib.c **** *
2572:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
2573:.\Generated_Source\PSoC4/CyLib.c **** *  microseconds: number of microseconds to delay.
2574:.\Generated_Source\PSoC4/CyLib.c **** *
2575:.\Generated_Source\PSoC4/CyLib.c **** * Return:
2576:.\Generated_Source\PSoC4/CyLib.c **** *  None
2577:.\Generated_Source\PSoC4/CyLib.c **** *
2578:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2579:.\Generated_Source\PSoC4/CyLib.c **** void CyDelayUs(uint16 microseconds)
2580:.\Generated_Source\PSoC4/CyLib.c **** {
 1297              		.loc 1 2580 0
 1298              		.cfi_startproc
 1299              	.LVL113:
 1300 0000 08B5     		push	{r3, lr}
 1301              		.cfi_def_cfa_offset 8
 1302              		.cfi_offset 3, -8
 1303              		.cfi_offset 14, -4
2581:.\Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles((uint32)microseconds * cydelayFreqMhz);
 1304              		.loc 1 2581 0
 1305 0002 034B     		ldr	r3, .L105
 1306 0004 1B7A     		ldrb	r3, [r3, #8]
 1307 0006 5843     		mul	r0, r3
 1308              	.LVL114:
 1309 0008 FFF7FEFF 		bl	CyDelayCycles
 1310              	.LVL115:
2582:.\Generated_Source\PSoC4/CyLib.c **** }
 1311              		.loc 1 2582 0
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccBBFZQS.s 			page 71


 1312              		@ sp needed
 1313 000c 08BD     		pop	{r3, pc}
 1314              	.L106:
 1315 000e C046     		.align	2
 1316              	.L105:
 1317 0010 00000000 		.word	.LANCHOR0
 1318              		.cfi_endproc
 1319              	.LFE31:
 1320              		.size	CyDelayUs, .-CyDelayUs
 1321              		.section	.text.CySysLvdEnable,"ax",%progbits
 1322              		.align	2
 1323              		.global	CySysLvdEnable
 1324              		.code	16
 1325              		.thumb_func
 1326              		.type	CySysLvdEnable, %function
 1327              	CySysLvdEnable:
 1328              	.LFB10:
2027:.\Generated_Source\PSoC4/CyLib.c ****         /* Prevent propagating a false interrupt */
 1329              		.loc 1 2027 0
 1330              		.cfi_startproc
 1331              	.LVL116:
 1332 0000 38B5     		push	{r3, r4, r5, lr}
 1333              		.cfi_def_cfa_offset 16
 1334              		.cfi_offset 3, -16
 1335              		.cfi_offset 4, -12
 1336              		.cfi_offset 5, -8
 1337              		.cfi_offset 14, -4
 1338 0002 031C     		mov	r3, r0
2029:.\Generated_Source\PSoC4/CyLib.c **** 
 1339              		.loc 1 2029 0
 1340 0004 0D4C     		ldr	r4, .L108
 1341 0006 2268     		ldr	r2, [r4]
 1342 0008 0225     		mov	r5, #2
 1343 000a AA43     		bic	r2, r5
 1344 000c 2260     		str	r2, [r4]
2032:.\Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
 1345              		.loc 1 2032 0
 1346 000e 0C4A     		ldr	r2, .L108+4
 1347 0010 1168     		ldr	r1, [r2]
 1348 0012 1E20     		mov	r0, #30
 1349              	.LVL117:
 1350 0014 8143     		bic	r1, r0
2033:.\Generated_Source\PSoC4/CyLib.c **** 
 1351              		.loc 1 2033 0
 1352 0016 5B00     		lsl	r3, r3, #1
 1353              	.LVL118:
 1354 0018 1840     		and	r0, r3
2032:.\Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
 1355              		.loc 1 2032 0
 1356 001a 0843     		orr	r0, r1
 1357 001c 1060     		str	r0, [r2]
2036:.\Generated_Source\PSoC4/CyLib.c **** 
 1358              		.loc 1 2036 0
 1359 001e 1168     		ldr	r1, [r2]
 1360 0020 0123     		mov	r3, #1
 1361 0022 0B43     		orr	r3, r1
 1362 0024 1360     		str	r3, [r2]
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccBBFZQS.s 			page 72


2039:.\Generated_Source\PSoC4/CyLib.c **** 
 1363              		.loc 1 2039 0
 1364 0026 FA20     		mov	r0, #250
 1365 0028 8000     		lsl	r0, r0, #2
 1366 002a FFF7FEFF 		bl	CyDelayUs
 1367              	.LVL119:
2042:.\Generated_Source\PSoC4/CyLib.c **** 
 1368              		.loc 1 2042 0
 1369 002e FFF7FEFF 		bl	CySysLvdClearInterrupt
 1370              	.LVL120:
2045:.\Generated_Source\PSoC4/CyLib.c ****     }
 1371              		.loc 1 2045 0
 1372 0032 2368     		ldr	r3, [r4]
 1373 0034 1D43     		orr	r5, r3
 1374 0036 2560     		str	r5, [r4]
2046:.\Generated_Source\PSoC4/CyLib.c **** 
 1375              		.loc 1 2046 0
 1376              		@ sp needed
 1377 0038 38BD     		pop	{r3, r4, r5, pc}
 1378              	.L109:
 1379 003a C046     		.align	2
 1380              	.L108:
 1381 003c 08000B40 		.word	1074462728
 1382 0040 18000B40 		.word	1074462744
 1383              		.cfi_endproc
 1384              	.LFE10:
 1385              		.size	CySysLvdEnable, .-CySysLvdEnable
 1386              		.global	__aeabi_uidiv
 1387              		.section	.text.CyDelayFreq,"ax",%progbits
 1388              		.align	2
 1389              		.global	CyDelayFreq
 1390              		.code	16
 1391              		.thumb_func
 1392              		.type	CyDelayFreq, %function
 1393              	CyDelayFreq:
 1394              	.LFB32:
2583:.\Generated_Source\PSoC4/CyLib.c **** 
2584:.\Generated_Source\PSoC4/CyLib.c **** 
2585:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2586:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelayFreq
2587:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2588:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
2589:.\Generated_Source\PSoC4/CyLib.c **** *  Sets clock frequency for CyDelay.
2590:.\Generated_Source\PSoC4/CyLib.c **** *
2591:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
2592:.\Generated_Source\PSoC4/CyLib.c **** *  freq: Frequency of bus clock in Hertz.
2593:.\Generated_Source\PSoC4/CyLib.c **** *
2594:.\Generated_Source\PSoC4/CyLib.c **** * Return:
2595:.\Generated_Source\PSoC4/CyLib.c **** *  None
2596:.\Generated_Source\PSoC4/CyLib.c **** *
2597:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2598:.\Generated_Source\PSoC4/CyLib.c **** void CyDelayFreq(uint32 freq)
2599:.\Generated_Source\PSoC4/CyLib.c **** {
 1395              		.loc 1 2599 0
 1396              		.cfi_startproc
 1397              	.LVL121:
 1398 0000 38B5     		push	{r3, r4, r5, lr}
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccBBFZQS.s 			page 73


 1399              		.cfi_def_cfa_offset 16
 1400              		.cfi_offset 3, -16
 1401              		.cfi_offset 4, -12
 1402              		.cfi_offset 5, -8
 1403              		.cfi_offset 14, -4
2600:.\Generated_Source\PSoC4/CyLib.c ****     if (freq != 0u)
 1404              		.loc 1 2600 0
 1405 0002 0028     		cmp	r0, #0
 1406 0004 02D0     		beq	.L111
2601:.\Generated_Source\PSoC4/CyLib.c ****     {
2602:.\Generated_Source\PSoC4/CyLib.c ****         cydelayFreqHz = freq;
 1407              		.loc 1 2602 0
 1408 0006 0C4B     		ldr	r3, .L113
 1409 0008 D860     		str	r0, [r3, #12]
 1410 000a 02E0     		b	.L112
 1411              	.L111:
2603:.\Generated_Source\PSoC4/CyLib.c ****     }
2604:.\Generated_Source\PSoC4/CyLib.c ****     else
2605:.\Generated_Source\PSoC4/CyLib.c ****     {
2606:.\Generated_Source\PSoC4/CyLib.c ****         cydelayFreqHz = CYDEV_BCLK__SYSCLK__HZ;
 1412              		.loc 1 2606 0
 1413 000c 0B4A     		ldr	r2, .L113+4
 1414 000e 0A4B     		ldr	r3, .L113
 1415 0010 DA60     		str	r2, [r3, #12]
 1416              	.L112:
2607:.\Generated_Source\PSoC4/CyLib.c ****     }
2608:.\Generated_Source\PSoC4/CyLib.c **** 
2609:.\Generated_Source\PSoC4/CyLib.c ****     cydelayFreqMhz = (uint8)((cydelayFreqHz + CY_DELAY_1M_MINUS_1_THRESHOLD) / CY_DELAY_1M_THRESHOL
 1417              		.loc 1 2609 0
 1418 0012 094C     		ldr	r4, .L113
 1419 0014 E568     		ldr	r5, [r4, #12]
 1420 0016 0A4B     		ldr	r3, .L113+8
 1421 0018 E818     		add	r0, r5, r3
 1422              	.LVL122:
 1423 001a 0A49     		ldr	r1, .L113+12
 1424 001c FFF7FEFF 		bl	__aeabi_uidiv
 1425              	.LVL123:
 1426 0020 2072     		strb	r0, [r4, #8]
2610:.\Generated_Source\PSoC4/CyLib.c ****     cydelayFreqKhz = (cydelayFreqHz + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRESHOLD;
 1427              		.loc 1 2610 0
 1428 0022 094B     		ldr	r3, .L113+16
 1429 0024 E818     		add	r0, r5, r3
 1430 0026 FA21     		mov	r1, #250
 1431 0028 8900     		lsl	r1, r1, #2
 1432 002a FFF7FEFF 		bl	__aeabi_uidiv
 1433              	.LVL124:
 1434 002e 6060     		str	r0, [r4, #4]
2611:.\Generated_Source\PSoC4/CyLib.c ****     cydelay32kMs   = CY_DELAY_MS_OVERFLOW * cydelayFreqKhz;
 1435              		.loc 1 2611 0
 1436 0030 C003     		lsl	r0, r0, #15
 1437 0032 2060     		str	r0, [r4]
2612:.\Generated_Source\PSoC4/CyLib.c **** }
 1438              		.loc 1 2612 0
 1439              		@ sp needed
 1440 0034 38BD     		pop	{r3, r4, r5, pc}
 1441              	.L114:
 1442 0036 C046     		.align	2
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccBBFZQS.s 			page 74


 1443              	.L113:
 1444 0038 00000000 		.word	.LANCHOR0
 1445 003c 006CDC02 		.word	48000000
 1446 0040 3F420F00 		.word	999999
 1447 0044 40420F00 		.word	1000000
 1448 0048 E7030000 		.word	999
 1449              		.cfi_endproc
 1450              	.LFE32:
 1451              		.size	CyDelayFreq, .-CyDelayFreq
 1452              		.section	.text.CySysTickStop,"ax",%progbits
 1453              		.align	2
 1454              		.global	CySysTickStop
 1455              		.code	16
 1456              		.thumb_func
 1457              		.type	CySysTickStop, %function
 1458              	CySysTickStop:
 1459              	.LFB36:
2613:.\Generated_Source\PSoC4/CyLib.c **** 
2614:.\Generated_Source\PSoC4/CyLib.c **** 
2615:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2616:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickStart
2617:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2618:.\Generated_Source\PSoC4/CyLib.c **** *
2619:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
2620:.\Generated_Source\PSoC4/CyLib.c **** *  Configures the SysTick timer to generate an interrupt every 1 ms and enables
2621:.\Generated_Source\PSoC4/CyLib.c **** *  the interrupt. Refer to the corresponding function description for details.
2622:.\Generated_Source\PSoC4/CyLib.c **** *
2623:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
2624:.\Generated_Source\PSoC4/CyLib.c **** *  None
2625:.\Generated_Source\PSoC4/CyLib.c **** *
2626:.\Generated_Source\PSoC4/CyLib.c **** * Return:
2627:.\Generated_Source\PSoC4/CyLib.c **** *  None
2628:.\Generated_Source\PSoC4/CyLib.c **** *
2629:.\Generated_Source\PSoC4/CyLib.c **** * Side Effects:
2630:.\Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
2631:.\Generated_Source\PSoC4/CyLib.c **** *
2632:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2633:.\Generated_Source\PSoC4/CyLib.c **** void CySysTickStart(void)
2634:.\Generated_Source\PSoC4/CyLib.c **** {
2635:.\Generated_Source\PSoC4/CyLib.c ****     if (0u == CySysTickInitVar)
2636:.\Generated_Source\PSoC4/CyLib.c ****     {
2637:.\Generated_Source\PSoC4/CyLib.c ****         CySysTickInit();
2638:.\Generated_Source\PSoC4/CyLib.c ****         CySysTickInitVar = 1u;
2639:.\Generated_Source\PSoC4/CyLib.c ****     }
2640:.\Generated_Source\PSoC4/CyLib.c **** 
2641:.\Generated_Source\PSoC4/CyLib.c ****     CySysTickEnable();
2642:.\Generated_Source\PSoC4/CyLib.c **** }
2643:.\Generated_Source\PSoC4/CyLib.c **** 
2644:.\Generated_Source\PSoC4/CyLib.c **** 
2645:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2646:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickInit
2647:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2648:.\Generated_Source\PSoC4/CyLib.c **** *
2649:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
2650:.\Generated_Source\PSoC4/CyLib.c ****     *  Initializes the callback addresses with pointers to NULL, associates the
2651:.\Generated_Source\PSoC4/CyLib.c ****     *  SysTick system vector with the function that is responsible for calling
2652:.\Generated_Source\PSoC4/CyLib.c ****     *  registered callback functions, configures SysTick timer to generate interrupt
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccBBFZQS.s 			page 75


2653:.\Generated_Source\PSoC4/CyLib.c ****     *  every 1 ms.
2654:.\Generated_Source\PSoC4/CyLib.c ****     *
2655:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
2656:.\Generated_Source\PSoC4/CyLib.c ****     *  None
2657:.\Generated_Source\PSoC4/CyLib.c ****     *
2658:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
2659:.\Generated_Source\PSoC4/CyLib.c ****     *  None
2660:.\Generated_Source\PSoC4/CyLib.c ****     *
2661:.\Generated_Source\PSoC4/CyLib.c ****     * Side Effects:
2662:.\Generated_Source\PSoC4/CyLib.c ****     *  Clears SysTick count flag if it was set.
2663:.\Generated_Source\PSoC4/CyLib.c ****     *
2664:.\Generated_Source\PSoC4/CyLib.c ****     *  The 1 ms interrupt interval is configured based on the frequency determined
2665:.\Generated_Source\PSoC4/CyLib.c ****     *  by PSoC Creator at build time. If System clock frequency is changed in
2666:.\Generated_Source\PSoC4/CyLib.c ****     *  runtime, the CyDelayFreq() with the appropriate parameter should be called.
2667:.\Generated_Source\PSoC4/CyLib.c ****     *
2668:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2669:.\Generated_Source\PSoC4/CyLib.c ****     void CySysTickInit(void)
2670:.\Generated_Source\PSoC4/CyLib.c ****     {
2671:.\Generated_Source\PSoC4/CyLib.c ****         uint32 i;
2672:.\Generated_Source\PSoC4/CyLib.c **** 
2673:.\Generated_Source\PSoC4/CyLib.c ****     for (i = 0u; i<CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
2674:.\Generated_Source\PSoC4/CyLib.c ****     {
2675:.\Generated_Source\PSoC4/CyLib.c ****         CySysTickCallbacks[i] = (void *) 0;
2676:.\Generated_Source\PSoC4/CyLib.c ****     }
2677:.\Generated_Source\PSoC4/CyLib.c **** 
2678:.\Generated_Source\PSoC4/CyLib.c ****     (void) CyIntSetSysVector(CY_INT_SYSTICK_IRQN, &CySysTickServiceCallbacks);
2679:.\Generated_Source\PSoC4/CyLib.c **** 
2680:.\Generated_Source\PSoC4/CyLib.c ****     #if(CY_SYSTICK_LFCLK_SOURCE)
2681:.\Generated_Source\PSoC4/CyLib.c ****         CySysTickSetClockSource(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK);
2682:.\Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
2683:.\Generated_Source\PSoC4/CyLib.c **** 
2684:.\Generated_Source\PSoC4/CyLib.c ****     CySysTickSetReload(cydelayFreqHz/1000u);
2685:.\Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
2686:.\Generated_Source\PSoC4/CyLib.c ****     CyIntEnable(CY_INT_SYSTICK_IRQN);
2687:.\Generated_Source\PSoC4/CyLib.c **** }
2688:.\Generated_Source\PSoC4/CyLib.c **** 
2689:.\Generated_Source\PSoC4/CyLib.c **** 
2690:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2691:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickEnable
2692:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2693:.\Generated_Source\PSoC4/CyLib.c **** *
2694:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
2695:.\Generated_Source\PSoC4/CyLib.c **** *  Enables the SysTick timer and its interrupt.
2696:.\Generated_Source\PSoC4/CyLib.c **** *
2697:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
2698:.\Generated_Source\PSoC4/CyLib.c **** *  None
2699:.\Generated_Source\PSoC4/CyLib.c **** *
2700:.\Generated_Source\PSoC4/CyLib.c **** * Return:
2701:.\Generated_Source\PSoC4/CyLib.c **** *  None
2702:.\Generated_Source\PSoC4/CyLib.c **** *
2703:.\Generated_Source\PSoC4/CyLib.c **** * Side Effects:
2704:.\Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2705:.\Generated_Source\PSoC4/CyLib.c **** *
2706:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2707:.\Generated_Source\PSoC4/CyLib.c **** void CySysTickEnable(void)
2708:.\Generated_Source\PSoC4/CyLib.c **** {
2709:.\Generated_Source\PSoC4/CyLib.c ****     CySysTickEnableInterrupt();
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccBBFZQS.s 			page 76


2710:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE;
2711:.\Generated_Source\PSoC4/CyLib.c **** }
2712:.\Generated_Source\PSoC4/CyLib.c **** 
2713:.\Generated_Source\PSoC4/CyLib.c **** 
2714:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2715:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickStop
2716:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2717:.\Generated_Source\PSoC4/CyLib.c **** *
2718:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
2719:.\Generated_Source\PSoC4/CyLib.c **** *  Stops the system timer (SysTick).
2720:.\Generated_Source\PSoC4/CyLib.c **** *
2721:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
2722:.\Generated_Source\PSoC4/CyLib.c **** *  None
2723:.\Generated_Source\PSoC4/CyLib.c **** *
2724:.\Generated_Source\PSoC4/CyLib.c **** * Return:
2725:.\Generated_Source\PSoC4/CyLib.c **** *  None
2726:.\Generated_Source\PSoC4/CyLib.c **** *
2727:.\Generated_Source\PSoC4/CyLib.c **** * Side Effects:
2728:.\Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2729:.\Generated_Source\PSoC4/CyLib.c **** *
2730:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2731:.\Generated_Source\PSoC4/CyLib.c **** void CySysTickStop(void)
2732:.\Generated_Source\PSoC4/CyLib.c **** {
 1460              		.loc 1 2732 0
 1461              		.cfi_startproc
2733:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE));
 1462              		.loc 1 2733 0
 1463 0000 024A     		ldr	r2, .L116
 1464 0002 1368     		ldr	r3, [r2]
 1465 0004 0121     		mov	r1, #1
 1466 0006 8B43     		bic	r3, r1
 1467 0008 1360     		str	r3, [r2]
2734:.\Generated_Source\PSoC4/CyLib.c **** }
 1468              		.loc 1 2734 0
 1469              		@ sp needed
 1470 000a 7047     		bx	lr
 1471              	.L117:
 1472              		.align	2
 1473              	.L116:
 1474 000c 10E000E0 		.word	-536813552
 1475              		.cfi_endproc
 1476              	.LFE36:
 1477              		.size	CySysTickStop, .-CySysTickStop
 1478              		.section	.text.CySysTickEnableInterrupt,"ax",%progbits
 1479              		.align	2
 1480              		.global	CySysTickEnableInterrupt
 1481              		.code	16
 1482              		.thumb_func
 1483              		.type	CySysTickEnableInterrupt, %function
 1484              	CySysTickEnableInterrupt:
 1485              	.LFB37:
2735:.\Generated_Source\PSoC4/CyLib.c **** 
2736:.\Generated_Source\PSoC4/CyLib.c **** 
2737:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2738:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickEnableInterrupt
2739:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2740:.\Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccBBFZQS.s 			page 77


2741:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
2742:.\Generated_Source\PSoC4/CyLib.c **** *  Enables the SysTick interrupt.
2743:.\Generated_Source\PSoC4/CyLib.c **** *
2744:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
2745:.\Generated_Source\PSoC4/CyLib.c **** *  None
2746:.\Generated_Source\PSoC4/CyLib.c **** *
2747:.\Generated_Source\PSoC4/CyLib.c **** * Return:
2748:.\Generated_Source\PSoC4/CyLib.c **** *  None
2749:.\Generated_Source\PSoC4/CyLib.c **** *
2750:.\Generated_Source\PSoC4/CyLib.c **** * Side Effects:
2751:.\Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2752:.\Generated_Source\PSoC4/CyLib.c **** *
2753:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2754:.\Generated_Source\PSoC4/CyLib.c **** void CySysTickEnableInterrupt(void)
2755:.\Generated_Source\PSoC4/CyLib.c **** {
 1486              		.loc 1 2755 0
 1487              		.cfi_startproc
2756:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE_INT;
 1488              		.loc 1 2756 0
 1489 0000 024A     		ldr	r2, .L119
 1490 0002 1168     		ldr	r1, [r2]
 1491 0004 0223     		mov	r3, #2
 1492 0006 0B43     		orr	r3, r1
 1493 0008 1360     		str	r3, [r2]
2757:.\Generated_Source\PSoC4/CyLib.c **** }
 1494              		.loc 1 2757 0
 1495              		@ sp needed
 1496 000a 7047     		bx	lr
 1497              	.L120:
 1498              		.align	2
 1499              	.L119:
 1500 000c 10E000E0 		.word	-536813552
 1501              		.cfi_endproc
 1502              	.LFE37:
 1503              		.size	CySysTickEnableInterrupt, .-CySysTickEnableInterrupt
 1504              		.section	.text.CySysTickEnable,"ax",%progbits
 1505              		.align	2
 1506              		.global	CySysTickEnable
 1507              		.code	16
 1508              		.thumb_func
 1509              		.type	CySysTickEnable, %function
 1510              	CySysTickEnable:
 1511              	.LFB35:
2708:.\Generated_Source\PSoC4/CyLib.c ****     CySysTickEnableInterrupt();
 1512              		.loc 1 2708 0
 1513              		.cfi_startproc
 1514 0000 08B5     		push	{r3, lr}
 1515              		.cfi_def_cfa_offset 8
 1516              		.cfi_offset 3, -8
 1517              		.cfi_offset 14, -4
2709:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE;
 1518              		.loc 1 2709 0
 1519 0002 FFF7FEFF 		bl	CySysTickEnableInterrupt
 1520              	.LVL125:
2710:.\Generated_Source\PSoC4/CyLib.c **** }
 1521              		.loc 1 2710 0
 1522 0006 034A     		ldr	r2, .L122
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccBBFZQS.s 			page 78


 1523 0008 1168     		ldr	r1, [r2]
 1524 000a 0123     		mov	r3, #1
 1525 000c 0B43     		orr	r3, r1
 1526 000e 1360     		str	r3, [r2]
2711:.\Generated_Source\PSoC4/CyLib.c **** 
 1527              		.loc 1 2711 0
 1528              		@ sp needed
 1529 0010 08BD     		pop	{r3, pc}
 1530              	.L123:
 1531 0012 C046     		.align	2
 1532              	.L122:
 1533 0014 10E000E0 		.word	-536813552
 1534              		.cfi_endproc
 1535              	.LFE35:
 1536              		.size	CySysTickEnable, .-CySysTickEnable
 1537              		.section	.text.CySysTickDisableInterrupt,"ax",%progbits
 1538              		.align	2
 1539              		.global	CySysTickDisableInterrupt
 1540              		.code	16
 1541              		.thumb_func
 1542              		.type	CySysTickDisableInterrupt, %function
 1543              	CySysTickDisableInterrupt:
 1544              	.LFB38:
2758:.\Generated_Source\PSoC4/CyLib.c **** 
2759:.\Generated_Source\PSoC4/CyLib.c **** 
2760:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2761:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickDisableInterrupt
2762:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2763:.\Generated_Source\PSoC4/CyLib.c **** *
2764:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
2765:.\Generated_Source\PSoC4/CyLib.c **** *  Disables the SysTick interrupt.
2766:.\Generated_Source\PSoC4/CyLib.c **** *
2767:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
2768:.\Generated_Source\PSoC4/CyLib.c **** *  None
2769:.\Generated_Source\PSoC4/CyLib.c **** *
2770:.\Generated_Source\PSoC4/CyLib.c **** * Return:
2771:.\Generated_Source\PSoC4/CyLib.c **** *  None
2772:.\Generated_Source\PSoC4/CyLib.c **** *
2773:.\Generated_Source\PSoC4/CyLib.c **** * Side Effects:
2774:.\Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2775:.\Generated_Source\PSoC4/CyLib.c **** *
2776:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2777:.\Generated_Source\PSoC4/CyLib.c **** void CySysTickDisableInterrupt(void)
2778:.\Generated_Source\PSoC4/CyLib.c **** {
 1545              		.loc 1 2778 0
 1546              		.cfi_startproc
2779:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE_INT));
 1547              		.loc 1 2779 0
 1548 0000 024A     		ldr	r2, .L125
 1549 0002 1368     		ldr	r3, [r2]
 1550 0004 0221     		mov	r1, #2
 1551 0006 8B43     		bic	r3, r1
 1552 0008 1360     		str	r3, [r2]
2780:.\Generated_Source\PSoC4/CyLib.c **** }
 1553              		.loc 1 2780 0
 1554              		@ sp needed
 1555 000a 7047     		bx	lr
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccBBFZQS.s 			page 79


 1556              	.L126:
 1557              		.align	2
 1558              	.L125:
 1559 000c 10E000E0 		.word	-536813552
 1560              		.cfi_endproc
 1561              	.LFE38:
 1562              		.size	CySysTickDisableInterrupt, .-CySysTickDisableInterrupt
 1563              		.section	.text.CySysTickSetReload,"ax",%progbits
 1564              		.align	2
 1565              		.global	CySysTickSetReload
 1566              		.code	16
 1567              		.thumb_func
 1568              		.type	CySysTickSetReload, %function
 1569              	CySysTickSetReload:
 1570              	.LFB39:
2781:.\Generated_Source\PSoC4/CyLib.c **** 
2782:.\Generated_Source\PSoC4/CyLib.c **** 
2783:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2784:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickSetReload
2785:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2786:.\Generated_Source\PSoC4/CyLib.c **** *
2787:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
2788:.\Generated_Source\PSoC4/CyLib.c **** *  Sets value the counter is set to on startup and after it reaches zero. This
2789:.\Generated_Source\PSoC4/CyLib.c **** *  function do not change or reset current sysTick counter value, so it should
2790:.\Generated_Source\PSoC4/CyLib.c **** *  be cleared using CySysTickClear() API.
2791:.\Generated_Source\PSoC4/CyLib.c **** *
2792:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
2793:.\Generated_Source\PSoC4/CyLib.c **** *  value: Valid range [0x0-0x00FFFFFF]. Counter reset value
2794:.\Generated_Source\PSoC4/CyLib.c **** *
2795:.\Generated_Source\PSoC4/CyLib.c **** * Return:
2796:.\Generated_Source\PSoC4/CyLib.c **** *  None
2797:.\Generated_Source\PSoC4/CyLib.c **** *
2798:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2799:.\Generated_Source\PSoC4/CyLib.c **** void CySysTickSetReload(uint32 value)
2800:.\Generated_Source\PSoC4/CyLib.c **** {
 1571              		.loc 1 2800 0
 1572              		.cfi_startproc
 1573              	.LVL126:
2801:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_RVR_REG = (value & CY_SYS_SYST_RVR_CNT_MASK);
 1574              		.loc 1 2801 0
 1575 0000 0002     		lsl	r0, r0, #8
 1576              	.LVL127:
 1577 0002 000A     		lsr	r0, r0, #8
 1578 0004 014B     		ldr	r3, .L128
 1579 0006 1860     		str	r0, [r3]
2802:.\Generated_Source\PSoC4/CyLib.c **** }
 1580              		.loc 1 2802 0
 1581              		@ sp needed
 1582 0008 7047     		bx	lr
 1583              	.L129:
 1584 000a C046     		.align	2
 1585              	.L128:
 1586 000c 14E000E0 		.word	-536813548
 1587              		.cfi_endproc
 1588              	.LFE39:
 1589              		.size	CySysTickSetReload, .-CySysTickSetReload
 1590              		.section	.text.CySysTickGetReload,"ax",%progbits
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccBBFZQS.s 			page 80


 1591              		.align	2
 1592              		.global	CySysTickGetReload
 1593              		.code	16
 1594              		.thumb_func
 1595              		.type	CySysTickGetReload, %function
 1596              	CySysTickGetReload:
 1597              	.LFB40:
2803:.\Generated_Source\PSoC4/CyLib.c **** 
2804:.\Generated_Source\PSoC4/CyLib.c **** 
2805:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2806:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetReload
2807:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2808:.\Generated_Source\PSoC4/CyLib.c **** *
2809:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
2810:.\Generated_Source\PSoC4/CyLib.c **** *  Sets value the counter is set to on startup and after it reaches zero.
2811:.\Generated_Source\PSoC4/CyLib.c **** *
2812:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
2813:.\Generated_Source\PSoC4/CyLib.c **** *  None
2814:.\Generated_Source\PSoC4/CyLib.c **** *
2815:.\Generated_Source\PSoC4/CyLib.c **** * Return:
2816:.\Generated_Source\PSoC4/CyLib.c **** *  Counter reset value.
2817:.\Generated_Source\PSoC4/CyLib.c **** *
2818:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2819:.\Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetReload(void)
2820:.\Generated_Source\PSoC4/CyLib.c **** {
 1598              		.loc 1 2820 0
 1599              		.cfi_startproc
2821:.\Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_RVR_REG & CY_SYS_SYST_RVR_CNT_MASK);
 1600              		.loc 1 2821 0
 1601 0000 024B     		ldr	r3, .L131
 1602 0002 1868     		ldr	r0, [r3]
 1603 0004 0002     		lsl	r0, r0, #8
 1604 0006 000A     		lsr	r0, r0, #8
2822:.\Generated_Source\PSoC4/CyLib.c **** }
 1605              		.loc 1 2822 0
 1606              		@ sp needed
 1607 0008 7047     		bx	lr
 1608              	.L132:
 1609 000a C046     		.align	2
 1610              	.L131:
 1611 000c 14E000E0 		.word	-536813548
 1612              		.cfi_endproc
 1613              	.LFE40:
 1614              		.size	CySysTickGetReload, .-CySysTickGetReload
 1615              		.section	.text.CySysTickGetValue,"ax",%progbits
 1616              		.align	2
 1617              		.global	CySysTickGetValue
 1618              		.code	16
 1619              		.thumb_func
 1620              		.type	CySysTickGetValue, %function
 1621              	CySysTickGetValue:
 1622              	.LFB41:
2823:.\Generated_Source\PSoC4/CyLib.c **** 
2824:.\Generated_Source\PSoC4/CyLib.c **** 
2825:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2826:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetValue
2827:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccBBFZQS.s 			page 81


2828:.\Generated_Source\PSoC4/CyLib.c **** *
2829:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
2830:.\Generated_Source\PSoC4/CyLib.c **** *  Gets current SysTick counter value.
2831:.\Generated_Source\PSoC4/CyLib.c **** *
2832:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
2833:.\Generated_Source\PSoC4/CyLib.c **** *  None
2834:.\Generated_Source\PSoC4/CyLib.c **** *
2835:.\Generated_Source\PSoC4/CyLib.c **** * Return:
2836:.\Generated_Source\PSoC4/CyLib.c **** *  Current SysTick counter value
2837:.\Generated_Source\PSoC4/CyLib.c **** *
2838:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2839:.\Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetValue(void)
2840:.\Generated_Source\PSoC4/CyLib.c **** {
 1623              		.loc 1 2840 0
 1624              		.cfi_startproc
2841:.\Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_CVR_REG & CY_SYS_SYST_CVR_CNT_MASK);
 1625              		.loc 1 2841 0
 1626 0000 024B     		ldr	r3, .L134
 1627 0002 1868     		ldr	r0, [r3]
 1628 0004 0002     		lsl	r0, r0, #8
 1629 0006 000A     		lsr	r0, r0, #8
2842:.\Generated_Source\PSoC4/CyLib.c **** }
 1630              		.loc 1 2842 0
 1631              		@ sp needed
 1632 0008 7047     		bx	lr
 1633              	.L135:
 1634 000a C046     		.align	2
 1635              	.L134:
 1636 000c 18E000E0 		.word	-536813544
 1637              		.cfi_endproc
 1638              	.LFE41:
 1639              		.size	CySysTickGetValue, .-CySysTickGetValue
 1640              		.section	.text.CySysTickSetClockSource,"ax",%progbits
 1641              		.align	2
 1642              		.global	CySysTickSetClockSource
 1643              		.code	16
 1644              		.thumb_func
 1645              		.type	CySysTickSetClockSource, %function
 1646              	CySysTickSetClockSource:
 1647              	.LFB42:
2843:.\Generated_Source\PSoC4/CyLib.c **** 
2844:.\Generated_Source\PSoC4/CyLib.c **** 
2845:.\Generated_Source\PSoC4/CyLib.c **** #if(CY_SYSTICK_LFCLK_SOURCE)
2846:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2847:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysTickSetClockSource
2848:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
2849:.\Generated_Source\PSoC4/CyLib.c ****     *
2850:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
2851:.\Generated_Source\PSoC4/CyLib.c ****     *  Sets the clock source for the SysTick counter.
2852:.\Generated_Source\PSoC4/CyLib.c ****     *
2853:.\Generated_Source\PSoC4/CyLib.c ****     *  Clears SysTick count flag if it was set. If clock source is not ready this
2854:.\Generated_Source\PSoC4/CyLib.c ****     *  function call will have no effect. After changing clock source to the low
2855:.\Generated_Source\PSoC4/CyLib.c ****     *  frequency clock the counter and reload register values will remain unchanged
2856:.\Generated_Source\PSoC4/CyLib.c ****     *  so time to the interrupt will be significantly longer and vice versa.
2857:.\Generated_Source\PSoC4/CyLib.c ****     *
2858:.\Generated_Source\PSoC4/CyLib.c ****     *  The function is not available on PSoC 4000, PSoC 4100, and PSoC 42000
2859:.\Generated_Source\PSoC4/CyLib.c ****     *  devices. The SysTick timer clocked by the System clock on these devices.
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccBBFZQS.s 			page 82


2860:.\Generated_Source\PSoC4/CyLib.c ****     *
2861:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
2862:.\Generated_Source\PSoC4/CyLib.c ****     *  clockSource: Clock source for SysTick counter
2863:.\Generated_Source\PSoC4/CyLib.c ****     *         Define                     Clock Source
2864:.\Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_SYSCLK     SysTick is clocked by CPU clock.
2865:.\Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_LFCLK      SysTick is clocked by the low frequency
2866:.\Generated_Source\PSoC4/CyLib.c ****     *                                      clock. (ILO 100 KHz for PSoC 5LP, and
2867:.\Generated_Source\PSoC4/CyLib.c ****     *                                      LFCLK for PSoC 4).
2868:.\Generated_Source\PSoC4/CyLib.c ****     *
2869:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
2870:.\Generated_Source\PSoC4/CyLib.c ****     *  None
2871:.\Generated_Source\PSoC4/CyLib.c ****     *
2872:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2873:.\Generated_Source\PSoC4/CyLib.c ****     void CySysTickSetClockSource(uint32 clockSource)
2874:.\Generated_Source\PSoC4/CyLib.c ****     {
 1648              		.loc 1 2874 0
 1649              		.cfi_startproc
 1650              	.LVL128:
2875:.\Generated_Source\PSoC4/CyLib.c ****         if (clockSource == CY_SYS_SYST_CSR_CLK_SRC_SYSCLK)
 1651              		.loc 1 2875 0
 1652 0000 0128     		cmp	r0, #1
 1653 0002 05D1     		bne	.L137
2876:.\Generated_Source\PSoC4/CyLib.c ****         {
2877:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_SYST_CSR_REG |= (uint32)(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK << CY_SYS_SYST_CSR_CLK_S
 1654              		.loc 1 2877 0
 1655 0004 054A     		ldr	r2, .L139
 1656 0006 1168     		ldr	r1, [r2]
 1657 0008 0423     		mov	r3, #4
 1658 000a 0B43     		orr	r3, r1
 1659 000c 1360     		str	r3, [r2]
 1660 000e 04E0     		b	.L136
 1661              	.L137:
2878:.\Generated_Source\PSoC4/CyLib.c ****         }
2879:.\Generated_Source\PSoC4/CyLib.c ****         else
2880:.\Generated_Source\PSoC4/CyLib.c ****         {
2881:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_SYST_CSR_REG &= ((uint32) ~((uint32)(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK << CY_SYS_SY
 1662              		.loc 1 2881 0
 1663 0010 024A     		ldr	r2, .L139
 1664 0012 1368     		ldr	r3, [r2]
 1665 0014 0421     		mov	r1, #4
 1666 0016 8B43     		bic	r3, r1
 1667 0018 1360     		str	r3, [r2]
 1668              	.L136:
2882:.\Generated_Source\PSoC4/CyLib.c ****         }
2883:.\Generated_Source\PSoC4/CyLib.c ****     }
 1669              		.loc 1 2883 0
 1670              		@ sp needed
 1671 001a 7047     		bx	lr
 1672              	.L140:
 1673              		.align	2
 1674              	.L139:
 1675 001c 10E000E0 		.word	-536813552
 1676              		.cfi_endproc
 1677              	.LFE42:
 1678              		.size	CySysTickSetClockSource, .-CySysTickSetClockSource
 1679              		.section	.text.CySysTickGetCountFlag,"ax",%progbits
 1680              		.align	2
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccBBFZQS.s 			page 83


 1681              		.global	CySysTickGetCountFlag
 1682              		.code	16
 1683              		.thumb_func
 1684              		.type	CySysTickGetCountFlag, %function
 1685              	CySysTickGetCountFlag:
 1686              	.LFB43:
2884:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
2885:.\Generated_Source\PSoC4/CyLib.c **** 
2886:.\Generated_Source\PSoC4/CyLib.c **** 
2887:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2888:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetCountFlag
2889:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2890:.\Generated_Source\PSoC4/CyLib.c **** *
2891:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
2892:.\Generated_Source\PSoC4/CyLib.c **** *  The count flag is set once SysTick counter reaches zero.
2893:.\Generated_Source\PSoC4/CyLib.c **** *   The flag cleared on read.
2894:.\Generated_Source\PSoC4/CyLib.c **** *
2895:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
2896:.\Generated_Source\PSoC4/CyLib.c **** *  None
2897:.\Generated_Source\PSoC4/CyLib.c **** *
2898:.\Generated_Source\PSoC4/CyLib.c **** * Return:
2899:.\Generated_Source\PSoC4/CyLib.c ****     *  Returns non-zero value if flag is set, otherwise zero is returned.
2900:.\Generated_Source\PSoC4/CyLib.c **** *
2901:.\Generated_Source\PSoC4/CyLib.c **** *
2902:.\Generated_Source\PSoC4/CyLib.c **** * Side Effects:
2903:.\Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
2904:.\Generated_Source\PSoC4/CyLib.c **** *
2905:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2906:.\Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetCountFlag(void)
2907:.\Generated_Source\PSoC4/CyLib.c **** {
 1687              		.loc 1 2907 0
 1688              		.cfi_startproc
2908:.\Generated_Source\PSoC4/CyLib.c ****     return ((CY_SYS_SYST_CSR_REG>>CY_SYS_SYST_CSR_COUNTFLAG_SHIFT) & 0x01u);
 1689              		.loc 1 2908 0
 1690 0000 024B     		ldr	r3, .L142
 1691 0002 1868     		ldr	r0, [r3]
 1692 0004 C003     		lsl	r0, r0, #15
 1693 0006 C00F     		lsr	r0, r0, #31
2909:.\Generated_Source\PSoC4/CyLib.c **** }
 1694              		.loc 1 2909 0
 1695              		@ sp needed
 1696 0008 7047     		bx	lr
 1697              	.L143:
 1698 000a C046     		.align	2
 1699              	.L142:
 1700 000c 10E000E0 		.word	-536813552
 1701              		.cfi_endproc
 1702              	.LFE43:
 1703              		.size	CySysTickGetCountFlag, .-CySysTickGetCountFlag
 1704              		.section	.text.CySysTickServiceCallbacks,"ax",%progbits
 1705              		.align	2
 1706              		.code	16
 1707              		.thumb_func
 1708              		.type	CySysTickServiceCallbacks, %function
 1709              	CySysTickServiceCallbacks:
 1710              	.LFB47:
2910:.\Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccBBFZQS.s 			page 84


2911:.\Generated_Source\PSoC4/CyLib.c **** 
2912:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2913:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickClear
2914:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2915:.\Generated_Source\PSoC4/CyLib.c **** *
2916:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
2917:.\Generated_Source\PSoC4/CyLib.c **** *  Clears the SysTick counter for well-defined startup.
2918:.\Generated_Source\PSoC4/CyLib.c **** *
2919:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
2920:.\Generated_Source\PSoC4/CyLib.c **** *  None
2921:.\Generated_Source\PSoC4/CyLib.c **** *
2922:.\Generated_Source\PSoC4/CyLib.c **** * Return:
2923:.\Generated_Source\PSoC4/CyLib.c **** *  None
2924:.\Generated_Source\PSoC4/CyLib.c **** *
2925:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2926:.\Generated_Source\PSoC4/CyLib.c **** void CySysTickClear(void)
2927:.\Generated_Source\PSoC4/CyLib.c **** {
2928:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CVR_REG = 0u;
2929:.\Generated_Source\PSoC4/CyLib.c **** }
2930:.\Generated_Source\PSoC4/CyLib.c **** 
2931:.\Generated_Source\PSoC4/CyLib.c **** 
2932:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2933:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickSetCallback
2934:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2935:.\Generated_Source\PSoC4/CyLib.c **** *
2936:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
2937:.\Generated_Source\PSoC4/CyLib.c **** *  This function allows up to five user-defined interrupt service routine
2938:.\Generated_Source\PSoC4/CyLib.c **** *  functions to be associated with the SysTick interrupt. These are specified
2939:.\Generated_Source\PSoC4/CyLib.c **** *  through the use of pointers to the function.
2940:.\Generated_Source\PSoC4/CyLib.c **** *
2941:.\Generated_Source\PSoC4/CyLib.c **** *  To set a custom callback function without the overhead of the system provided
2942:.\Generated_Source\PSoC4/CyLib.c **** *  one, use CyIntSetSysVector(CY_INT_SYSTICK_IRQN, cyisraddress <address>),
2943:.\Generated_Source\PSoC4/CyLib.c **** *  where <address> is address of the custom defined interrupt service routine.
2944:.\Generated_Source\PSoC4/CyLib.c **** *  Note: a custom callback function overrides the system defined callback
2945:.\Generated_Source\PSoC4/CyLib.c **** *  functions.
2946:.\Generated_Source\PSoC4/CyLib.c **** *
2947:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
2948:.\Generated_Source\PSoC4/CyLib.c **** *  number: The number of the callback function addresses to be set. The valid
2949:.\Generated_Source\PSoC4/CyLib.c **** *          range is from 0 to 4.
2950:.\Generated_Source\PSoC4/CyLib.c **** *
2951:.\Generated_Source\PSoC4/CyLib.c **** *  void(*CallbackFunction(void): A pointer to the function that will be
2952:.\Generated_Source\PSoC4/CyLib.c **** *                                associated with the SysTick ISR for the
2953:.\Generated_Source\PSoC4/CyLib.c **** *                                specified number.
2954:.\Generated_Source\PSoC4/CyLib.c **** *
2955:.\Generated_Source\PSoC4/CyLib.c **** * Return:
2956:.\Generated_Source\PSoC4/CyLib.c **** *  Returns the address of the previous callback function.
2957:.\Generated_Source\PSoC4/CyLib.c **** *  The NULL is returned if the specified address in not set.
2958:.\Generated_Source\PSoC4/CyLib.c **** *
2959:.\Generated_Source\PSoC4/CyLib.c **** * Side Effects:
2960:.\Generated_Source\PSoC4/CyLib.c **** *  The registered callback functions will be executed in the interrupt.
2961:.\Generated_Source\PSoC4/CyLib.c **** *
2962:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2963:.\Generated_Source\PSoC4/CyLib.c **** cySysTickCallback CySysTickSetCallback(uint32 number, cySysTickCallback function)
2964:.\Generated_Source\PSoC4/CyLib.c **** {
2965:.\Generated_Source\PSoC4/CyLib.c ****     cySysTickCallback retVal;
2966:.\Generated_Source\PSoC4/CyLib.c **** 
2967:.\Generated_Source\PSoC4/CyLib.c ****     retVal = CySysTickCallbacks[number];
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccBBFZQS.s 			page 85


2968:.\Generated_Source\PSoC4/CyLib.c ****     CySysTickCallbacks[number] = function;
2969:.\Generated_Source\PSoC4/CyLib.c ****     return (retVal);
2970:.\Generated_Source\PSoC4/CyLib.c **** }
2971:.\Generated_Source\PSoC4/CyLib.c **** 
2972:.\Generated_Source\PSoC4/CyLib.c **** 
2973:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2974:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetCallback
2975:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2976:.\Generated_Source\PSoC4/CyLib.c **** *
2977:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
2978:.\Generated_Source\PSoC4/CyLib.c **** *  The function get the specified callback pointer.
2979:.\Generated_Source\PSoC4/CyLib.c **** *
2980:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
2981:.\Generated_Source\PSoC4/CyLib.c **** *  number: The number of callback function address to get. The valid
2982:.\Generated_Source\PSoC4/CyLib.c **** *          range is from 0 to 4.
2983:.\Generated_Source\PSoC4/CyLib.c **** *
2984:.\Generated_Source\PSoC4/CyLib.c **** * Return:
2985:.\Generated_Source\PSoC4/CyLib.c **** *  Returns the address of the specified callback function.
2986:.\Generated_Source\PSoC4/CyLib.c **** *  The NULL is returned if the specified address in not initialized.
2987:.\Generated_Source\PSoC4/CyLib.c **** *
2988:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2989:.\Generated_Source\PSoC4/CyLib.c **** cySysTickCallback CySysTickGetCallback(uint32 number)
2990:.\Generated_Source\PSoC4/CyLib.c **** {
2991:.\Generated_Source\PSoC4/CyLib.c ****     return ((cySysTickCallback) CySysTickCallbacks[number]);
2992:.\Generated_Source\PSoC4/CyLib.c **** }
2993:.\Generated_Source\PSoC4/CyLib.c **** 
2994:.\Generated_Source\PSoC4/CyLib.c **** 
2995:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2996:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickServiceCallbacks
2997:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2998:.\Generated_Source\PSoC4/CyLib.c **** *
2999:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
3000:.\Generated_Source\PSoC4/CyLib.c **** *  System Tick timer interrupt routine
3001:.\Generated_Source\PSoC4/CyLib.c **** *
3002:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
3003:.\Generated_Source\PSoC4/CyLib.c **** *  None
3004:.\Generated_Source\PSoC4/CyLib.c **** *
3005:.\Generated_Source\PSoC4/CyLib.c **** * Return:
3006:.\Generated_Source\PSoC4/CyLib.c **** *  None
3007:.\Generated_Source\PSoC4/CyLib.c **** *
3008:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3009:.\Generated_Source\PSoC4/CyLib.c **** static void CySysTickServiceCallbacks(void)
3010:.\Generated_Source\PSoC4/CyLib.c **** {
 1711              		.loc 1 3010 0
 1712              		.cfi_startproc
 1713 0000 10B5     		push	{r4, lr}
 1714              		.cfi_def_cfa_offset 8
 1715              		.cfi_offset 4, -8
 1716              		.cfi_offset 14, -4
3011:.\Generated_Source\PSoC4/CyLib.c ****     uint32 i;
3012:.\Generated_Source\PSoC4/CyLib.c **** 
3013:.\Generated_Source\PSoC4/CyLib.c ****     /* Verify that tick timer flag was set */
3014:.\Generated_Source\PSoC4/CyLib.c ****     if (1u == CySysTickGetCountFlag())
 1717              		.loc 1 3014 0
 1718 0002 FFF7FEFF 		bl	CySysTickGetCountFlag
 1719              	.LVL129:
 1720 0006 0128     		cmp	r0, #1
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccBBFZQS.s 			page 86


 1721 0008 0BD1     		bne	.L144
 1722 000a 07E0     		b	.L149
 1723              	.LVL130:
 1724              	.L148:
3015:.\Generated_Source\PSoC4/CyLib.c ****     {
3016:.\Generated_Source\PSoC4/CyLib.c ****         for (i=0u; i < CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
3017:.\Generated_Source\PSoC4/CyLib.c ****         {
3018:.\Generated_Source\PSoC4/CyLib.c ****             if (CySysTickCallbacks[i] != (void *) 0)
 1725              		.loc 1 3018 0
 1726 000c A300     		lsl	r3, r4, #2
 1727 000e 054A     		ldr	r2, .L150
 1728 0010 9B58     		ldr	r3, [r3, r2]
 1729 0012 002B     		cmp	r3, #0
 1730 0014 00D0     		beq	.L147
3019:.\Generated_Source\PSoC4/CyLib.c ****             {
3020:.\Generated_Source\PSoC4/CyLib.c ****                 (void)(CySysTickCallbacks[i])();
 1731              		.loc 1 3020 0
 1732 0016 9847     		blx	r3
 1733              	.LVL131:
 1734              	.L147:
3016:.\Generated_Source\PSoC4/CyLib.c ****         {
 1735              		.loc 1 3016 0 discriminator 2
 1736 0018 0134     		add	r4, r4, #1
 1737              	.LVL132:
 1738 001a 00E0     		b	.L145
 1739              	.LVL133:
 1740              	.L149:
 1741 001c 0024     		mov	r4, #0
 1742              	.L145:
 1743              	.LVL134:
3016:.\Generated_Source\PSoC4/CyLib.c ****         {
 1744              		.loc 1 3016 0 is_stmt 0 discriminator 1
 1745 001e 042C     		cmp	r4, #4
 1746 0020 F4D9     		bls	.L148
 1747              	.LVL135:
 1748              	.L144:
3021:.\Generated_Source\PSoC4/CyLib.c ****             }
3022:.\Generated_Source\PSoC4/CyLib.c ****         }
3023:.\Generated_Source\PSoC4/CyLib.c ****     }
3024:.\Generated_Source\PSoC4/CyLib.c **** }
 1749              		.loc 1 3024 0 is_stmt 1
 1750              		@ sp needed
 1751 0022 10BD     		pop	{r4, pc}
 1752              	.L151:
 1753              		.align	2
 1754              	.L150:
 1755 0024 00000000 		.word	.LANCHOR2
 1756              		.cfi_endproc
 1757              	.LFE47:
 1758              		.size	CySysTickServiceCallbacks, .-CySysTickServiceCallbacks
 1759              		.section	.text.CySysTickClear,"ax",%progbits
 1760              		.align	2
 1761              		.global	CySysTickClear
 1762              		.code	16
 1763              		.thumb_func
 1764              		.type	CySysTickClear, %function
 1765              	CySysTickClear:
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccBBFZQS.s 			page 87


 1766              	.LFB44:
2927:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CVR_REG = 0u;
 1767              		.loc 1 2927 0
 1768              		.cfi_startproc
2928:.\Generated_Source\PSoC4/CyLib.c **** }
 1769              		.loc 1 2928 0
 1770 0000 0022     		mov	r2, #0
 1771 0002 014B     		ldr	r3, .L153
 1772 0004 1A60     		str	r2, [r3]
2929:.\Generated_Source\PSoC4/CyLib.c **** 
 1773              		.loc 1 2929 0
 1774              		@ sp needed
 1775 0006 7047     		bx	lr
 1776              	.L154:
 1777              		.align	2
 1778              	.L153:
 1779 0008 18E000E0 		.word	-536813544
 1780              		.cfi_endproc
 1781              	.LFE44:
 1782              		.size	CySysTickClear, .-CySysTickClear
 1783              		.section	.text.CySysTickInit,"ax",%progbits
 1784              		.align	2
 1785              		.global	CySysTickInit
 1786              		.code	16
 1787              		.thumb_func
 1788              		.type	CySysTickInit, %function
 1789              	CySysTickInit:
 1790              	.LFB34:
2670:.\Generated_Source\PSoC4/CyLib.c ****         uint32 i;
 1791              		.loc 1 2670 0
 1792              		.cfi_startproc
 1793 0000 08B5     		push	{r3, lr}
 1794              		.cfi_def_cfa_offset 8
 1795              		.cfi_offset 3, -8
 1796              		.cfi_offset 14, -4
 1797              	.LVL136:
2673:.\Generated_Source\PSoC4/CyLib.c ****     {
 1798              		.loc 1 2673 0
 1799 0002 0023     		mov	r3, #0
 1800 0004 04E0     		b	.L156
 1801              	.LVL137:
 1802              	.L157:
2675:.\Generated_Source\PSoC4/CyLib.c ****     }
 1803              		.loc 1 2675 0 discriminator 3
 1804 0006 9900     		lsl	r1, r3, #2
 1805 0008 0020     		mov	r0, #0
 1806 000a 0D4A     		ldr	r2, .L158
 1807 000c 8850     		str	r0, [r1, r2]
2673:.\Generated_Source\PSoC4/CyLib.c ****     {
 1808              		.loc 1 2673 0 discriminator 3
 1809 000e 0133     		add	r3, r3, #1
 1810              	.LVL138:
 1811              	.L156:
2673:.\Generated_Source\PSoC4/CyLib.c ****     {
 1812              		.loc 1 2673 0 is_stmt 0 discriminator 1
 1813 0010 042B     		cmp	r3, #4
 1814 0012 F8D9     		bls	.L157
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccBBFZQS.s 			page 88


2678:.\Generated_Source\PSoC4/CyLib.c **** 
 1815              		.loc 1 2678 0 is_stmt 1
 1816 0014 0F20     		mov	r0, #15
 1817 0016 0B49     		ldr	r1, .L158+4
 1818 0018 FFF7FEFF 		bl	CyIntSetSysVector
 1819              	.LVL139:
2681:.\Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
 1820              		.loc 1 2681 0
 1821 001c 0120     		mov	r0, #1
 1822 001e FFF7FEFF 		bl	CySysTickSetClockSource
 1823              	.LVL140:
2684:.\Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
 1824              		.loc 1 2684 0
 1825 0022 094B     		ldr	r3, .L158+8
 1826 0024 D868     		ldr	r0, [r3, #12]
 1827 0026 FA21     		mov	r1, #250
 1828 0028 8900     		lsl	r1, r1, #2
 1829 002a FFF7FEFF 		bl	__aeabi_uidiv
 1830              	.LVL141:
 1831 002e FFF7FEFF 		bl	CySysTickSetReload
 1832              	.LVL142:
2685:.\Generated_Source\PSoC4/CyLib.c ****     CyIntEnable(CY_INT_SYSTICK_IRQN);
 1833              		.loc 1 2685 0
 1834 0032 FFF7FEFF 		bl	CySysTickClear
 1835              	.LVL143:
2686:.\Generated_Source\PSoC4/CyLib.c **** }
 1836              		.loc 1 2686 0
 1837 0036 0F20     		mov	r0, #15
 1838 0038 FFF7FEFF 		bl	CyIntEnable
 1839              	.LVL144:
2687:.\Generated_Source\PSoC4/CyLib.c **** 
 1840              		.loc 1 2687 0
 1841              		@ sp needed
 1842 003c 08BD     		pop	{r3, pc}
 1843              	.L159:
 1844 003e C046     		.align	2
 1845              	.L158:
 1846 0040 00000000 		.word	.LANCHOR2
 1847 0044 00000000 		.word	CySysTickServiceCallbacks
 1848 0048 00000000 		.word	.LANCHOR0
 1849              		.cfi_endproc
 1850              	.LFE34:
 1851              		.size	CySysTickInit, .-CySysTickInit
 1852              		.section	.text.CySysTickStart,"ax",%progbits
 1853              		.align	2
 1854              		.global	CySysTickStart
 1855              		.code	16
 1856              		.thumb_func
 1857              		.type	CySysTickStart, %function
 1858              	CySysTickStart:
 1859              	.LFB33:
2634:.\Generated_Source\PSoC4/CyLib.c ****     if (0u == CySysTickInitVar)
 1860              		.loc 1 2634 0
 1861              		.cfi_startproc
 1862 0000 08B5     		push	{r3, lr}
 1863              		.cfi_def_cfa_offset 8
 1864              		.cfi_offset 3, -8
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccBBFZQS.s 			page 89


 1865              		.cfi_offset 14, -4
2635:.\Generated_Source\PSoC4/CyLib.c ****     {
 1866              		.loc 1 2635 0
 1867 0002 064B     		ldr	r3, .L162
 1868 0004 5B69     		ldr	r3, [r3, #20]
 1869 0006 002B     		cmp	r3, #0
 1870 0008 04D1     		bne	.L161
2637:.\Generated_Source\PSoC4/CyLib.c ****         CySysTickInitVar = 1u;
 1871              		.loc 1 2637 0
 1872 000a FFF7FEFF 		bl	CySysTickInit
 1873              	.LVL145:
2638:.\Generated_Source\PSoC4/CyLib.c ****     }
 1874              		.loc 1 2638 0
 1875 000e 0122     		mov	r2, #1
 1876 0010 024B     		ldr	r3, .L162
 1877 0012 5A61     		str	r2, [r3, #20]
 1878              	.L161:
2641:.\Generated_Source\PSoC4/CyLib.c **** }
 1879              		.loc 1 2641 0
 1880 0014 FFF7FEFF 		bl	CySysTickEnable
 1881              	.LVL146:
2642:.\Generated_Source\PSoC4/CyLib.c **** 
 1882              		.loc 1 2642 0
 1883              		@ sp needed
 1884 0018 08BD     		pop	{r3, pc}
 1885              	.L163:
 1886 001a C046     		.align	2
 1887              	.L162:
 1888 001c 00000000 		.word	.LANCHOR2
 1889              		.cfi_endproc
 1890              	.LFE33:
 1891              		.size	CySysTickStart, .-CySysTickStart
 1892              		.section	.text.CySysTickSetCallback,"ax",%progbits
 1893              		.align	2
 1894              		.global	CySysTickSetCallback
 1895              		.code	16
 1896              		.thumb_func
 1897              		.type	CySysTickSetCallback, %function
 1898              	CySysTickSetCallback:
 1899              	.LFB45:
2964:.\Generated_Source\PSoC4/CyLib.c ****     cySysTickCallback retVal;
 1900              		.loc 1 2964 0
 1901              		.cfi_startproc
 1902              	.LVL147:
2967:.\Generated_Source\PSoC4/CyLib.c ****     CySysTickCallbacks[number] = function;
 1903              		.loc 1 2967 0
 1904 0000 024A     		ldr	r2, .L165
 1905 0002 8300     		lsl	r3, r0, #2
 1906 0004 9858     		ldr	r0, [r3, r2]
 1907              	.LVL148:
2968:.\Generated_Source\PSoC4/CyLib.c ****     return (retVal);
 1908              		.loc 1 2968 0
 1909 0006 9950     		str	r1, [r3, r2]
2970:.\Generated_Source\PSoC4/CyLib.c **** 
 1910              		.loc 1 2970 0
 1911              		@ sp needed
 1912 0008 7047     		bx	lr
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccBBFZQS.s 			page 90


 1913              	.L166:
 1914 000a C046     		.align	2
 1915              	.L165:
 1916 000c 00000000 		.word	.LANCHOR2
 1917              		.cfi_endproc
 1918              	.LFE45:
 1919              		.size	CySysTickSetCallback, .-CySysTickSetCallback
 1920              		.section	.text.CySysTickGetCallback,"ax",%progbits
 1921              		.align	2
 1922              		.global	CySysTickGetCallback
 1923              		.code	16
 1924              		.thumb_func
 1925              		.type	CySysTickGetCallback, %function
 1926              	CySysTickGetCallback:
 1927              	.LFB46:
2990:.\Generated_Source\PSoC4/CyLib.c ****     return ((cySysTickCallback) CySysTickCallbacks[number]);
 1928              		.loc 1 2990 0
 1929              		.cfi_startproc
 1930              	.LVL149:
2991:.\Generated_Source\PSoC4/CyLib.c **** }
 1931              		.loc 1 2991 0
 1932 0000 8000     		lsl	r0, r0, #2
 1933              	.LVL150:
 1934 0002 014B     		ldr	r3, .L168
 1935 0004 C058     		ldr	r0, [r0, r3]
2992:.\Generated_Source\PSoC4/CyLib.c **** 
 1936              		.loc 1 2992 0
 1937              		@ sp needed
 1938 0006 7047     		bx	lr
 1939              	.L169:
 1940              		.align	2
 1941              	.L168:
 1942 0008 00000000 		.word	.LANCHOR2
 1943              		.cfi_endproc
 1944              	.LFE46:
 1945              		.size	CySysTickGetCallback, .-CySysTickGetCallback
 1946              		.section	.text.CyGetUniqueId,"ax",%progbits
 1947              		.align	2
 1948              		.global	CyGetUniqueId
 1949              		.code	16
 1950              		.thumb_func
 1951              		.type	CyGetUniqueId, %function
 1952              	CyGetUniqueId:
 1953              	.LFB48:
3025:.\Generated_Source\PSoC4/CyLib.c **** 
3026:.\Generated_Source\PSoC4/CyLib.c **** 
3027:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3028:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyGetUniqueId
3029:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
3030:.\Generated_Source\PSoC4/CyLib.c **** *
3031:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
3032:.\Generated_Source\PSoC4/CyLib.c **** *  Returns the 64-bit unique ID of the device. The uniqueness of the number is
3033:.\Generated_Source\PSoC4/CyLib.c **** *  guaranteed for 10 years due to the die lot number having a cycle life of 10
3034:.\Generated_Source\PSoC4/CyLib.c **** *  years and even after 10 years, the probability of getting two identical
3035:.\Generated_Source\PSoC4/CyLib.c **** *  numbers is very small.
3036:.\Generated_Source\PSoC4/CyLib.c **** *
3037:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccBBFZQS.s 			page 91


3038:.\Generated_Source\PSoC4/CyLib.c **** *  uniqueId: The pointer to a two element 32-bit unsigned integer array. Returns
3039:.\Generated_Source\PSoC4/CyLib.c **** *  the 64-bit unique ID of the device by loading them into the integer array
3040:.\Generated_Source\PSoC4/CyLib.c **** *  pointed to by uniqueId.
3041:.\Generated_Source\PSoC4/CyLib.c **** *
3042:.\Generated_Source\PSoC4/CyLib.c **** * Return:
3043:.\Generated_Source\PSoC4/CyLib.c **** *  None
3044:.\Generated_Source\PSoC4/CyLib.c **** *
3045:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3046:.\Generated_Source\PSoC4/CyLib.c **** void CyGetUniqueId(uint32* uniqueId)
3047:.\Generated_Source\PSoC4/CyLib.c **** {
 1954              		.loc 1 3047 0
 1955              		.cfi_startproc
 1956              	.LVL151:
3048:.\Generated_Source\PSoC4/CyLib.c **** #if(CY_PSOC4)
3049:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT0  );
 1957              		.loc 1 3049 0
 1958 0000 134B     		ldr	r3, .L171
 1959 0002 1B78     		ldrb	r3, [r3]
 1960 0004 DAB2     		uxtb	r2, r3
 1961 0006 0260     		str	r2, [r0]
3050:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
 1962              		.loc 1 3050 0
 1963 0008 124B     		ldr	r3, .L171+4
 1964 000a 1B78     		ldrb	r3, [r3]
 1965 000c 1B02     		lsl	r3, r3, #8
 1966 000e 1343     		orr	r3, r2
 1967 0010 0360     		str	r3, [r0]
3051:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT2  ) << 16u);
 1968              		.loc 1 3051 0
 1969 0012 114A     		ldr	r2, .L171+8
 1970 0014 1278     		ldrb	r2, [r2]
 1971 0016 1204     		lsl	r2, r2, #16
 1972 0018 1343     		orr	r3, r2
 1973 001a 0360     		str	r3, [r0]
3052:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_WAFER ) << 24u);
 1974              		.loc 1 3052 0
 1975 001c 0F4A     		ldr	r2, .L171+12
 1976 001e 1278     		ldrb	r2, [r2]
 1977 0020 1206     		lsl	r2, r2, #24
 1978 0022 1343     		orr	r3, r2
 1979 0024 0360     		str	r3, [r0]
3053:.\Generated_Source\PSoC4/CyLib.c **** 
3054:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_X     );
 1980              		.loc 1 3054 0
 1981 0026 0E4B     		ldr	r3, .L171+16
 1982 0028 1B78     		ldrb	r3, [r3]
 1983 002a DAB2     		uxtb	r2, r3
 1984 002c 4260     		str	r2, [r0, #4]
3055:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_Y     ) <<  8u);
 1985              		.loc 1 3055 0
 1986 002e 0D4B     		ldr	r3, .L171+20
 1987 0030 1B78     		ldrb	r3, [r3]
 1988 0032 1B02     		lsl	r3, r3, #8
 1989 0034 1343     		orr	r3, r2
 1990 0036 4360     		str	r3, [r0, #4]
3056:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_SORT  ) << 16u);
 1991              		.loc 1 3056 0
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccBBFZQS.s 			page 92


 1992 0038 0B4A     		ldr	r2, .L171+24
 1993 003a 1278     		ldrb	r2, [r2]
 1994 003c 1204     		lsl	r2, r2, #16
 1995 003e 1343     		orr	r3, r2
 1996 0040 4360     		str	r3, [r0, #4]
3057:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_MINOR ) << 24u);
 1997              		.loc 1 3057 0
 1998 0042 0A4A     		ldr	r2, .L171+28
 1999 0044 1278     		ldrb	r2, [r2]
 2000 0046 1206     		lsl	r2, r2, #24
 2001 0048 1343     		orr	r3, r2
 2002 004a 4360     		str	r3, [r0, #4]
3058:.\Generated_Source\PSoC4/CyLib.c **** #else
3059:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u]  =  (uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_LOT_LSB   )
3060:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_LOT_MSB   )
3061:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_MLOGIC_REV_ID                )
3062:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_WAFER_NUM )
3063:.\Generated_Source\PSoC4/CyLib.c **** 
3064:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u]  =  (uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_X_LOC     )
3065:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_Y_LOC     )
3066:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_WRK_WK    )
3067:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_FAB_YR    )
3068:.\Generated_Source\PSoC4/CyLib.c **** #endif  /* (CY_PSOC4) */
3069:.\Generated_Source\PSoC4/CyLib.c **** }
 2003              		.loc 1 3069 0
 2004              		@ sp needed
 2005 004c 7047     		bx	lr
 2006              	.L172:
 2007 004e C046     		.align	2
 2008              	.L171:
 2009 0050 78F1FF0F 		.word	268431736
 2010 0054 79F1FF0F 		.word	268431737
 2011 0058 7AF1FF0F 		.word	268431738
 2012 005c 7BF1FF0F 		.word	268431739
 2013 0060 7CF1FF0F 		.word	268431740
 2014 0064 7DF1FF0F 		.word	268431741
 2015 0068 7EF1FF0F 		.word	268431742
 2016 006c 7FF1FF0F 		.word	268431743
 2017              		.cfi_endproc
 2018              	.LFE48:
 2019              		.size	CyGetUniqueId, .-CyGetUniqueId
 2020              		.section	.text.CySysSetRamAccessArbPriority,"ax",%progbits
 2021              		.align	2
 2022              		.global	CySysSetRamAccessArbPriority
 2023              		.code	16
 2024              		.thumb_func
 2025              		.type	CySysSetRamAccessArbPriority, %function
 2026              	CySysSetRamAccessArbPriority:
 2027              	.LFB49:
3070:.\Generated_Source\PSoC4/CyLib.c **** 
3071:.\Generated_Source\PSoC4/CyLib.c **** 
3072:.\Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_DMAC_PRESENT)
3073:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3074:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysSetRamAccessArbPriority
3075:.\Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3076:.\Generated_Source\PSoC4/CyLib.c ****     *
3077:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccBBFZQS.s 			page 93


3078:.\Generated_Source\PSoC4/CyLib.c ****     *  Sets RAM access priority between CPU and DMA. The RAM_CTL register is
3079:.\Generated_Source\PSoC4/CyLib.c ****     *  configured to set the priority. Please refer to the device TRM for more
3080:.\Generated_Source\PSoC4/CyLib.c ****     *  details.
3081:.\Generated_Source\PSoC4/CyLib.c ****     *
3082:.\Generated_Source\PSoC4/CyLib.c ****     *  This API is applicable for PSoC 4200M and PSoC 4200L devices only.
3083:.\Generated_Source\PSoC4/CyLib.c ****     *
3084:.\Generated_Source\PSoC4/CyLib.c ****     *  Parameters:
3085:.\Generated_Source\PSoC4/CyLib.c ****     *  source:
3086:.\Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_CPU              CPU has priority (Default)
3087:.\Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_DMA              DMA has priority
3088:.\Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND            Round robin
3089:.\Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND_STICKY     Round robin sticky
3090:.\Generated_Source\PSoC4/CyLib.c ****     *
3091:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3092:.\Generated_Source\PSoC4/CyLib.c ****     void CySysSetRamAccessArbPriority(uint32 source)
3093:.\Generated_Source\PSoC4/CyLib.c ****     {
 2028              		.loc 1 3093 0
 2029              		.cfi_startproc
 2030              	.LVL152:
3094:.\Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
3095:.\Generated_Source\PSoC4/CyLib.c **** 
3096:.\Generated_Source\PSoC4/CyLib.c ****         regTmp  = CY_SYS_CPUSS_RAM_CTL_REG & ~CY_SYS_CPUSS_RAM_CTL_ARB_MASK;
 2031              		.loc 1 3096 0
 2032 0000 0549     		ldr	r1, .L174
 2033 0002 0A68     		ldr	r2, [r1]
 2034 0004 054B     		ldr	r3, .L174+4
 2035 0006 1340     		and	r3, r2
 2036              	.LVL153:
3097:.\Generated_Source\PSoC4/CyLib.c ****         regTmp |= ((uint32) (source << CY_SYS_CPUSS_RAM_CTL_ARB_SHIFT) & CY_SYS_CPUSS_RAM_CTL_ARB_M
 2037              		.loc 1 3097 0
 2038 0008 4004     		lsl	r0, r0, #17
 2039              	.LVL154:
 2040 000a C022     		mov	r2, #192
 2041 000c D202     		lsl	r2, r2, #11
 2042 000e 1040     		and	r0, r2
 2043 0010 1843     		orr	r0, r3
 2044              	.LVL155:
3098:.\Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CPUSS_RAM_CTL_REG = regTmp;
 2045              		.loc 1 3098 0
 2046 0012 0860     		str	r0, [r1]
3099:.\Generated_Source\PSoC4/CyLib.c ****     }
 2047              		.loc 1 3099 0
 2048              		@ sp needed
 2049 0014 7047     		bx	lr
 2050              	.L175:
 2051 0016 C046     		.align	2
 2052              	.L174:
 2053 0018 38001040 		.word	1074790456
 2054 001c FFFFF9FF 		.word	-393217
 2055              		.cfi_endproc
 2056              	.LFE49:
 2057              		.size	CySysSetRamAccessArbPriority, .-CySysSetRamAccessArbPriority
 2058              		.section	.text.CySysSetFlashAccessArbPriority,"ax",%progbits
 2059              		.align	2
 2060              		.global	CySysSetFlashAccessArbPriority
 2061              		.code	16
 2062              		.thumb_func
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccBBFZQS.s 			page 94


 2063              		.type	CySysSetFlashAccessArbPriority, %function
 2064              	CySysSetFlashAccessArbPriority:
 2065              	.LFB50:
3100:.\Generated_Source\PSoC4/CyLib.c **** 
3101:.\Generated_Source\PSoC4/CyLib.c **** 
3102:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3103:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysSetFlashAccessArbPriority
3104:.\Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3105:.\Generated_Source\PSoC4/CyLib.c ****     *
3106:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
3107:.\Generated_Source\PSoC4/CyLib.c ****     *  Sets flash access priority between CPU and DMA. The FLASH_CTL register is
3108:.\Generated_Source\PSoC4/CyLib.c ****     *  configured to set the priority. Please refer to the device TRM for more
3109:.\Generated_Source\PSoC4/CyLib.c ****     *  details.
3110:.\Generated_Source\PSoC4/CyLib.c ****     *
3111:.\Generated_Source\PSoC4/CyLib.c ****     *  This API is applicable for PSoC 4200M and PSoC 4200L devices only.
3112:.\Generated_Source\PSoC4/CyLib.c ****     *
3113:.\Generated_Source\PSoC4/CyLib.c ****     *  Parameters:
3114:.\Generated_Source\PSoC4/CyLib.c ****     *  source:
3115:.\Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_CPU              CPU has priority (Default)
3116:.\Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_DMA              DMA has priority
3117:.\Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND            Round robin
3118:.\Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND_STICKY     Round robin sticky
3119:.\Generated_Source\PSoC4/CyLib.c ****     *
3120:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3121:.\Generated_Source\PSoC4/CyLib.c ****     void CySysSetFlashAccessArbPriority(uint32 source)
3122:.\Generated_Source\PSoC4/CyLib.c ****     {
 2066              		.loc 1 3122 0
 2067              		.cfi_startproc
 2068              	.LVL156:
3123:.\Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
3124:.\Generated_Source\PSoC4/CyLib.c **** 
3125:.\Generated_Source\PSoC4/CyLib.c ****         regTmp  = CY_SYS_CPUSS_FLASH_CTL_REG & ~CY_SYS_CPUSS_FLASH_CTL_ARB_MASK;
 2069              		.loc 1 3125 0
 2070 0000 0549     		ldr	r1, .L177
 2071 0002 0A68     		ldr	r2, [r1]
 2072 0004 054B     		ldr	r3, .L177+4
 2073 0006 1340     		and	r3, r2
 2074              	.LVL157:
3126:.\Generated_Source\PSoC4/CyLib.c ****         regTmp |= ((uint32) (source << CY_SYS_CPUSS_FLASH_CTL_ARB_SHIFT) & CY_SYS_CPUSS_FLASH_CTL_A
 2075              		.loc 1 3126 0
 2076 0008 4004     		lsl	r0, r0, #17
 2077              	.LVL158:
 2078 000a C022     		mov	r2, #192
 2079 000c D202     		lsl	r2, r2, #11
 2080 000e 1040     		and	r0, r2
 2081 0010 1843     		orr	r0, r3
 2082              	.LVL159:
3127:.\Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CPUSS_FLASH_CTL_REG = regTmp;
 2083              		.loc 1 3127 0
 2084 0012 0860     		str	r0, [r1]
3128:.\Generated_Source\PSoC4/CyLib.c ****     }
 2085              		.loc 1 3128 0
 2086              		@ sp needed
 2087 0014 7047     		bx	lr
 2088              	.L178:
 2089 0016 C046     		.align	2
 2090              	.L177:
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccBBFZQS.s 			page 95


 2091 0018 30001040 		.word	1074790448
 2092 001c FFFFF9FF 		.word	-393217
 2093              		.cfi_endproc
 2094              	.LFE50:
 2095              		.size	CySysSetFlashAccessArbPriority, .-CySysSetFlashAccessArbPriority
 2096              		.section	.text.CySysSetDmacAccessArbPriority,"ax",%progbits
 2097              		.align	2
 2098              		.global	CySysSetDmacAccessArbPriority
 2099              		.code	16
 2100              		.thumb_func
 2101              		.type	CySysSetDmacAccessArbPriority, %function
 2102              	CySysSetDmacAccessArbPriority:
 2103              	.LFB51:
3129:.\Generated_Source\PSoC4/CyLib.c **** 
3130:.\Generated_Source\PSoC4/CyLib.c **** 
3131:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3132:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysSetDmacAccessArbPriority
3133:.\Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3134:.\Generated_Source\PSoC4/CyLib.c ****     *
3135:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
3136:.\Generated_Source\PSoC4/CyLib.c ****     *  Sets DMAC slave interface access priority between CPU and DMA. The DMAC_CTL
3137:.\Generated_Source\PSoC4/CyLib.c ****     *  register is configured to set the priority. Please refer to the device TRM
3138:.\Generated_Source\PSoC4/CyLib.c ****     *  for more details.
3139:.\Generated_Source\PSoC4/CyLib.c ****     *
3140:.\Generated_Source\PSoC4/CyLib.c ****     *  This API is applicable for PSoC 4200M and PSoC 4200L devices only.
3141:.\Generated_Source\PSoC4/CyLib.c ****     *
3142:.\Generated_Source\PSoC4/CyLib.c ****     *  Parameters:
3143:.\Generated_Source\PSoC4/CyLib.c ****     *  source:
3144:.\Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_CPU              CPU has priority (Default)
3145:.\Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_DMA              DMA has priority
3146:.\Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND            Round robin
3147:.\Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND_STICKY     Round robin sticky
3148:.\Generated_Source\PSoC4/CyLib.c ****     *
3149:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3150:.\Generated_Source\PSoC4/CyLib.c ****     void CySysSetDmacAccessArbPriority(uint32 source)
3151:.\Generated_Source\PSoC4/CyLib.c ****     {
 2104              		.loc 1 3151 0
 2105              		.cfi_startproc
 2106              	.LVL160:
3152:.\Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
3153:.\Generated_Source\PSoC4/CyLib.c **** 
3154:.\Generated_Source\PSoC4/CyLib.c ****         regTmp  = CY_SYS_CPUSS_DMAC_CTL_REG & ~CY_SYS_CPUSS_DMAC_CTL_ARB_MASK;
 2107              		.loc 1 3154 0
 2108 0000 0549     		ldr	r1, .L180
 2109 0002 0A68     		ldr	r2, [r1]
 2110 0004 054B     		ldr	r3, .L180+4
 2111 0006 1340     		and	r3, r2
 2112              	.LVL161:
3155:.\Generated_Source\PSoC4/CyLib.c ****         regTmp |= ((uint32) (source << CY_SYS_CPUSS_DMAC_CTL_ARB_SHIFT) & CY_SYS_CPUSS_DMAC_CTL_ARB
 2113              		.loc 1 3155 0
 2114 0008 4004     		lsl	r0, r0, #17
 2115              	.LVL162:
 2116 000a C022     		mov	r2, #192
 2117 000c D202     		lsl	r2, r2, #11
 2118 000e 1040     		and	r0, r2
 2119 0010 1843     		orr	r0, r3
 2120              	.LVL163:
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccBBFZQS.s 			page 96


3156:.\Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CPUSS_DMAC_CTL_REG = regTmp;
 2121              		.loc 1 3156 0
 2122 0012 0860     		str	r0, [r1]
3157:.\Generated_Source\PSoC4/CyLib.c ****     }
 2123              		.loc 1 3157 0
 2124              		@ sp needed
 2125 0014 7047     		bx	lr
 2126              	.L181:
 2127 0016 C046     		.align	2
 2128              	.L180:
 2129 0018 3C001040 		.word	1074790460
 2130 001c FFFFF9FF 		.word	-393217
 2131              		.cfi_endproc
 2132              	.LFE51:
 2133              		.size	CySysSetDmacAccessArbPriority, .-CySysSetDmacAccessArbPriority
 2134              		.section	.text.CySysSetPeripheralAccessArbPriority,"ax",%progbits
 2135              		.align	2
 2136              		.global	CySysSetPeripheralAccessArbPriority
 2137              		.code	16
 2138              		.thumb_func
 2139              		.type	CySysSetPeripheralAccessArbPriority, %function
 2140              	CySysSetPeripheralAccessArbPriority:
 2141              	.LFB52:
3158:.\Generated_Source\PSoC4/CyLib.c **** 
3159:.\Generated_Source\PSoC4/CyLib.c **** 
3160:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3161:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysSetPeripheralAccessArbPriority
3162:.\Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3163:.\Generated_Source\PSoC4/CyLib.c ****     *
3164:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
3165:.\Generated_Source\PSoC4/CyLib.c ****     *  Sets slave peripheral interface access priority between CPU and DMA.
3166:.\Generated_Source\PSoC4/CyLib.c ****     *  The SL_CTL register is configured to set the priority. Please refer to the
3167:.\Generated_Source\PSoC4/CyLib.c ****     *  device TRM for more details.
3168:.\Generated_Source\PSoC4/CyLib.c ****     *
3169:.\Generated_Source\PSoC4/CyLib.c ****     *  This API is applicable for PSoC 4200M and PSoC 4200L devices only.
3170:.\Generated_Source\PSoC4/CyLib.c ****     *
3171:.\Generated_Source\PSoC4/CyLib.c ****     *  Parameters:
3172:.\Generated_Source\PSoC4/CyLib.c ****     *  interfaceNumber: the slave interface number. Please refer to the device TRM
3173:.\Generated_Source\PSoC4/CyLib.c ****     *  for more details.
3174:.\Generated_Source\PSoC4/CyLib.c ****     *
3175:.\Generated_Source\PSoC4/CyLib.c ****     *  source:
3176:.\Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_CPU              CPU has priority (Default)
3177:.\Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_DMA              DMA has priority
3178:.\Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND            Round robin
3179:.\Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND_STICKY     Round robin sticky
3180:.\Generated_Source\PSoC4/CyLib.c ****     *
3181:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3182:.\Generated_Source\PSoC4/CyLib.c ****     void CySysSetPeripheralAccessArbPriority(uint32 interfaceNumber, uint32 source)
3183:.\Generated_Source\PSoC4/CyLib.c ****     {
 2142              		.loc 1 3183 0
 2143              		.cfi_startproc
 2144              	.LVL164:
 2145 0000 08B5     		push	{r3, lr}
 2146              		.cfi_def_cfa_offset 8
 2147              		.cfi_offset 3, -8
 2148              		.cfi_offset 14, -4
3184:.\Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccBBFZQS.s 			page 97


3185:.\Generated_Source\PSoC4/CyLib.c **** 
3186:.\Generated_Source\PSoC4/CyLib.c ****         if (interfaceNumber == 0u)
 2149              		.loc 1 3186 0
 2150 0002 0028     		cmp	r0, #0
 2151 0004 0AD1     		bne	.L183
3187:.\Generated_Source\PSoC4/CyLib.c ****         {
3188:.\Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CPUSS_SL_CTL0_REG & ~CY_SYS_CPUSS_SL_CTL_ARB_MASK;
 2152              		.loc 1 3188 0
 2153 0006 1448     		ldr	r0, .L187
 2154              	.LVL165:
 2155 0008 0268     		ldr	r2, [r0]
 2156 000a 144B     		ldr	r3, .L187+4
 2157 000c 1340     		and	r3, r2
 2158              	.LVL166:
3189:.\Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (source << CY_SYS_CPUSS_SL_CTL_ARB_SHIFT) & CY_SYS_CPUSS_SL_CTL_ARB
 2159              		.loc 1 3189 0
 2160 000e 4904     		lsl	r1, r1, #17
 2161              	.LVL167:
 2162 0010 C022     		mov	r2, #192
 2163 0012 D202     		lsl	r2, r2, #11
 2164 0014 1140     		and	r1, r2
 2165 0016 1943     		orr	r1, r3
 2166              	.LVL168:
3190:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CPUSS_SL_CTL0_REG = regTmp;
 2167              		.loc 1 3190 0
 2168 0018 0160     		str	r1, [r0]
 2169 001a 1CE0     		b	.L182
 2170              	.LVL169:
 2171              	.L183:
3191:.\Generated_Source\PSoC4/CyLib.c ****         } else
3192:.\Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_SL_NR >= 2)
3193:.\Generated_Source\PSoC4/CyLib.c ****         if (interfaceNumber == 1u)
 2172              		.loc 1 3193 0
 2173 001c 0128     		cmp	r0, #1
 2174 001e 0AD1     		bne	.L185
3194:.\Generated_Source\PSoC4/CyLib.c ****         {
3195:.\Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CPUSS_SL_CTL1_REG & ~CY_SYS_CPUSS_SL_CTL_ARB_MASK;
 2175              		.loc 1 3195 0
 2176 0020 0F48     		ldr	r0, .L187+8
 2177              	.LVL170:
 2178 0022 0268     		ldr	r2, [r0]
 2179 0024 0D4B     		ldr	r3, .L187+4
 2180 0026 1340     		and	r3, r2
 2181              	.LVL171:
3196:.\Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (source << CY_SYS_CPUSS_SL_CTL_ARB_SHIFT) & CY_SYS_CPUSS_SL_CTL_ARB
 2182              		.loc 1 3196 0
 2183 0028 4904     		lsl	r1, r1, #17
 2184              	.LVL172:
 2185 002a C022     		mov	r2, #192
 2186 002c D202     		lsl	r2, r2, #11
 2187 002e 1140     		and	r1, r2
 2188 0030 1943     		orr	r1, r3
 2189              	.LVL173:
3197:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CPUSS_SL_CTL1_REG = regTmp;
 2190              		.loc 1 3197 0
 2191 0032 0160     		str	r1, [r0]
 2192 0034 0FE0     		b	.L182
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccBBFZQS.s 			page 98


 2193              	.LVL174:
 2194              	.L185:
3198:.\Generated_Source\PSoC4/CyLib.c ****         } else
3199:.\Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_IP_SL_NR >= 1) */
3200:.\Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_SL_NR >= 3)
3201:.\Generated_Source\PSoC4/CyLib.c ****         if (interfaceNumber == 2u)
 2195              		.loc 1 3201 0
 2196 0036 0228     		cmp	r0, #2
 2197 0038 0AD1     		bne	.L186
3202:.\Generated_Source\PSoC4/CyLib.c ****         {
3203:.\Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CPUSS_SL_CTL2_REG & ~CY_SYS_CPUSS_SL_CTL_ARB_MASK;
 2198              		.loc 1 3203 0
 2199 003a 0A48     		ldr	r0, .L187+12
 2200              	.LVL175:
 2201 003c 0268     		ldr	r2, [r0]
 2202 003e 074B     		ldr	r3, .L187+4
 2203 0040 1340     		and	r3, r2
 2204              	.LVL176:
3204:.\Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (source << CY_SYS_CPUSS_SL_CTL_ARB_SHIFT) & CY_SYS_CPUSS_SL_CTL_ARB
 2205              		.loc 1 3204 0
 2206 0042 4904     		lsl	r1, r1, #17
 2207              	.LVL177:
 2208 0044 C022     		mov	r2, #192
 2209 0046 D202     		lsl	r2, r2, #11
 2210 0048 1140     		and	r1, r2
 2211 004a 1943     		orr	r1, r3
 2212              	.LVL178:
3205:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CPUSS_SL_CTL2_REG = regTmp;
 2213              		.loc 1 3205 0
 2214 004c 0160     		str	r1, [r0]
 2215 004e 02E0     		b	.L182
 2216              	.LVL179:
 2217              	.L186:
3206:.\Generated_Source\PSoC4/CyLib.c ****         } else
3207:.\Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_IP_SL_NR >= 1) */
3208:.\Generated_Source\PSoC4/CyLib.c ****         {
3209:.\Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if interface is invalid */
3210:.\Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
 2218              		.loc 1 3210 0 discriminator 1
 2219 0050 0020     		mov	r0, #0
 2220              	.LVL180:
 2221 0052 FFF7FEFF 		bl	CyHalt
 2222              	.LVL181:
 2223              	.L182:
3211:.\Generated_Source\PSoC4/CyLib.c ****         }
3212:.\Generated_Source\PSoC4/CyLib.c ****     }
 2224              		.loc 1 3212 0
 2225              		@ sp needed
 2226 0056 08BD     		pop	{r3, pc}
 2227              	.L188:
 2228              		.align	2
 2229              	.L187:
 2230 0058 00011040 		.word	1074790656
 2231 005c FFFFF9FF 		.word	-393217
 2232 0060 04011040 		.word	1074790660
 2233 0064 08011040 		.word	1074790664
 2234              		.cfi_endproc
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccBBFZQS.s 			page 99


 2235              	.LFE52:
 2236              		.size	CySysSetPeripheralAccessArbPriority, .-CySysSetPeripheralAccessArbPriority
 2237              		.global	cyImoFreqMhz2DpllOffset
 2238              		.global	cyImoFreqMhz2Reg
 2239              		.global	CySysTickInitVar
 2240              		.global	cydelay32kMs
 2241              		.global	cydelayFreqMhz
 2242              		.global	cydelayFreqKhz
 2243              		.global	cydelayFreqHz
 2244              		.section	.rodata
 2245              		.align	2
 2246              		.set	.LANCHOR1,. + 0
 2247              		.type	cyImoFreqMhz2Reg, %object
 2248              		.size	cyImoFreqMhz2Reg, 46
 2249              	cyImoFreqMhz2Reg:
 2250 0000 03       		.byte	3
 2251 0001 04       		.byte	4
 2252 0002 05       		.byte	5
 2253 0003 06       		.byte	6
 2254 0004 07       		.byte	7
 2255 0005 08       		.byte	8
 2256 0006 09       		.byte	9
 2257 0007 0A       		.byte	10
 2258 0008 0B       		.byte	11
 2259 0009 0C       		.byte	12
 2260 000a 0E       		.byte	14
 2261 000b 0F       		.byte	15
 2262 000c 10       		.byte	16
 2263 000d 11       		.byte	17
 2264 000e 12       		.byte	18
 2265 000f 13       		.byte	19
 2266 0010 14       		.byte	20
 2267 0011 15       		.byte	21
 2268 0012 16       		.byte	22
 2269 0013 17       		.byte	23
 2270 0014 18       		.byte	24
 2271 0015 19       		.byte	25
 2272 0016 1B       		.byte	27
 2273 0017 1C       		.byte	28
 2274 0018 1D       		.byte	29
 2275 0019 1E       		.byte	30
 2276 001a 1F       		.byte	31
 2277 001b 20       		.byte	32
 2278 001c 21       		.byte	33
 2279 001d 22       		.byte	34
 2280 001e 23       		.byte	35
 2281 001f 25       		.byte	37
 2282 0020 26       		.byte	38
 2283 0021 27       		.byte	39
 2284 0022 28       		.byte	40
 2285 0023 29       		.byte	41
 2286 0024 2A       		.byte	42
 2287 0025 2B       		.byte	43
 2288 0026 2E       		.byte	46
 2289 0027 2F       		.byte	47
 2290 0028 30       		.byte	48
 2291 0029 31       		.byte	49
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccBBFZQS.s 			page 100


 2292 002a 32       		.byte	50
 2293 002b 33       		.byte	51
 2294 002c 34       		.byte	52
 2295 002d 35       		.byte	53
 2296 002e 0000     		.space	2
 2297              		.type	cyImoFreqMhz2DpllOffset, %object
 2298              		.size	cyImoFreqMhz2DpllOffset, 23
 2299              	cyImoFreqMhz2DpllOffset:
 2300 0030 EE       		.byte	-18
 2301 0031 DB       		.byte	-37
 2302 0032 C9       		.byte	-55
 2303 0033 B9       		.byte	-71
 2304 0034 AA       		.byte	-86
 2305 0035 9B       		.byte	-101
 2306 0036 8E       		.byte	-114
 2307 0037 82       		.byte	-126
 2308 0038 76       		.byte	118
 2309 0039 6B       		.byte	107
 2310 003a 60       		.byte	96
 2311 003b 56       		.byte	86
 2312 003c 4D       		.byte	77
 2313 003d 44       		.byte	68
 2314 003e 3B       		.byte	59
 2315 003f 33       		.byte	51
 2316 0040 2C       		.byte	44
 2317 0041 24       		.byte	36
 2318 0042 1D       		.byte	29
 2319 0043 17       		.byte	23
 2320 0044 10       		.byte	16
 2321 0045 0A       		.byte	10
 2322 0046 04       		.byte	4
 2323 0047 00       		.data
 2324              		.align	2
 2325              		.set	.LANCHOR0,. + 0
 2326              		.type	cydelay32kMs, %object
 2327              		.size	cydelay32kMs, 4
 2328              	cydelay32kMs:
 2329 0000 0000C05D 		.word	1572864000
 2330              		.type	cydelayFreqKhz, %object
 2331              		.size	cydelayFreqKhz, 4
 2332              	cydelayFreqKhz:
 2333 0004 80BB0000 		.word	48000
 2334              		.type	cydelayFreqMhz, %object
 2335              		.size	cydelayFreqMhz, 1
 2336              	cydelayFreqMhz:
 2337 0008 30       		.byte	48
 2338 0009 000000   		.space	3
 2339              		.type	cydelayFreqHz, %object
 2340              		.size	cydelayFreqHz, 4
 2341              	cydelayFreqHz:
 2342 000c 006CDC02 		.word	48000000
 2343              		.bss
 2344              		.align	2
 2345              		.set	.LANCHOR2,. + 0
 2346              		.type	CySysTickCallbacks, %object
 2347              		.size	CySysTickCallbacks, 20
 2348              	CySysTickCallbacks:
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccBBFZQS.s 			page 101


 2349 0000 00000000 		.space	20
 2349      00000000 
 2349      00000000 
 2349      00000000 
 2349      00000000 
 2350              		.type	CySysTickInitVar, %object
 2351              		.size	CySysTickInitVar, 4
 2352              	CySysTickInitVar:
 2353 0014 00000000 		.space	4
 2354              		.text
 2355              	.Letext0:
 2356              		.file 2 ".\\Generated_Source\\PSoC4\\cytypes.h"
 2357              		.file 3 ".\\Generated_Source\\PSoC4\\CyLib.h"
 2358              		.file 4 ".\\Generated_Source\\PSoC4\\CyLFClk.h"
 2359              		.file 5 ".\\Generated_Source\\PSoC4\\CyFlash.h"
 2360              		.section	.debug_info,"",%progbits
 2361              	.Ldebug_info0:
 2362 0000 F00C0000 		.4byte	0xcf0
 2363 0004 0400     		.2byte	0x4
 2364 0006 00000000 		.4byte	.Ldebug_abbrev0
 2365 000a 04       		.byte	0x4
 2366 000b 01       		.uleb128 0x1
 2367 000c AF040000 		.4byte	.LASF115
 2368 0010 01       		.byte	0x1
 2369 0011 30030000 		.4byte	.LASF116
 2370 0015 C0030000 		.4byte	.LASF117
 2371 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2372 001d 00000000 		.4byte	0
 2373 0021 00000000 		.4byte	.Ldebug_line0
 2374 0025 02       		.uleb128 0x2
 2375 0026 01       		.byte	0x1
 2376 0027 06       		.byte	0x6
 2377 0028 D8000000 		.4byte	.LASF0
 2378 002c 02       		.uleb128 0x2
 2379 002d 01       		.byte	0x1
 2380 002e 08       		.byte	0x8
 2381 002f F6050000 		.4byte	.LASF1
 2382 0033 02       		.uleb128 0x2
 2383 0034 02       		.byte	0x2
 2384 0035 05       		.byte	0x5
 2385 0036 04060000 		.4byte	.LASF2
 2386 003a 02       		.uleb128 0x2
 2387 003b 02       		.byte	0x2
 2388 003c 07       		.byte	0x7
 2389 003d EF020000 		.4byte	.LASF3
 2390 0041 02       		.uleb128 0x2
 2391 0042 04       		.byte	0x4
 2392 0043 05       		.byte	0x5
 2393 0044 3D010000 		.4byte	.LASF4
 2394 0048 02       		.uleb128 0x2
 2395 0049 04       		.byte	0x4
 2396 004a 07       		.byte	0x7
 2397 004b 62020000 		.4byte	.LASF5
 2398 004f 02       		.uleb128 0x2
 2399 0050 08       		.byte	0x8
 2400 0051 05       		.byte	0x5
 2401 0052 CA000000 		.4byte	.LASF6
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccBBFZQS.s 			page 102


 2402 0056 02       		.uleb128 0x2
 2403 0057 08       		.byte	0x8
 2404 0058 07       		.byte	0x7
 2405 0059 54000000 		.4byte	.LASF7
 2406 005d 03       		.uleb128 0x3
 2407 005e 04       		.byte	0x4
 2408 005f 05       		.byte	0x5
 2409 0060 696E7400 		.ascii	"int\000"
 2410 0064 02       		.uleb128 0x2
 2411 0065 04       		.byte	0x4
 2412 0066 07       		.byte	0x7
 2413 0067 46020000 		.4byte	.LASF8
 2414 006b 04       		.uleb128 0x4
 2415 006c 5D010000 		.4byte	.LASF9
 2416 0070 02       		.byte	0x2
 2417 0071 3801     		.2byte	0x138
 2418 0073 2C000000 		.4byte	0x2c
 2419 0077 04       		.uleb128 0x4
 2420 0078 0F000000 		.4byte	.LASF10
 2421 007c 02       		.byte	0x2
 2422 007d 3901     		.2byte	0x139
 2423 007f 3A000000 		.4byte	0x3a
 2424 0083 04       		.uleb128 0x4
 2425 0084 A0010000 		.4byte	.LASF11
 2426 0088 02       		.byte	0x2
 2427 0089 3A01     		.2byte	0x13a
 2428 008b 48000000 		.4byte	0x48
 2429 008f 02       		.uleb128 0x2
 2430 0090 04       		.byte	0x4
 2431 0091 04       		.byte	0x4
 2432 0092 5C050000 		.4byte	.LASF12
 2433 0096 02       		.uleb128 0x2
 2434 0097 08       		.byte	0x8
 2435 0098 04       		.byte	0x4
 2436 0099 7C010000 		.4byte	.LASF13
 2437 009d 02       		.uleb128 0x2
 2438 009e 01       		.byte	0x1
 2439 009f 08       		.byte	0x8
 2440 00a0 3D060000 		.4byte	.LASF14
 2441 00a4 04       		.uleb128 0x4
 2442 00a5 C3050000 		.4byte	.LASF15
 2443 00a9 02       		.byte	0x2
 2444 00aa E201     		.2byte	0x1e2
 2445 00ac B0000000 		.4byte	0xb0
 2446 00b0 05       		.uleb128 0x5
 2447 00b1 6B000000 		.4byte	0x6b
 2448 00b5 04       		.uleb128 0x4
 2449 00b6 BA030000 		.4byte	.LASF16
 2450 00ba 02       		.byte	0x2
 2451 00bb E401     		.2byte	0x1e4
 2452 00bd C1000000 		.4byte	0xc1
 2453 00c1 05       		.uleb128 0x5
 2454 00c2 83000000 		.4byte	0x83
 2455 00c6 04       		.uleb128 0x4
 2456 00c7 5A060000 		.4byte	.LASF17
 2457 00cb 02       		.byte	0x2
 2458 00cc F401     		.2byte	0x1f4
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccBBFZQS.s 			page 103


 2459 00ce D2000000 		.4byte	0xd2
 2460 00d2 06       		.uleb128 0x6
 2461 00d3 04       		.byte	0x4
 2462 00d4 D8000000 		.4byte	0xd8
 2463 00d8 07       		.uleb128 0x7
 2464 00d9 02       		.uleb128 0x2
 2465 00da 04       		.byte	0x4
 2466 00db 07       		.byte	0x7
 2467 00dc 1E040000 		.4byte	.LASF18
 2468 00e0 08       		.uleb128 0x8
 2469 00e1 87050000 		.4byte	.LASF19
 2470 00e5 03       		.byte	0x3
 2471 00e6 6A       		.byte	0x6a
 2472 00e7 D2000000 		.4byte	0xd2
 2473 00eb 09       		.uleb128 0x9
 2474 00ec 53070000 		.4byte	.LASF20
 2475 00f0 01       		.byte	0x1
 2476 00f1 6F       		.byte	0x6f
 2477 00f2 00000000 		.4byte	.LFB1
 2478 00f6 14000000 		.4byte	.LFE1-.LFB1
 2479 00fa 01       		.uleb128 0x1
 2480 00fb 9C       		.byte	0x9c
 2481 00fc 0A       		.uleb128 0xa
 2482 00fd A0030000 		.4byte	.LASF21
 2483 0101 01       		.byte	0x1
 2484 0102 1C01     		.2byte	0x11c
 2485 0104 00000000 		.4byte	.LFB4
 2486 0108 14000000 		.4byte	.LFE4-.LFB4
 2487 010c 01       		.uleb128 0x1
 2488 010d 9C       		.byte	0x9c
 2489 010e 0B       		.uleb128 0xb
 2490 010f 8F020000 		.4byte	.LASF22
 2491 0113 01       		.byte	0x1
 2492 0114 95       		.byte	0x95
 2493 0115 00000000 		.4byte	.LFB2
 2494 0119 18000000 		.4byte	.LFE2-.LFB2
 2495 011d 01       		.uleb128 0x1
 2496 011e 9C       		.byte	0x9c
 2497 011f 2D010000 		.4byte	0x12d
 2498 0123 0C       		.uleb128 0xc
 2499 0124 06000000 		.4byte	.LVL0
 2500 0128 FC000000 		.4byte	0xfc
 2501 012c 00       		.byte	0
 2502 012d 0D       		.uleb128 0xd
 2503 012e 1F010000 		.4byte	.LASF31
 2504 0132 01       		.byte	0x1
 2505 0133 3201     		.2byte	0x132
 2506 0135 83000000 		.4byte	0x83
 2507 0139 00000000 		.4byte	.LFB5
 2508 013d 14000000 		.4byte	.LFE5-.LFB5
 2509 0141 01       		.uleb128 0x1
 2510 0142 9C       		.byte	0x9c
 2511 0143 0E       		.uleb128 0xe
 2512 0144 1F000000 		.4byte	.LASF23
 2513 0148 01       		.byte	0x1
 2514 0149 C401     		.2byte	0x1c4
 2515 014b 00000000 		.4byte	.LFB6
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccBBFZQS.s 			page 104


 2516 014f 20000000 		.4byte	.LFE6-.LFB6
 2517 0153 01       		.uleb128 0x1
 2518 0154 9C       		.byte	0x9c
 2519 0155 9C010000 		.4byte	0x19c
 2520 0159 0F       		.uleb128 0xf
 2521 015a 2C060000 		.4byte	.LASF28
 2522 015e 01       		.byte	0x1
 2523 015f C401     		.2byte	0x1c4
 2524 0161 83000000 		.4byte	0x83
 2525 0165 00000000 		.4byte	.LLST0
 2526 0169 10       		.uleb128 0x10
 2527 016a F5000000 		.4byte	.LASF24
 2528 016e 01       		.byte	0x1
 2529 016f C601     		.2byte	0x1c6
 2530 0171 6B000000 		.4byte	0x6b
 2531 0175 2C000000 		.4byte	.LLST1
 2532 0179 10       		.uleb128 0x10
 2533 017a 89070000 		.4byte	.LASF25
 2534 017e 01       		.byte	0x1
 2535 017f C701     		.2byte	0x1c7
 2536 0181 83000000 		.4byte	0x83
 2537 0185 3F000000 		.4byte	.LLST2
 2538 0189 0C       		.uleb128 0xc
 2539 018a 08000000 		.4byte	.LVL2
 2540 018e AE0C0000 		.4byte	0xcae
 2541 0192 0C       		.uleb128 0xc
 2542 0193 1A000000 		.4byte	.LVL5
 2543 0197 B90C0000 		.4byte	0xcb9
 2544 019b 00       		.byte	0
 2545 019c 11       		.uleb128 0x11
 2546 019d B3010000 		.4byte	.LASF34
 2547 01a1 01       		.byte	0x1
 2548 01a2 EE01     		.2byte	0x1ee
 2549 01a4 83000000 		.4byte	0x83
 2550 01a8 00000000 		.4byte	.LFB7
 2551 01ac 1C000000 		.4byte	.LFE7-.LFB7
 2552 01b0 01       		.uleb128 0x1
 2553 01b1 9C       		.byte	0x9c
 2554 01b2 E9010000 		.4byte	0x1e9
 2555 01b6 10       		.uleb128 0x10
 2556 01b7 F5000000 		.4byte	.LASF24
 2557 01bb 01       		.byte	0x1
 2558 01bc F001     		.2byte	0x1f0
 2559 01be 6B000000 		.4byte	0x6b
 2560 01c2 5D000000 		.4byte	.LLST3
 2561 01c6 10       		.uleb128 0x10
 2562 01c7 76040000 		.4byte	.LASF26
 2563 01cb 01       		.byte	0x1
 2564 01cc F101     		.2byte	0x1f1
 2565 01ce 83000000 		.4byte	0x83
 2566 01d2 70000000 		.4byte	.LLST4
 2567 01d6 0C       		.uleb128 0xc
 2568 01d7 06000000 		.4byte	.LVL7
 2569 01db AE0C0000 		.4byte	0xcae
 2570 01df 0C       		.uleb128 0xc
 2571 01e0 12000000 		.4byte	.LVL9
 2572 01e4 B90C0000 		.4byte	0xcb9
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccBBFZQS.s 			page 105


 2573 01e8 00       		.byte	0
 2574 01e9 0E       		.uleb128 0xe
 2575 01ea 77060000 		.4byte	.LASF27
 2576 01ee 01       		.byte	0x1
 2577 01ef 2A02     		.2byte	0x22a
 2578 01f1 00000000 		.4byte	.LFB8
 2579 01f5 28000000 		.4byte	.LFE8-.LFB8
 2580 01f9 01       		.uleb128 0x1
 2581 01fa 9C       		.byte	0x9c
 2582 01fb 32020000 		.4byte	0x232
 2583 01ff 0F       		.uleb128 0xf
 2584 0200 4B070000 		.4byte	.LASF29
 2585 0204 01       		.byte	0x1
 2586 0205 2A02     		.2byte	0x22a
 2587 0207 83000000 		.4byte	0x83
 2588 020b 8E000000 		.4byte	.LLST5
 2589 020f 10       		.uleb128 0x10
 2590 0210 F5000000 		.4byte	.LASF24
 2591 0214 01       		.byte	0x1
 2592 0215 2C02     		.2byte	0x22c
 2593 0217 6B000000 		.4byte	0x6b
 2594 021b BA000000 		.4byte	.LLST6
 2595 021f 0C       		.uleb128 0xc
 2596 0220 08000000 		.4byte	.LVL12
 2597 0224 AE0C0000 		.4byte	0xcae
 2598 0228 0C       		.uleb128 0xc
 2599 0229 1E000000 		.4byte	.LVL14
 2600 022d B90C0000 		.4byte	0xcb9
 2601 0231 00       		.byte	0
 2602 0232 0A       		.uleb128 0xa
 2603 0233 ED060000 		.4byte	.LASF30
 2604 0237 01       		.byte	0x1
 2605 0238 0F08     		.2byte	0x80f
 2606 023a 00000000 		.4byte	.LFB11
 2607 023e 20000000 		.4byte	.LFE11-.LFB11
 2608 0242 01       		.uleb128 0x1
 2609 0243 9C       		.byte	0x9c
 2610 0244 0D       		.uleb128 0xd
 2611 0245 74020000 		.4byte	.LASF32
 2612 0249 01       		.byte	0x1
 2613 024a 2508     		.2byte	0x825
 2614 024c 83000000 		.4byte	0x83
 2615 0250 00000000 		.4byte	.LFB12
 2616 0254 10000000 		.4byte	.LFE12-.LFB12
 2617 0258 01       		.uleb128 0x1
 2618 0259 9C       		.byte	0x9c
 2619 025a 0A       		.uleb128 0xa
 2620 025b 89010000 		.4byte	.LASF33
 2621 025f 01       		.byte	0x1
 2622 0260 3908     		.2byte	0x839
 2623 0262 00000000 		.4byte	.LFB13
 2624 0266 0C000000 		.4byte	.LFE13-.LFB13
 2625 026a 01       		.uleb128 0x1
 2626 026b 9C       		.byte	0x9c
 2627 026c 11       		.uleb128 0x11
 2628 026d DB020000 		.4byte	.LASF35
 2629 0271 01       		.byte	0x1
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccBBFZQS.s 			page 106


 2630 0272 5508     		.2byte	0x855
 2631 0274 83000000 		.4byte	0x83
 2632 0278 00000000 		.4byte	.LFB14
 2633 027c 14000000 		.4byte	.LFE14-.LFB14
 2634 0280 01       		.uleb128 0x1
 2635 0281 9C       		.byte	0x9c
 2636 0282 A5020000 		.4byte	0x2a5
 2637 0286 0F       		.uleb128 0xf
 2638 0287 36060000 		.4byte	.LASF36
 2639 028b 01       		.byte	0x1
 2640 028c 5508     		.2byte	0x855
 2641 028e 83000000 		.4byte	0x83
 2642 0292 CD000000 		.4byte	.LLST7
 2643 0296 12       		.uleb128 0x12
 2644 0297 0A040000 		.4byte	.LASF37
 2645 029b 01       		.byte	0x1
 2646 029c 5708     		.2byte	0x857
 2647 029e 83000000 		.4byte	0x83
 2648 02a2 01       		.uleb128 0x1
 2649 02a3 50       		.byte	0x50
 2650 02a4 00       		.byte	0
 2651 02a5 11       		.uleb128 0x11
 2652 02a6 46000000 		.4byte	.LASF38
 2653 02aa 01       		.byte	0x1
 2654 02ab 7008     		.2byte	0x870
 2655 02ad 83000000 		.4byte	0x83
 2656 02b1 00000000 		.4byte	.LFB15
 2657 02b5 10000000 		.4byte	.LFE15-.LFB15
 2658 02b9 01       		.uleb128 0x1
 2659 02ba 9C       		.byte	0x9c
 2660 02bb CE020000 		.4byte	0x2ce
 2661 02bf 12       		.uleb128 0x12
 2662 02c0 16000000 		.4byte	.LASF39
 2663 02c4 01       		.byte	0x1
 2664 02c5 7208     		.2byte	0x872
 2665 02c7 83000000 		.4byte	0x83
 2666 02cb 01       		.uleb128 0x1
 2667 02cc 50       		.byte	0x50
 2668 02cd 00       		.byte	0
 2669 02ce 0E       		.uleb128 0xe
 2670 02cf 76000000 		.4byte	.LASF40
 2671 02d3 01       		.byte	0x1
 2672 02d4 8C08     		.2byte	0x88c
 2673 02d6 00000000 		.4byte	.LFB16
 2674 02da 0C000000 		.4byte	.LFE16-.LFB16
 2675 02de 01       		.uleb128 0x1
 2676 02df 9C       		.byte	0x9c
 2677 02e0 F3020000 		.4byte	0x2f3
 2678 02e4 13       		.uleb128 0x13
 2679 02e5 AE010000 		.4byte	.LASF41
 2680 02e9 01       		.byte	0x1
 2681 02ea 8C08     		.2byte	0x88c
 2682 02ec 83000000 		.4byte	0x83
 2683 02f0 01       		.uleb128 0x1
 2684 02f1 50       		.byte	0x50
 2685 02f2 00       		.byte	0
 2686 02f3 0E       		.uleb128 0xe
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccBBFZQS.s 			page 107


 2687 02f4 0E060000 		.4byte	.LASF42
 2688 02f8 01       		.byte	0x1
 2689 02f9 5B09     		.2byte	0x95b
 2690 02fb 00000000 		.4byte	.LFB23
 2691 02ff 14000000 		.4byte	.LFE23-.LFB23
 2692 0303 01       		.uleb128 0x1
 2693 0304 9C       		.byte	0x9c
 2694 0305 1A030000 		.4byte	0x31a
 2695 0309 0F       		.uleb128 0xf
 2696 030a A7010000 		.4byte	.LASF43
 2697 030e 01       		.byte	0x1
 2698 030f 5B09     		.2byte	0x95b
 2699 0311 6B000000 		.4byte	0x6b
 2700 0315 EB000000 		.4byte	.LLST8
 2701 0319 00       		.byte	0
 2702 031a 11       		.uleb128 0x11
 2703 031b BC000000 		.4byte	.LASF44
 2704 031f 01       		.byte	0x1
 2705 0320 6F09     		.2byte	0x96f
 2706 0322 6B000000 		.4byte	0x6b
 2707 0326 00000000 		.4byte	.LFB24
 2708 032a 18000000 		.4byte	.LFE24-.LFB24
 2709 032e 01       		.uleb128 0x1
 2710 032f 9C       		.byte	0x9c
 2711 0330 45030000 		.4byte	0x345
 2712 0334 0F       		.uleb128 0xf
 2713 0335 A7010000 		.4byte	.LASF43
 2714 0339 01       		.byte	0x1
 2715 033a 6F09     		.2byte	0x96f
 2716 033c 6B000000 		.4byte	0x6b
 2717 0340 0C010000 		.4byte	.LLST9
 2718 0344 00       		.byte	0
 2719 0345 0E       		.uleb128 0xe
 2720 0346 46010000 		.4byte	.LASF45
 2721 034a 01       		.byte	0x1
 2722 034b 8409     		.2byte	0x984
 2723 034d 00000000 		.4byte	.LFB25
 2724 0351 14000000 		.4byte	.LFE25-.LFB25
 2725 0355 01       		.uleb128 0x1
 2726 0356 9C       		.byte	0x9c
 2727 0357 6C030000 		.4byte	0x36c
 2728 035b 0F       		.uleb128 0xf
 2729 035c A7010000 		.4byte	.LASF43
 2730 0360 01       		.byte	0x1
 2731 0361 8409     		.2byte	0x984
 2732 0363 6B000000 		.4byte	0x6b
 2733 0367 2D010000 		.4byte	.LLST10
 2734 036b 00       		.byte	0
 2735 036c 0E       		.uleb128 0xe
 2736 036d B6020000 		.4byte	.LASF46
 2737 0371 01       		.byte	0x1
 2738 0372 9709     		.2byte	0x997
 2739 0374 00000000 		.4byte	.LFB26
 2740 0378 14000000 		.4byte	.LFE26-.LFB26
 2741 037c 01       		.uleb128 0x1
 2742 037d 9C       		.byte	0x9c
 2743 037e 93030000 		.4byte	0x393
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccBBFZQS.s 			page 108


 2744 0382 0F       		.uleb128 0xf
 2745 0383 A7010000 		.4byte	.LASF43
 2746 0387 01       		.byte	0x1
 2747 0388 9709     		.2byte	0x997
 2748 038a 6B000000 		.4byte	0x6b
 2749 038e 4E010000 		.4byte	.LLST11
 2750 0392 00       		.byte	0
 2751 0393 0E       		.uleb128 0xe
 2752 0394 5C040000 		.4byte	.LASF47
 2753 0398 01       		.byte	0x1
 2754 0399 AB09     		.2byte	0x9ab
 2755 039b 00000000 		.4byte	.LFB27
 2756 039f 14000000 		.4byte	.LFE27-.LFB27
 2757 03a3 01       		.uleb128 0x1
 2758 03a4 9C       		.byte	0x9c
 2759 03a5 BA030000 		.4byte	0x3ba
 2760 03a9 0F       		.uleb128 0xf
 2761 03aa A7010000 		.4byte	.LASF43
 2762 03ae 01       		.byte	0x1
 2763 03af AB09     		.2byte	0x9ab
 2764 03b1 6B000000 		.4byte	0x6b
 2765 03b5 6F010000 		.4byte	.LLST12
 2766 03b9 00       		.byte	0
 2767 03ba 0E       		.uleb128 0xe
 2768 03bb D2050000 		.4byte	.LASF48
 2769 03bf 01       		.byte	0x1
 2770 03c0 BF09     		.2byte	0x9bf
 2771 03c2 00000000 		.4byte	.LFB28
 2772 03c6 04000000 		.4byte	.LFE28-.LFB28
 2773 03ca 01       		.uleb128 0x1
 2774 03cb 9C       		.byte	0x9c
 2775 03cc DF030000 		.4byte	0x3df
 2776 03d0 13       		.uleb128 0x13
 2777 03d1 36060000 		.4byte	.LASF36
 2778 03d5 01       		.byte	0x1
 2779 03d6 BF09     		.2byte	0x9bf
 2780 03d8 6B000000 		.4byte	0x6b
 2781 03dc 01       		.uleb128 0x1
 2782 03dd 50       		.byte	0x50
 2783 03de 00       		.byte	0
 2784 03df 11       		.uleb128 0x11
 2785 03e0 8E030000 		.4byte	.LASF49
 2786 03e4 01       		.byte	0x1
 2787 03e5 A808     		.2byte	0x8a8
 2788 03e7 C6000000 		.4byte	0xc6
 2789 03eb 00000000 		.4byte	.LFB17
 2790 03ef 20000000 		.4byte	.LFE17-.LFB17
 2791 03f3 01       		.uleb128 0x1
 2792 03f4 9C       		.byte	0x9c
 2793 03f5 47040000 		.4byte	0x447
 2794 03f9 0F       		.uleb128 0xf
 2795 03fa A7010000 		.4byte	.LASF43
 2796 03fe 01       		.byte	0x1
 2797 03ff A808     		.2byte	0x8a8
 2798 0401 6B000000 		.4byte	0x6b
 2799 0405 90010000 		.4byte	.LLST13
 2800 0409 0F       		.uleb128 0xf
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccBBFZQS.s 			page 109


 2801 040a 6E040000 		.4byte	.LASF50
 2802 040e 01       		.byte	0x1
 2803 040f A808     		.2byte	0x8a8
 2804 0411 C6000000 		.4byte	0xc6
 2805 0415 B1010000 		.4byte	.LLST14
 2806 0419 12       		.uleb128 0x12
 2807 041a 38000000 		.4byte	.LASF51
 2808 041e 01       		.byte	0x1
 2809 041f AA08     		.2byte	0x8aa
 2810 0421 C6000000 		.4byte	0xc6
 2811 0425 01       		.uleb128 0x1
 2812 0426 50       		.byte	0x50
 2813 0427 14       		.uleb128 0x14
 2814 0428 00000000 		.4byte	.LASF52
 2815 042c 01       		.byte	0x1
 2816 042d AB08     		.2byte	0x8ab
 2817 042f 47040000 		.4byte	0x447
 2818 0433 00000020 		.4byte	0x20000000
 2819 0437 15       		.uleb128 0x15
 2820 0438 10000000 		.4byte	.LVL35
 2821 043c BA030000 		.4byte	0x3ba
 2822 0440 16       		.uleb128 0x16
 2823 0441 01       		.uleb128 0x1
 2824 0442 50       		.byte	0x50
 2825 0443 01       		.uleb128 0x1
 2826 0444 30       		.byte	0x30
 2827 0445 00       		.byte	0
 2828 0446 00       		.byte	0
 2829 0447 06       		.uleb128 0x6
 2830 0448 04       		.byte	0x4
 2831 0449 C6000000 		.4byte	0xc6
 2832 044d 11       		.uleb128 0x11
 2833 044e 1A060000 		.4byte	.LASF53
 2834 0452 01       		.byte	0x1
 2835 0453 CD08     		.2byte	0x8cd
 2836 0455 C6000000 		.4byte	0xc6
 2837 0459 00000000 		.4byte	.LFB18
 2838 045d 1C000000 		.4byte	.LFE18-.LFB18
 2839 0461 01       		.uleb128 0x1
 2840 0462 9C       		.byte	0x9c
 2841 0463 97040000 		.4byte	0x497
 2842 0467 0F       		.uleb128 0xf
 2843 0468 A7010000 		.4byte	.LASF43
 2844 046c 01       		.byte	0x1
 2845 046d CD08     		.2byte	0x8cd
 2846 046f 6B000000 		.4byte	0x6b
 2847 0473 DD010000 		.4byte	.LLST15
 2848 0477 14       		.uleb128 0x14
 2849 0478 00000000 		.4byte	.LASF52
 2850 047c 01       		.byte	0x1
 2851 047d CF08     		.2byte	0x8cf
 2852 047f 47040000 		.4byte	0x447
 2853 0483 00000020 		.4byte	0x20000000
 2854 0487 15       		.uleb128 0x15
 2855 0488 0E000000 		.4byte	.LVL41
 2856 048c BA030000 		.4byte	0x3ba
 2857 0490 16       		.uleb128 0x16
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccBBFZQS.s 			page 110


 2858 0491 01       		.uleb128 0x1
 2859 0492 50       		.byte	0x50
 2860 0493 01       		.uleb128 0x1
 2861 0494 30       		.byte	0x30
 2862 0495 00       		.byte	0
 2863 0496 00       		.byte	0
 2864 0497 11       		.uleb128 0x11
 2865 0498 21030000 		.4byte	.LASF54
 2866 049c 01       		.byte	0x1
 2867 049d E608     		.2byte	0x8e6
 2868 049f C6000000 		.4byte	0xc6
 2869 04a3 00000000 		.4byte	.LFB19
 2870 04a7 24000000 		.4byte	.LFE19-.LFB19
 2871 04ab 01       		.uleb128 0x1
 2872 04ac 9C       		.byte	0x9c
 2873 04ad FF040000 		.4byte	0x4ff
 2874 04b1 0F       		.uleb128 0xf
 2875 04b2 A7010000 		.4byte	.LASF43
 2876 04b6 01       		.byte	0x1
 2877 04b7 E608     		.2byte	0x8e6
 2878 04b9 6B000000 		.4byte	0x6b
 2879 04bd FE010000 		.4byte	.LLST16
 2880 04c1 0F       		.uleb128 0xf
 2881 04c2 6E040000 		.4byte	.LASF50
 2882 04c6 01       		.byte	0x1
 2883 04c7 E608     		.2byte	0x8e6
 2884 04c9 C6000000 		.4byte	0xc6
 2885 04cd 1F020000 		.4byte	.LLST17
 2886 04d1 12       		.uleb128 0x12
 2887 04d2 38000000 		.4byte	.LASF51
 2888 04d6 01       		.byte	0x1
 2889 04d7 E808     		.2byte	0x8e8
 2890 04d9 C6000000 		.4byte	0xc6
 2891 04dd 01       		.uleb128 0x1
 2892 04de 50       		.byte	0x50
 2893 04df 14       		.uleb128 0x14
 2894 04e0 00000000 		.4byte	.LASF52
 2895 04e4 01       		.byte	0x1
 2896 04e5 E908     		.2byte	0x8e9
 2897 04e7 47040000 		.4byte	0x447
 2898 04eb 00000020 		.4byte	0x20000000
 2899 04ef 15       		.uleb128 0x15
 2900 04f0 10000000 		.4byte	.LVL45
 2901 04f4 BA030000 		.4byte	0x3ba
 2902 04f8 16       		.uleb128 0x16
 2903 04f9 01       		.uleb128 0x1
 2904 04fa 50       		.byte	0x50
 2905 04fb 01       		.uleb128 0x1
 2906 04fc 30       		.byte	0x30
 2907 04fd 00       		.byte	0
 2908 04fe 00       		.byte	0
 2909 04ff 11       		.uleb128 0x11
 2910 0500 99050000 		.4byte	.LASF55
 2911 0504 01       		.byte	0x1
 2912 0505 0509     		.2byte	0x905
 2913 0507 C6000000 		.4byte	0xc6
 2914 050b 00000000 		.4byte	.LFB20
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccBBFZQS.s 			page 111


 2915 050f 20000000 		.4byte	.LFE20-.LFB20
 2916 0513 01       		.uleb128 0x1
 2917 0514 9C       		.byte	0x9c
 2918 0515 49050000 		.4byte	0x549
 2919 0519 0F       		.uleb128 0xf
 2920 051a A7010000 		.4byte	.LASF43
 2921 051e 01       		.byte	0x1
 2922 051f 0509     		.2byte	0x905
 2923 0521 6B000000 		.4byte	0x6b
 2924 0525 4B020000 		.4byte	.LLST18
 2925 0529 14       		.uleb128 0x14
 2926 052a 00000000 		.4byte	.LASF52
 2927 052e 01       		.byte	0x1
 2928 052f 0709     		.2byte	0x907
 2929 0531 47040000 		.4byte	0x447
 2930 0535 00000020 		.4byte	0x20000000
 2931 0539 15       		.uleb128 0x15
 2932 053a 0E000000 		.4byte	.LVL51
 2933 053e BA030000 		.4byte	0x3ba
 2934 0542 16       		.uleb128 0x16
 2935 0543 01       		.uleb128 0x1
 2936 0544 50       		.byte	0x50
 2937 0545 01       		.uleb128 0x1
 2938 0546 30       		.byte	0x30
 2939 0547 00       		.byte	0
 2940 0548 00       		.byte	0
 2941 0549 0E       		.uleb128 0xe
 2942 054a 4B050000 		.4byte	.LASF56
 2943 054e 01       		.byte	0x1
 2944 054f 1D09     		.2byte	0x91d
 2945 0551 00000000 		.4byte	.LFB21
 2946 0555 4C000000 		.4byte	.LFE21-.LFB21
 2947 0559 01       		.uleb128 0x1
 2948 055a 9C       		.byte	0x9c
 2949 055b E8050000 		.4byte	0x5e8
 2950 055f 0F       		.uleb128 0xf
 2951 0560 A7010000 		.4byte	.LASF43
 2952 0564 01       		.byte	0x1
 2953 0565 1D09     		.2byte	0x91d
 2954 0567 6B000000 		.4byte	0x6b
 2955 056b 6C020000 		.4byte	.LLST19
 2956 056f 0F       		.uleb128 0xf
 2957 0570 51030000 		.4byte	.LASF57
 2958 0574 01       		.byte	0x1
 2959 0575 1D09     		.2byte	0x91d
 2960 0577 6B000000 		.4byte	0x6b
 2961 057b 8D020000 		.4byte	.LLST20
 2962 057f 10       		.uleb128 0x10
 2963 0580 F5000000 		.4byte	.LASF24
 2964 0584 01       		.byte	0x1
 2965 0585 1F09     		.2byte	0x91f
 2966 0587 6B000000 		.4byte	0x6b
 2967 058b AE020000 		.4byte	.LLST21
 2968 058f 10       		.uleb128 0x10
 2969 0590 83010000 		.4byte	.LASF58
 2970 0594 01       		.byte	0x1
 2971 0595 2009     		.2byte	0x920
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccBBFZQS.s 			page 112


 2972 0597 83000000 		.4byte	0x83
 2973 059b C1020000 		.4byte	.LLST22
 2974 059f 10       		.uleb128 0x10
 2975 05a0 10020000 		.4byte	.LASF59
 2976 05a4 01       		.byte	0x1
 2977 05a5 2109     		.2byte	0x921
 2978 05a7 83000000 		.4byte	0x83
 2979 05ab D4020000 		.4byte	.LLST23
 2980 05af 17       		.uleb128 0x17
 2981 05b0 10000000 		.4byte	.LVL54
 2982 05b4 BA030000 		.4byte	0x3ba
 2983 05b8 C2050000 		.4byte	0x5c2
 2984 05bc 16       		.uleb128 0x16
 2985 05bd 01       		.uleb128 0x1
 2986 05be 50       		.byte	0x50
 2987 05bf 01       		.uleb128 0x1
 2988 05c0 30       		.byte	0x30
 2989 05c1 00       		.byte	0
 2990 05c2 17       		.uleb128 0x17
 2991 05c3 1A000000 		.4byte	.LVL55
 2992 05c7 BA030000 		.4byte	0x3ba
 2993 05cb D5050000 		.4byte	0x5d5
 2994 05cf 16       		.uleb128 0x16
 2995 05d0 01       		.uleb128 0x1
 2996 05d1 50       		.byte	0x50
 2997 05d2 01       		.uleb128 0x1
 2998 05d3 30       		.byte	0x30
 2999 05d4 00       		.byte	0
 3000 05d5 0C       		.uleb128 0xc
 3001 05d6 26000000 		.4byte	.LVL57
 3002 05da AE0C0000 		.4byte	0xcae
 3003 05de 0C       		.uleb128 0xc
 3004 05df 44000000 		.4byte	.LVL62
 3005 05e3 B90C0000 		.4byte	0xcb9
 3006 05e7 00       		.byte	0
 3007 05e8 11       		.uleb128 0x11
 3008 05e9 E4010000 		.4byte	.LASF60
 3009 05ed 01       		.byte	0x1
 3010 05ee 4109     		.2byte	0x941
 3011 05f0 6B000000 		.4byte	0x6b
 3012 05f4 00000000 		.4byte	.LFB22
 3013 05f8 2C000000 		.4byte	.LFE22-.LFB22
 3014 05fc 01       		.uleb128 0x1
 3015 05fd 9C       		.byte	0x9c
 3016 05fe 32060000 		.4byte	0x632
 3017 0602 0F       		.uleb128 0xf
 3018 0603 A7010000 		.4byte	.LASF43
 3019 0607 01       		.byte	0x1
 3020 0608 4109     		.2byte	0x941
 3021 060a 6B000000 		.4byte	0x6b
 3022 060e F2020000 		.4byte	.LLST24
 3023 0612 10       		.uleb128 0x10
 3024 0613 51030000 		.4byte	.LASF57
 3025 0617 01       		.byte	0x1
 3026 0618 4309     		.2byte	0x943
 3027 061a 6B000000 		.4byte	0x6b
 3028 061e 13030000 		.4byte	.LLST25
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccBBFZQS.s 			page 113


 3029 0622 15       		.uleb128 0x15
 3030 0623 0E000000 		.4byte	.LVL66
 3031 0627 BA030000 		.4byte	0x3ba
 3032 062b 16       		.uleb128 0x16
 3033 062c 01       		.uleb128 0x1
 3034 062d 50       		.byte	0x50
 3035 062e 01       		.uleb128 0x1
 3036 062f 30       		.byte	0x30
 3037 0630 00       		.byte	0
 3038 0631 00       		.byte	0
 3039 0632 0A       		.uleb128 0xa
 3040 0633 93000000 		.4byte	.LASF61
 3041 0637 01       		.byte	0x1
 3042 0638 DE09     		.2byte	0x9de
 3043 063a 00000000 		.4byte	.LFB29
 3044 063e 18000000 		.4byte	.LFE29-.LFB29
 3045 0642 01       		.uleb128 0x1
 3046 0643 9C       		.byte	0x9c
 3047 0644 0E       		.uleb128 0xe
 3048 0645 CB060000 		.4byte	.LASF62
 3049 0649 01       		.byte	0x1
 3050 064a F709     		.2byte	0x9f7
 3051 064c 00000000 		.4byte	.LFB30
 3052 0650 30000000 		.4byte	.LFE30-.LFB30
 3053 0654 01       		.uleb128 0x1
 3054 0655 9C       		.byte	0x9c
 3055 0656 7D060000 		.4byte	0x67d
 3056 065a 0F       		.uleb128 0xf
 3057 065b A8050000 		.4byte	.LASF63
 3058 065f 01       		.byte	0x1
 3059 0660 F709     		.2byte	0x9f7
 3060 0662 83000000 		.4byte	0x83
 3061 0666 26030000 		.4byte	.LLST26
 3062 066a 0C       		.uleb128 0xc
 3063 066b 0E000000 		.4byte	.LVL71
 3064 066f CA0C0000 		.4byte	0xcca
 3065 0673 0C       		.uleb128 0xc
 3066 0674 26000000 		.4byte	.LVL73
 3067 0678 CA0C0000 		.4byte	0xcca
 3068 067c 00       		.byte	0
 3069 067d 0B       		.uleb128 0xb
 3070 067e CB010000 		.4byte	.LASF64
 3071 0682 01       		.byte	0x1
 3072 0683 BF       		.byte	0xbf
 3073 0684 00000000 		.4byte	.LFB3
 3074 0688 E8000000 		.4byte	.LFE3-.LFB3
 3075 068c 01       		.uleb128 0x1
 3076 068d 9C       		.byte	0x9c
 3077 068e 33070000 		.4byte	0x733
 3078 0692 18       		.uleb128 0x18
 3079 0693 6900     		.ascii	"i\000"
 3080 0695 01       		.byte	0x1
 3081 0696 C1       		.byte	0xc1
 3082 0697 83000000 		.4byte	0x83
 3083 069b 44030000 		.4byte	.LLST27
 3084 069f 19       		.uleb128 0x19
 3085 06a0 E4000000 		.4byte	.LASF65
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccBBFZQS.s 			page 114


 3086 06a4 01       		.byte	0x1
 3087 06a5 C2       		.byte	0xc2
 3088 06a6 83000000 		.4byte	0x83
 3089 06aa 7B030000 		.4byte	.LLST28
 3090 06ae 19       		.uleb128 0x19
 3091 06af F5000000 		.4byte	.LASF24
 3092 06b3 01       		.byte	0x1
 3093 06b4 C3       		.byte	0xc3
 3094 06b5 6B000000 		.4byte	0x6b
 3095 06b9 B1030000 		.4byte	.LLST29
 3096 06bd 19       		.uleb128 0x19
 3097 06be 02030000 		.4byte	.LASF66
 3098 06c2 01       		.byte	0x1
 3099 06c3 C4       		.byte	0xc4
 3100 06c4 83000000 		.4byte	0x83
 3101 06c8 C4030000 		.4byte	.LLST30
 3102 06cc 19       		.uleb128 0x19
 3103 06cd 04010000 		.4byte	.LASF67
 3104 06d1 01       		.byte	0x1
 3105 06d2 C5       		.byte	0xc5
 3106 06d3 83000000 		.4byte	0x83
 3107 06d7 1F040000 		.4byte	.LLST31
 3108 06db 1A       		.uleb128 0x1a
 3109 06dc BF060000 		.4byte	.LASF68
 3110 06e0 01       		.byte	0x1
 3111 06e1 C6       		.byte	0xc6
 3112 06e2 C1000000 		.4byte	0xc1
 3113 06e6 02       		.uleb128 0x2
 3114 06e7 91       		.byte	0x91
 3115 06e8 6C       		.sleb128 -20
 3116 06e9 0C       		.uleb128 0xc
 3117 06ea 08000000 		.4byte	.LVL76
 3118 06ee DB0C0000 		.4byte	0xcdb
 3119 06f2 0C       		.uleb128 0xc
 3120 06f3 10000000 		.4byte	.LVL77
 3121 06f7 AE0C0000 		.4byte	0xcae
 3122 06fb 17       		.uleb128 0x17
 3123 06fc 9E000000 		.4byte	.LVL96
 3124 0700 E60C0000 		.4byte	0xce6
 3125 0704 0F070000 		.4byte	0x70f
 3126 0708 16       		.uleb128 0x16
 3127 0709 01       		.uleb128 0x1
 3128 070a 50       		.byte	0x50
 3129 070b 02       		.uleb128 0x2
 3130 070c 08       		.byte	0x8
 3131 070d 30       		.byte	0x30
 3132 070e 00       		.byte	0
 3133 070f 17       		.uleb128 0x17
 3134 0710 B0000000 		.4byte	.LVL97
 3135 0714 44060000 		.4byte	0x644
 3136 0718 22070000 		.4byte	0x722
 3137 071c 16       		.uleb128 0x16
 3138 071d 01       		.uleb128 0x1
 3139 071e 50       		.byte	0x50
 3140 071f 01       		.uleb128 0x1
 3141 0720 44       		.byte	0x44
 3142 0721 00       		.byte	0
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccBBFZQS.s 			page 115


 3143 0722 15       		.uleb128 0x15
 3144 0723 BA000000 		.4byte	.LVL98
 3145 0727 B90C0000 		.4byte	0xcb9
 3146 072b 16       		.uleb128 0x16
 3147 072c 01       		.uleb128 0x1
 3148 072d 50       		.byte	0x50
 3149 072e 02       		.uleb128 0x2
 3150 072f 74       		.byte	0x74
 3151 0730 00       		.sleb128 0
 3152 0731 00       		.byte	0
 3153 0732 00       		.byte	0
 3154 0733 0E       		.uleb128 0xe
 3155 0734 5A030000 		.4byte	.LASF69
 3156 0738 01       		.byte	0x1
 3157 0739 6E02     		.2byte	0x26e
 3158 073b 00000000 		.4byte	.LFB9
 3159 073f 80000000 		.4byte	.LFE9-.LFB9
 3160 0743 01       		.uleb128 0x1
 3161 0744 9C       		.byte	0x9c
 3162 0745 CC070000 		.4byte	0x7cc
 3163 0749 0F       		.uleb128 0xf
 3164 074a E4000000 		.4byte	.LASF65
 3165 074e 01       		.byte	0x1
 3166 074f 6E02     		.2byte	0x26e
 3167 0751 83000000 		.4byte	0x83
 3168 0755 4E040000 		.4byte	.LLST32
 3169 0759 12       		.uleb128 0x12
 3170 075a 6B000000 		.4byte	.LASF70
 3171 075e 01       		.byte	0x1
 3172 075f 7102     		.2byte	0x271
 3173 0761 DC070000 		.4byte	0x7dc
 3174 0765 02       		.uleb128 0x2
 3175 0766 91       		.byte	0x91
 3176 0767 68       		.sleb128 -24
 3177 0768 12       		.uleb128 0x12
 3178 0769 53010000 		.4byte	.LASF71
 3179 076d 01       		.byte	0x1
 3180 076e 7202     		.2byte	0x272
 3181 0770 F1070000 		.4byte	0x7f1
 3182 0774 02       		.uleb128 0x2
 3183 0775 91       		.byte	0x91
 3184 0776 58       		.sleb128 -40
 3185 0777 10       		.uleb128 0x10
 3186 0778 35010000 		.4byte	.LASF72
 3187 077c 01       		.byte	0x1
 3188 077d 7C02     		.2byte	0x27c
 3189 077f 83000000 		.4byte	0x83
 3190 0783 87040000 		.4byte	.LLST33
 3191 0787 10       		.uleb128 0x10
 3192 0788 F5000000 		.4byte	.LASF24
 3193 078c 01       		.byte	0x1
 3194 078d 8302     		.2byte	0x283
 3195 078f 6B000000 		.4byte	0x6b
 3196 0793 BE040000 		.4byte	.LLST34
 3197 0797 0C       		.uleb128 0xc
 3198 0798 0A000000 		.4byte	.LVL101
 3199 079c AE0C0000 		.4byte	0xcae
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccBBFZQS.s 			page 116


 3200 07a0 0C       		.uleb128 0xc
 3201 07a1 10000000 		.4byte	.LVL103
 3202 07a5 2D010000 		.4byte	0x12d
 3203 07a9 0C       		.uleb128 0xc
 3204 07aa 18000000 		.4byte	.LVL105
 3205 07ae FC000000 		.4byte	0xfc
 3206 07b2 0C       		.uleb128 0xc
 3207 07b3 56000000 		.4byte	.LVL109
 3208 07b7 7D060000 		.4byte	0x67d
 3209 07bb 15       		.uleb128 0x15
 3210 07bc 5C000000 		.4byte	.LVL110
 3211 07c0 B90C0000 		.4byte	0xcb9
 3212 07c4 16       		.uleb128 0x16
 3213 07c5 01       		.uleb128 0x1
 3214 07c6 50       		.byte	0x50
 3215 07c7 02       		.uleb128 0x2
 3216 07c8 75       		.byte	0x75
 3217 07c9 00       		.sleb128 0
 3218 07ca 00       		.byte	0
 3219 07cb 00       		.byte	0
 3220 07cc 1B       		.uleb128 0x1b
 3221 07cd 83000000 		.4byte	0x83
 3222 07d1 DC070000 		.4byte	0x7dc
 3223 07d5 1C       		.uleb128 0x1c
 3224 07d6 D9000000 		.4byte	0xd9
 3225 07da 01       		.byte	0x1
 3226 07db 00       		.byte	0
 3227 07dc 05       		.uleb128 0x5
 3228 07dd CC070000 		.4byte	0x7cc
 3229 07e1 1B       		.uleb128 0x1b
 3230 07e2 83000000 		.4byte	0x83
 3231 07e6 F1070000 		.4byte	0x7f1
 3232 07ea 1C       		.uleb128 0x1c
 3233 07eb D9000000 		.4byte	0xd9
 3234 07ef 03       		.byte	0x3
 3235 07f0 00       		.byte	0
 3236 07f1 05       		.uleb128 0x5
 3237 07f2 E1070000 		.4byte	0x7e1
 3238 07f6 0E       		.uleb128 0xe
 3239 07f7 72010000 		.4byte	.LASF73
 3240 07fb 01       		.byte	0x1
 3241 07fc 130A     		.2byte	0xa13
 3242 07fe 00000000 		.4byte	.LFB31
 3243 0802 14000000 		.4byte	.LFE31-.LFB31
 3244 0806 01       		.uleb128 0x1
 3245 0807 9C       		.byte	0x9c
 3246 0808 26080000 		.4byte	0x826
 3247 080c 0F       		.uleb128 0xf
 3248 080d 7C070000 		.4byte	.LASF74
 3249 0811 01       		.byte	0x1
 3250 0812 130A     		.2byte	0xa13
 3251 0814 77000000 		.4byte	0x77
 3252 0818 D1040000 		.4byte	.LLST35
 3253 081c 0C       		.uleb128 0xc
 3254 081d 0C000000 		.4byte	.LVL115
 3255 0821 CA0C0000 		.4byte	0xcca
 3256 0825 00       		.byte	0
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccBBFZQS.s 			page 117


 3257 0826 0E       		.uleb128 0xe
 3258 0827 78050000 		.4byte	.LASF75
 3259 082b 01       		.byte	0x1
 3260 082c EA07     		.2byte	0x7ea
 3261 082e 00000000 		.4byte	.LFB10
 3262 0832 44000000 		.4byte	.LFE10-.LFB10
 3263 0836 01       		.uleb128 0x1
 3264 0837 9C       		.byte	0x9c
 3265 0838 6B080000 		.4byte	0x86b
 3266 083c 0F       		.uleb128 0xf
 3267 083d C8050000 		.4byte	.LASF76
 3268 0841 01       		.byte	0x1
 3269 0842 EA07     		.2byte	0x7ea
 3270 0844 83000000 		.4byte	0x83
 3271 0848 F2040000 		.4byte	.LLST36
 3272 084c 17       		.uleb128 0x17
 3273 084d 2E000000 		.4byte	.LVL119
 3274 0851 F6070000 		.4byte	0x7f6
 3275 0855 61080000 		.4byte	0x861
 3276 0859 16       		.uleb128 0x16
 3277 085a 01       		.uleb128 0x1
 3278 085b 50       		.byte	0x50
 3279 085c 03       		.uleb128 0x3
 3280 085d 0A       		.byte	0xa
 3281 085e E803     		.2byte	0x3e8
 3282 0860 00       		.byte	0
 3283 0861 0C       		.uleb128 0xc
 3284 0862 32000000 		.4byte	.LVL120
 3285 0866 5A020000 		.4byte	0x25a
 3286 086a 00       		.byte	0
 3287 086b 1D       		.uleb128 0x1d
 3288 086c E9000000 		.4byte	.LASF77
 3289 0870 01       		.byte	0x1
 3290 0871 260A     		.2byte	0xa26
 3291 0873 00000000 		.4byte	.LFB32
 3292 0877 4C000000 		.4byte	.LFE32-.LFB32
 3293 087b 01       		.uleb128 0x1
 3294 087c 9C       		.byte	0x9c
 3295 087d 92080000 		.4byte	0x892
 3296 0881 0F       		.uleb128 0xf
 3297 0882 E4000000 		.4byte	.LASF65
 3298 0886 01       		.byte	0x1
 3299 0887 260A     		.2byte	0xa26
 3300 0889 83000000 		.4byte	0x83
 3301 088d 1E050000 		.4byte	.LLST37
 3302 0891 00       		.byte	0
 3303 0892 0A       		.uleb128 0xa
 3304 0893 3D070000 		.4byte	.LASF78
 3305 0897 01       		.byte	0x1
 3306 0898 AB0A     		.2byte	0xaab
 3307 089a 00000000 		.4byte	.LFB36
 3308 089e 10000000 		.4byte	.LFE36-.LFB36
 3309 08a2 01       		.uleb128 0x1
 3310 08a3 9C       		.byte	0x9c
 3311 08a4 0A       		.uleb128 0xa
 3312 08a5 A3000000 		.4byte	.LASF79
 3313 08a9 01       		.byte	0x1
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccBBFZQS.s 			page 118


 3314 08aa C20A     		.2byte	0xac2
 3315 08ac 00000000 		.4byte	.LFB37
 3316 08b0 10000000 		.4byte	.LFE37-.LFB37
 3317 08b4 01       		.uleb128 0x1
 3318 08b5 9C       		.byte	0x9c
 3319 08b6 0E       		.uleb128 0xe
 3320 08b7 67060000 		.4byte	.LASF80
 3321 08bb 01       		.byte	0x1
 3322 08bc 930A     		.2byte	0xa93
 3323 08be 00000000 		.4byte	.LFB35
 3324 08c2 18000000 		.4byte	.LFE35-.LFB35
 3325 08c6 01       		.uleb128 0x1
 3326 08c7 9C       		.byte	0x9c
 3327 08c8 D6080000 		.4byte	0x8d6
 3328 08cc 0C       		.uleb128 0xc
 3329 08cd 06000000 		.4byte	.LVL125
 3330 08d1 A4080000 		.4byte	0x8a4
 3331 08d5 00       		.byte	0
 3332 08d6 0A       		.uleb128 0xa
 3333 08d7 D3060000 		.4byte	.LASF81
 3334 08db 01       		.byte	0x1
 3335 08dc D90A     		.2byte	0xad9
 3336 08de 00000000 		.4byte	.LFB38
 3337 08e2 10000000 		.4byte	.LFE38-.LFB38
 3338 08e6 01       		.uleb128 0x1
 3339 08e7 9C       		.byte	0x9c
 3340 08e8 0E       		.uleb128 0xe
 3341 08e9 90070000 		.4byte	.LASF82
 3342 08ed 01       		.byte	0x1
 3343 08ee EF0A     		.2byte	0xaef
 3344 08f0 00000000 		.4byte	.LFB39
 3345 08f4 10000000 		.4byte	.LFE39-.LFB39
 3346 08f8 01       		.uleb128 0x1
 3347 08f9 9C       		.byte	0x9c
 3348 08fa 0F090000 		.4byte	0x90f
 3349 08fe 0F       		.uleb128 0xf
 3350 08ff 10020000 		.4byte	.LASF59
 3351 0903 01       		.byte	0x1
 3352 0904 EF0A     		.2byte	0xaef
 3353 0906 83000000 		.4byte	0x83
 3354 090a 3F050000 		.4byte	.LLST38
 3355 090e 00       		.byte	0
 3356 090f 0D       		.uleb128 0xd
 3357 0910 0C010000 		.4byte	.LASF83
 3358 0914 01       		.byte	0x1
 3359 0915 030B     		.2byte	0xb03
 3360 0917 83000000 		.4byte	0x83
 3361 091b 00000000 		.4byte	.LFB40
 3362 091f 10000000 		.4byte	.LFE40-.LFB40
 3363 0923 01       		.uleb128 0x1
 3364 0924 9C       		.byte	0x9c
 3365 0925 0D       		.uleb128 0xd
 3366 0926 9D040000 		.4byte	.LASF84
 3367 092a 01       		.byte	0x1
 3368 092b 170B     		.2byte	0xb17
 3369 092d 83000000 		.4byte	0x83
 3370 0931 00000000 		.4byte	.LFB41
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccBBFZQS.s 			page 119


 3371 0935 10000000 		.4byte	.LFE41-.LFB41
 3372 0939 01       		.uleb128 0x1
 3373 093a 9C       		.byte	0x9c
 3374 093b 0E       		.uleb128 0xe
 3375 093c 09030000 		.4byte	.LASF85
 3376 0940 01       		.byte	0x1
 3377 0941 390B     		.2byte	0xb39
 3378 0943 00000000 		.4byte	.LFB42
 3379 0947 20000000 		.4byte	.LFE42-.LFB42
 3380 094b 01       		.uleb128 0x1
 3381 094c 9C       		.byte	0x9c
 3382 094d 60090000 		.4byte	0x960
 3383 0951 13       		.uleb128 0x13
 3384 0952 16020000 		.4byte	.LASF86
 3385 0956 01       		.byte	0x1
 3386 0957 390B     		.2byte	0xb39
 3387 0959 83000000 		.4byte	0x83
 3388 095d 01       		.uleb128 0x1
 3389 095e 50       		.byte	0x50
 3390 095f 00       		.byte	0
 3391 0960 0D       		.uleb128 0xd
 3392 0961 30020000 		.4byte	.LASF87
 3393 0965 01       		.byte	0x1
 3394 0966 5A0B     		.2byte	0xb5a
 3395 0968 83000000 		.4byte	0x83
 3396 096c 00000000 		.4byte	.LFB43
 3397 0970 10000000 		.4byte	.LFE43-.LFB43
 3398 0974 01       		.uleb128 0x1
 3399 0975 9C       		.byte	0x9c
 3400 0976 1E       		.uleb128 0x1e
 3401 0977 A3070000 		.4byte	.LASF118
 3402 097b 01       		.byte	0x1
 3403 097c C10B     		.2byte	0xbc1
 3404 097e 00000000 		.4byte	.LFB47
 3405 0982 28000000 		.4byte	.LFE47-.LFB47
 3406 0986 01       		.uleb128 0x1
 3407 0987 9C       		.byte	0x9c
 3408 0988 A4090000 		.4byte	0x9a4
 3409 098c 1F       		.uleb128 0x1f
 3410 098d 6900     		.ascii	"i\000"
 3411 098f 01       		.byte	0x1
 3412 0990 C30B     		.2byte	0xbc3
 3413 0992 83000000 		.4byte	0x83
 3414 0996 60050000 		.4byte	.LLST39
 3415 099a 0C       		.uleb128 0xc
 3416 099b 06000000 		.4byte	.LVL129
 3417 099f 60090000 		.4byte	0x960
 3418 09a3 00       		.byte	0
 3419 09a4 0A       		.uleb128 0xa
 3420 09a5 53020000 		.4byte	.LASF88
 3421 09a9 01       		.byte	0x1
 3422 09aa 6E0B     		.2byte	0xb6e
 3423 09ac 00000000 		.4byte	.LFB44
 3424 09b0 0C000000 		.4byte	.LFE44-.LFB44
 3425 09b4 01       		.uleb128 0x1
 3426 09b5 9C       		.byte	0x9c
 3427 09b6 1D       		.uleb128 0x1d
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccBBFZQS.s 			page 120


 3428 09b7 02020000 		.4byte	.LASF89
 3429 09bb 01       		.byte	0x1
 3430 09bc 6D0A     		.2byte	0xa6d
 3431 09be 00000000 		.4byte	.LFB34
 3432 09c2 4C000000 		.4byte	.LFE34-.LFB34
 3433 09c6 01       		.uleb128 0x1
 3434 09c7 9C       		.byte	0x9c
 3435 09c8 2B0A0000 		.4byte	0xa2b
 3436 09cc 1F       		.uleb128 0x1f
 3437 09cd 6900     		.ascii	"i\000"
 3438 09cf 01       		.byte	0x1
 3439 09d0 6F0A     		.2byte	0xa6f
 3440 09d2 83000000 		.4byte	0x83
 3441 09d6 7E050000 		.4byte	.LLST40
 3442 09da 17       		.uleb128 0x17
 3443 09db 1C000000 		.4byte	.LVL139
 3444 09df DF030000 		.4byte	0x3df
 3445 09e3 F6090000 		.4byte	0x9f6
 3446 09e7 16       		.uleb128 0x16
 3447 09e8 01       		.uleb128 0x1
 3448 09e9 51       		.byte	0x51
 3449 09ea 05       		.uleb128 0x5
 3450 09eb 03       		.byte	0x3
 3451 09ec 00000000 		.4byte	CySysTickServiceCallbacks
 3452 09f0 16       		.uleb128 0x16
 3453 09f1 01       		.uleb128 0x1
 3454 09f2 50       		.byte	0x50
 3455 09f3 01       		.uleb128 0x1
 3456 09f4 3F       		.byte	0x3f
 3457 09f5 00       		.byte	0
 3458 09f6 17       		.uleb128 0x17
 3459 09f7 22000000 		.4byte	.LVL140
 3460 09fb 3B090000 		.4byte	0x93b
 3461 09ff 090A0000 		.4byte	0xa09
 3462 0a03 16       		.uleb128 0x16
 3463 0a04 01       		.uleb128 0x1
 3464 0a05 50       		.byte	0x50
 3465 0a06 01       		.uleb128 0x1
 3466 0a07 31       		.byte	0x31
 3467 0a08 00       		.byte	0
 3468 0a09 0C       		.uleb128 0xc
 3469 0a0a 32000000 		.4byte	.LVL142
 3470 0a0e E8080000 		.4byte	0x8e8
 3471 0a12 0C       		.uleb128 0xc
 3472 0a13 36000000 		.4byte	.LVL143
 3473 0a17 A4090000 		.4byte	0x9a4
 3474 0a1b 15       		.uleb128 0x15
 3475 0a1c 3C000000 		.4byte	.LVL144
 3476 0a20 F3020000 		.4byte	0x2f3
 3477 0a24 16       		.uleb128 0x16
 3478 0a25 01       		.uleb128 0x1
 3479 0a26 50       		.byte	0x50
 3480 0a27 01       		.uleb128 0x1
 3481 0a28 3F       		.byte	0x3f
 3482 0a29 00       		.byte	0
 3483 0a2a 00       		.byte	0
 3484 0a2b 0E       		.uleb128 0xe
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccBBFZQS.s 			page 121


 3485 0a2c FB030000 		.4byte	.LASF90
 3486 0a30 01       		.byte	0x1
 3487 0a31 490A     		.2byte	0xa49
 3488 0a33 00000000 		.4byte	.LFB33
 3489 0a37 20000000 		.4byte	.LFE33-.LFB33
 3490 0a3b 01       		.uleb128 0x1
 3491 0a3c 9C       		.byte	0x9c
 3492 0a3d 540A0000 		.4byte	0xa54
 3493 0a41 0C       		.uleb128 0xc
 3494 0a42 0E000000 		.4byte	.LVL145
 3495 0a46 B6090000 		.4byte	0x9b6
 3496 0a4a 0C       		.uleb128 0xc
 3497 0a4b 18000000 		.4byte	.LVL146
 3498 0a4f B6080000 		.4byte	0x8b6
 3499 0a53 00       		.byte	0
 3500 0a54 11       		.uleb128 0x11
 3501 0a55 8E060000 		.4byte	.LASF91
 3502 0a59 01       		.byte	0x1
 3503 0a5a 930B     		.2byte	0xb93
 3504 0a5c E0000000 		.4byte	0xe0
 3505 0a60 00000000 		.4byte	.LFB45
 3506 0a64 10000000 		.4byte	.LFE45-.LFB45
 3507 0a68 01       		.uleb128 0x1
 3508 0a69 9C       		.byte	0x9c
 3509 0a6a 9B0A0000 		.4byte	0xa9b
 3510 0a6e 0F       		.uleb128 0xf
 3511 0a6f A7010000 		.4byte	.LASF43
 3512 0a73 01       		.byte	0x1
 3513 0a74 930B     		.2byte	0xb93
 3514 0a76 83000000 		.4byte	0x83
 3515 0a7a 9D050000 		.4byte	.LLST41
 3516 0a7e 13       		.uleb128 0x13
 3517 0a7f 83040000 		.4byte	.LASF92
 3518 0a83 01       		.byte	0x1
 3519 0a84 930B     		.2byte	0xb93
 3520 0a86 E0000000 		.4byte	0xe0
 3521 0a8a 01       		.uleb128 0x1
 3522 0a8b 51       		.byte	0x51
 3523 0a8c 12       		.uleb128 0x12
 3524 0a8d 3F000000 		.4byte	.LASF93
 3525 0a91 01       		.byte	0x1
 3526 0a92 950B     		.2byte	0xb95
 3527 0a94 E0000000 		.4byte	0xe0
 3528 0a98 01       		.uleb128 0x1
 3529 0a99 50       		.byte	0x50
 3530 0a9a 00       		.byte	0
 3531 0a9b 11       		.uleb128 0x11
 3532 0a9c C6020000 		.4byte	.LASF94
 3533 0aa0 01       		.byte	0x1
 3534 0aa1 AD0B     		.2byte	0xbad
 3535 0aa3 E0000000 		.4byte	0xe0
 3536 0aa7 00000000 		.4byte	.LFB46
 3537 0aab 0C000000 		.4byte	.LFE46-.LFB46
 3538 0aaf 01       		.uleb128 0x1
 3539 0ab0 9C       		.byte	0x9c
 3540 0ab1 C60A0000 		.4byte	0xac6
 3541 0ab5 0F       		.uleb128 0xf
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccBBFZQS.s 			page 122


 3542 0ab6 A7010000 		.4byte	.LASF43
 3543 0aba 01       		.byte	0x1
 3544 0abb AD0B     		.2byte	0xbad
 3545 0abd 83000000 		.4byte	0x83
 3546 0ac1 BE050000 		.4byte	.LLST42
 3547 0ac5 00       		.byte	0
 3548 0ac6 0E       		.uleb128 0xe
 3549 0ac7 22020000 		.4byte	.LASF95
 3550 0acb 01       		.byte	0x1
 3551 0acc E60B     		.2byte	0xbe6
 3552 0ace 00000000 		.4byte	.LFB48
 3553 0ad2 70000000 		.4byte	.LFE48-.LFB48
 3554 0ad6 01       		.uleb128 0x1
 3555 0ad7 9C       		.byte	0x9c
 3556 0ad8 EB0A0000 		.4byte	0xaeb
 3557 0adc 13       		.uleb128 0x13
 3558 0add B6060000 		.4byte	.LASF96
 3559 0ae1 01       		.byte	0x1
 3560 0ae2 E60B     		.2byte	0xbe6
 3561 0ae4 EB0A0000 		.4byte	0xaeb
 3562 0ae8 01       		.uleb128 0x1
 3563 0ae9 50       		.byte	0x50
 3564 0aea 00       		.byte	0
 3565 0aeb 06       		.uleb128 0x6
 3566 0aec 04       		.byte	0x4
 3567 0aed 83000000 		.4byte	0x83
 3568 0af1 0E       		.uleb128 0xe
 3569 0af2 D9050000 		.4byte	.LASF97
 3570 0af6 01       		.byte	0x1
 3571 0af7 140C     		.2byte	0xc14
 3572 0af9 00000000 		.4byte	.LFB49
 3573 0afd 20000000 		.4byte	.LFE49-.LFB49
 3574 0b01 01       		.uleb128 0x1
 3575 0b02 9C       		.byte	0x9c
 3576 0b03 280B0000 		.4byte	0xb28
 3577 0b07 0F       		.uleb128 0xf
 3578 0b08 17040000 		.4byte	.LASF98
 3579 0b0c 01       		.byte	0x1
 3580 0b0d 140C     		.2byte	0xc14
 3581 0b0f 83000000 		.4byte	0x83
 3582 0b13 DF050000 		.4byte	.LLST43
 3583 0b17 10       		.uleb128 0x10
 3584 0b18 02030000 		.4byte	.LASF66
 3585 0b1c 01       		.byte	0x1
 3586 0b1d 160C     		.2byte	0xc16
 3587 0b1f 83000000 		.4byte	0x83
 3588 0b23 00060000 		.4byte	.LLST44
 3589 0b27 00       		.byte	0
 3590 0b28 0E       		.uleb128 0xe
 3591 0b29 6F030000 		.4byte	.LASF99
 3592 0b2d 01       		.byte	0x1
 3593 0b2e 310C     		.2byte	0xc31
 3594 0b30 00000000 		.4byte	.LFB50
 3595 0b34 20000000 		.4byte	.LFE50-.LFB50
 3596 0b38 01       		.uleb128 0x1
 3597 0b39 9C       		.byte	0x9c
 3598 0b3a 5F0B0000 		.4byte	0xb5f
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccBBFZQS.s 			page 123


 3599 0b3e 0F       		.uleb128 0xf
 3600 0b3f 17040000 		.4byte	.LASF98
 3601 0b43 01       		.byte	0x1
 3602 0b44 310C     		.2byte	0xc31
 3603 0b46 83000000 		.4byte	0x83
 3604 0b4a 1E060000 		.4byte	.LLST45
 3605 0b4e 10       		.uleb128 0x10
 3606 0b4f 02030000 		.4byte	.LASF66
 3607 0b53 01       		.byte	0x1
 3608 0b54 330C     		.2byte	0xc33
 3609 0b56 83000000 		.4byte	0x83
 3610 0b5a 3F060000 		.4byte	.LLST46
 3611 0b5e 00       		.byte	0
 3612 0b5f 0E       		.uleb128 0xe
 3613 0b60 1F070000 		.4byte	.LASF100
 3614 0b64 01       		.byte	0x1
 3615 0b65 4E0C     		.2byte	0xc4e
 3616 0b67 00000000 		.4byte	.LFB51
 3617 0b6b 20000000 		.4byte	.LFE51-.LFB51
 3618 0b6f 01       		.uleb128 0x1
 3619 0b70 9C       		.byte	0x9c
 3620 0b71 960B0000 		.4byte	0xb96
 3621 0b75 0F       		.uleb128 0xf
 3622 0b76 17040000 		.4byte	.LASF98
 3623 0b7a 01       		.byte	0x1
 3624 0b7b 4E0C     		.2byte	0xc4e
 3625 0b7d 83000000 		.4byte	0x83
 3626 0b81 5D060000 		.4byte	.LLST47
 3627 0b85 10       		.uleb128 0x10
 3628 0b86 02030000 		.4byte	.LASF66
 3629 0b8a 01       		.byte	0x1
 3630 0b8b 500C     		.2byte	0xc50
 3631 0b8d 83000000 		.4byte	0x83
 3632 0b91 7E060000 		.4byte	.LLST48
 3633 0b95 00       		.byte	0
 3634 0b96 0E       		.uleb128 0xe
 3635 0b97 38040000 		.4byte	.LASF101
 3636 0b9b 01       		.byte	0x1
 3637 0b9c 6E0C     		.2byte	0xc6e
 3638 0b9e 00000000 		.4byte	.LFB52
 3639 0ba2 68000000 		.4byte	.LFE52-.LFB52
 3640 0ba6 01       		.uleb128 0x1
 3641 0ba7 9C       		.byte	0x9c
 3642 0ba8 EC0B0000 		.4byte	0xbec
 3643 0bac 0F       		.uleb128 0xf
 3644 0bad 83000000 		.4byte	.LASF102
 3645 0bb1 01       		.byte	0x1
 3646 0bb2 6E0C     		.2byte	0xc6e
 3647 0bb4 83000000 		.4byte	0x83
 3648 0bb8 9C060000 		.4byte	.LLST49
 3649 0bbc 0F       		.uleb128 0xf
 3650 0bbd 17040000 		.4byte	.LASF98
 3651 0bc1 01       		.byte	0x1
 3652 0bc2 6E0C     		.2byte	0xc6e
 3653 0bc4 83000000 		.4byte	0x83
 3654 0bc8 08070000 		.4byte	.LLST50
 3655 0bcc 10       		.uleb128 0x10
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccBBFZQS.s 			page 124


 3656 0bcd 02030000 		.4byte	.LASF66
 3657 0bd1 01       		.byte	0x1
 3658 0bd2 700C     		.2byte	0xc70
 3659 0bd4 83000000 		.4byte	0x83
 3660 0bd8 74070000 		.4byte	.LLST51
 3661 0bdc 15       		.uleb128 0x15
 3662 0bdd 56000000 		.4byte	.LVL181
 3663 0be1 BA030000 		.4byte	0x3ba
 3664 0be5 16       		.uleb128 0x16
 3665 0be6 01       		.uleb128 0x1
 3666 0be7 50       		.byte	0x50
 3667 0be8 01       		.uleb128 0x1
 3668 0be9 30       		.byte	0x30
 3669 0bea 00       		.byte	0
 3670 0beb 00       		.byte	0
 3671 0bec 1B       		.uleb128 0x1b
 3672 0bed E0000000 		.4byte	0xe0
 3673 0bf1 FC0B0000 		.4byte	0xbfc
 3674 0bf5 1C       		.uleb128 0x1c
 3675 0bf6 D9000000 		.4byte	0xd9
 3676 0bfa 04       		.byte	0x4
 3677 0bfb 00       		.byte	0
 3678 0bfc 1A       		.uleb128 0x1a
 3679 0bfd A3060000 		.4byte	.LASF103
 3680 0c01 01       		.byte	0x1
 3681 0c02 23       		.byte	0x23
 3682 0c03 EC0B0000 		.4byte	0xbec
 3683 0c07 05       		.uleb128 0x5
 3684 0c08 03       		.byte	0x3
 3685 0c09 00000000 		.4byte	CySysTickCallbacks
 3686 0c0d 20       		.uleb128 0x20
 3687 0c0e 27040000 		.4byte	.LASF104
 3688 0c12 01       		.byte	0x1
 3689 0c13 36       		.byte	0x36
 3690 0c14 83000000 		.4byte	0x83
 3691 0c18 05       		.uleb128 0x5
 3692 0c19 03       		.byte	0x3
 3693 0c1a 00000000 		.4byte	CySysTickInitVar
 3694 0c1e 20       		.uleb128 0x20
 3695 0c1f 3D050000 		.4byte	.LASF105
 3696 0c23 01       		.byte	0x1
 3697 0c24 1C       		.byte	0x1c
 3698 0c25 83000000 		.4byte	0x83
 3699 0c29 05       		.uleb128 0x5
 3700 0c2a 03       		.byte	0x3
 3701 0c2b 00000000 		.4byte	cydelayFreqHz
 3702 0c2f 20       		.uleb128 0x20
 3703 0c30 63010000 		.4byte	.LASF106
 3704 0c34 01       		.byte	0x1
 3705 0c35 1D       		.byte	0x1d
 3706 0c36 83000000 		.4byte	0x83
 3707 0c3a 05       		.uleb128 0x5
 3708 0c3b 03       		.byte	0x3
 3709 0c3c 00000000 		.4byte	cydelayFreqKhz
 3710 0c40 20       		.uleb128 0x20
 3711 0c41 FD060000 		.4byte	.LASF107
 3712 0c45 01       		.byte	0x1
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccBBFZQS.s 			page 125


 3713 0c46 1E       		.byte	0x1e
 3714 0c47 6B000000 		.4byte	0x6b
 3715 0c4b 05       		.uleb128 0x5
 3716 0c4c 03       		.byte	0x3
 3717 0c4d 00000000 		.4byte	cydelayFreqMhz
 3718 0c51 20       		.uleb128 0x20
 3719 0c52 F5010000 		.4byte	.LASF108
 3720 0c56 01       		.byte	0x1
 3721 0c57 1F       		.byte	0x1f
 3722 0c58 83000000 		.4byte	0x83
 3723 0c5c 05       		.uleb128 0x5
 3724 0c5d 03       		.byte	0x3
 3725 0c5e 00000000 		.4byte	cydelay32kMs
 3726 0c62 1B       		.uleb128 0x1b
 3727 0c63 6B000000 		.4byte	0x6b
 3728 0c67 720C0000 		.4byte	0xc72
 3729 0c6b 1C       		.uleb128 0x1c
 3730 0c6c D9000000 		.4byte	0xd9
 3731 0c70 2D       		.byte	0x2d
 3732 0c71 00       		.byte	0
 3733 0c72 20       		.uleb128 0x20
 3734 0c73 8C040000 		.4byte	.LASF109
 3735 0c77 01       		.byte	0x1
 3736 0c78 3B       		.byte	0x3b
 3737 0c79 830C0000 		.4byte	0xc83
 3738 0c7d 05       		.uleb128 0x5
 3739 0c7e 03       		.byte	0x3
 3740 0c7f 00000000 		.4byte	cyImoFreqMhz2Reg
 3741 0c83 21       		.uleb128 0x21
 3742 0c84 620C0000 		.4byte	0xc62
 3743 0c88 1B       		.uleb128 0x1b
 3744 0c89 6B000000 		.4byte	0x6b
 3745 0c8d 980C0000 		.4byte	0xc98
 3746 0c91 1C       		.uleb128 0x1c
 3747 0c92 D9000000 		.4byte	0xd9
 3748 0c96 16       		.byte	0x16
 3749 0c97 00       		.byte	0
 3750 0c98 20       		.uleb128 0x20
 3751 0c99 42060000 		.4byte	.LASF110
 3752 0c9d 01       		.byte	0x1
 3753 0c9e 4C       		.byte	0x4c
 3754 0c9f A90C0000 		.4byte	0xca9
 3755 0ca3 05       		.uleb128 0x5
 3756 0ca4 03       		.byte	0x3
 3757 0ca5 00000000 		.4byte	cyImoFreqMhz2DpllOffset
 3758 0ca9 21       		.uleb128 0x21
 3759 0caa 880C0000 		.4byte	0xc88
 3760 0cae 22       		.uleb128 0x22
 3761 0caf 9F020000 		.4byte	.LASF113
 3762 0cb3 03       		.byte	0x3
 3763 0cb4 61       		.byte	0x61
 3764 0cb5 6B000000 		.4byte	0x6b
 3765 0cb9 23       		.uleb128 0x23
 3766 0cba 62050000 		.4byte	.LASF111
 3767 0cbe 03       		.byte	0x3
 3768 0cbf 62       		.byte	0x62
 3769 0cc0 CA0C0000 		.4byte	0xcca
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccBBFZQS.s 			page 126


 3770 0cc4 24       		.uleb128 0x24
 3771 0cc5 6B000000 		.4byte	0x6b
 3772 0cc9 00       		.byte	0
 3773 0cca 23       		.uleb128 0x23
 3774 0ccb B5050000 		.4byte	.LASF112
 3775 0ccf 03       		.byte	0x3
 3776 0cd0 5D       		.byte	0x5d
 3777 0cd1 DB0C0000 		.4byte	0xcdb
 3778 0cd5 24       		.uleb128 0x24
 3779 0cd6 83000000 		.4byte	0x83
 3780 0cda 00       		.byte	0
 3781 0cdb 22       		.uleb128 0x22
 3782 0cdc 0C070000 		.4byte	.LASF114
 3783 0ce0 04       		.byte	0x4
 3784 0ce1 2A       		.byte	0x2a
 3785 0ce2 83000000 		.4byte	0x83
 3786 0ce6 25       		.uleb128 0x25
 3787 0ce7 64070000 		.4byte	.LASF119
 3788 0ceb 05       		.byte	0x5
 3789 0cec 20       		.byte	0x20
 3790 0ced 24       		.uleb128 0x24
 3791 0cee 83000000 		.4byte	0x83
 3792 0cf2 00       		.byte	0
 3793 0cf3 00       		.byte	0
 3794              		.section	.debug_abbrev,"",%progbits
 3795              	.Ldebug_abbrev0:
 3796 0000 01       		.uleb128 0x1
 3797 0001 11       		.uleb128 0x11
 3798 0002 01       		.byte	0x1
 3799 0003 25       		.uleb128 0x25
 3800 0004 0E       		.uleb128 0xe
 3801 0005 13       		.uleb128 0x13
 3802 0006 0B       		.uleb128 0xb
 3803 0007 03       		.uleb128 0x3
 3804 0008 0E       		.uleb128 0xe
 3805 0009 1B       		.uleb128 0x1b
 3806 000a 0E       		.uleb128 0xe
 3807 000b 55       		.uleb128 0x55
 3808 000c 17       		.uleb128 0x17
 3809 000d 11       		.uleb128 0x11
 3810 000e 01       		.uleb128 0x1
 3811 000f 10       		.uleb128 0x10
 3812 0010 17       		.uleb128 0x17
 3813 0011 00       		.byte	0
 3814 0012 00       		.byte	0
 3815 0013 02       		.uleb128 0x2
 3816 0014 24       		.uleb128 0x24
 3817 0015 00       		.byte	0
 3818 0016 0B       		.uleb128 0xb
 3819 0017 0B       		.uleb128 0xb
 3820 0018 3E       		.uleb128 0x3e
 3821 0019 0B       		.uleb128 0xb
 3822 001a 03       		.uleb128 0x3
 3823 001b 0E       		.uleb128 0xe
 3824 001c 00       		.byte	0
 3825 001d 00       		.byte	0
 3826 001e 03       		.uleb128 0x3
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccBBFZQS.s 			page 127


 3827 001f 24       		.uleb128 0x24
 3828 0020 00       		.byte	0
 3829 0021 0B       		.uleb128 0xb
 3830 0022 0B       		.uleb128 0xb
 3831 0023 3E       		.uleb128 0x3e
 3832 0024 0B       		.uleb128 0xb
 3833 0025 03       		.uleb128 0x3
 3834 0026 08       		.uleb128 0x8
 3835 0027 00       		.byte	0
 3836 0028 00       		.byte	0
 3837 0029 04       		.uleb128 0x4
 3838 002a 16       		.uleb128 0x16
 3839 002b 00       		.byte	0
 3840 002c 03       		.uleb128 0x3
 3841 002d 0E       		.uleb128 0xe
 3842 002e 3A       		.uleb128 0x3a
 3843 002f 0B       		.uleb128 0xb
 3844 0030 3B       		.uleb128 0x3b
 3845 0031 05       		.uleb128 0x5
 3846 0032 49       		.uleb128 0x49
 3847 0033 13       		.uleb128 0x13
 3848 0034 00       		.byte	0
 3849 0035 00       		.byte	0
 3850 0036 05       		.uleb128 0x5
 3851 0037 35       		.uleb128 0x35
 3852 0038 00       		.byte	0
 3853 0039 49       		.uleb128 0x49
 3854 003a 13       		.uleb128 0x13
 3855 003b 00       		.byte	0
 3856 003c 00       		.byte	0
 3857 003d 06       		.uleb128 0x6
 3858 003e 0F       		.uleb128 0xf
 3859 003f 00       		.byte	0
 3860 0040 0B       		.uleb128 0xb
 3861 0041 0B       		.uleb128 0xb
 3862 0042 49       		.uleb128 0x49
 3863 0043 13       		.uleb128 0x13
 3864 0044 00       		.byte	0
 3865 0045 00       		.byte	0
 3866 0046 07       		.uleb128 0x7
 3867 0047 15       		.uleb128 0x15
 3868 0048 00       		.byte	0
 3869 0049 27       		.uleb128 0x27
 3870 004a 19       		.uleb128 0x19
 3871 004b 00       		.byte	0
 3872 004c 00       		.byte	0
 3873 004d 08       		.uleb128 0x8
 3874 004e 16       		.uleb128 0x16
 3875 004f 00       		.byte	0
 3876 0050 03       		.uleb128 0x3
 3877 0051 0E       		.uleb128 0xe
 3878 0052 3A       		.uleb128 0x3a
 3879 0053 0B       		.uleb128 0xb
 3880 0054 3B       		.uleb128 0x3b
 3881 0055 0B       		.uleb128 0xb
 3882 0056 49       		.uleb128 0x49
 3883 0057 13       		.uleb128 0x13
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccBBFZQS.s 			page 128


 3884 0058 00       		.byte	0
 3885 0059 00       		.byte	0
 3886 005a 09       		.uleb128 0x9
 3887 005b 2E       		.uleb128 0x2e
 3888 005c 00       		.byte	0
 3889 005d 3F       		.uleb128 0x3f
 3890 005e 19       		.uleb128 0x19
 3891 005f 03       		.uleb128 0x3
 3892 0060 0E       		.uleb128 0xe
 3893 0061 3A       		.uleb128 0x3a
 3894 0062 0B       		.uleb128 0xb
 3895 0063 3B       		.uleb128 0x3b
 3896 0064 0B       		.uleb128 0xb
 3897 0065 27       		.uleb128 0x27
 3898 0066 19       		.uleb128 0x19
 3899 0067 11       		.uleb128 0x11
 3900 0068 01       		.uleb128 0x1
 3901 0069 12       		.uleb128 0x12
 3902 006a 06       		.uleb128 0x6
 3903 006b 40       		.uleb128 0x40
 3904 006c 18       		.uleb128 0x18
 3905 006d 9742     		.uleb128 0x2117
 3906 006f 19       		.uleb128 0x19
 3907 0070 00       		.byte	0
 3908 0071 00       		.byte	0
 3909 0072 0A       		.uleb128 0xa
 3910 0073 2E       		.uleb128 0x2e
 3911 0074 00       		.byte	0
 3912 0075 3F       		.uleb128 0x3f
 3913 0076 19       		.uleb128 0x19
 3914 0077 03       		.uleb128 0x3
 3915 0078 0E       		.uleb128 0xe
 3916 0079 3A       		.uleb128 0x3a
 3917 007a 0B       		.uleb128 0xb
 3918 007b 3B       		.uleb128 0x3b
 3919 007c 05       		.uleb128 0x5
 3920 007d 27       		.uleb128 0x27
 3921 007e 19       		.uleb128 0x19
 3922 007f 11       		.uleb128 0x11
 3923 0080 01       		.uleb128 0x1
 3924 0081 12       		.uleb128 0x12
 3925 0082 06       		.uleb128 0x6
 3926 0083 40       		.uleb128 0x40
 3927 0084 18       		.uleb128 0x18
 3928 0085 9742     		.uleb128 0x2117
 3929 0087 19       		.uleb128 0x19
 3930 0088 00       		.byte	0
 3931 0089 00       		.byte	0
 3932 008a 0B       		.uleb128 0xb
 3933 008b 2E       		.uleb128 0x2e
 3934 008c 01       		.byte	0x1
 3935 008d 3F       		.uleb128 0x3f
 3936 008e 19       		.uleb128 0x19
 3937 008f 03       		.uleb128 0x3
 3938 0090 0E       		.uleb128 0xe
 3939 0091 3A       		.uleb128 0x3a
 3940 0092 0B       		.uleb128 0xb
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccBBFZQS.s 			page 129


 3941 0093 3B       		.uleb128 0x3b
 3942 0094 0B       		.uleb128 0xb
 3943 0095 27       		.uleb128 0x27
 3944 0096 19       		.uleb128 0x19
 3945 0097 11       		.uleb128 0x11
 3946 0098 01       		.uleb128 0x1
 3947 0099 12       		.uleb128 0x12
 3948 009a 06       		.uleb128 0x6
 3949 009b 40       		.uleb128 0x40
 3950 009c 18       		.uleb128 0x18
 3951 009d 9742     		.uleb128 0x2117
 3952 009f 19       		.uleb128 0x19
 3953 00a0 01       		.uleb128 0x1
 3954 00a1 13       		.uleb128 0x13
 3955 00a2 00       		.byte	0
 3956 00a3 00       		.byte	0
 3957 00a4 0C       		.uleb128 0xc
 3958 00a5 898201   		.uleb128 0x4109
 3959 00a8 00       		.byte	0
 3960 00a9 11       		.uleb128 0x11
 3961 00aa 01       		.uleb128 0x1
 3962 00ab 31       		.uleb128 0x31
 3963 00ac 13       		.uleb128 0x13
 3964 00ad 00       		.byte	0
 3965 00ae 00       		.byte	0
 3966 00af 0D       		.uleb128 0xd
 3967 00b0 2E       		.uleb128 0x2e
 3968 00b1 00       		.byte	0
 3969 00b2 3F       		.uleb128 0x3f
 3970 00b3 19       		.uleb128 0x19
 3971 00b4 03       		.uleb128 0x3
 3972 00b5 0E       		.uleb128 0xe
 3973 00b6 3A       		.uleb128 0x3a
 3974 00b7 0B       		.uleb128 0xb
 3975 00b8 3B       		.uleb128 0x3b
 3976 00b9 05       		.uleb128 0x5
 3977 00ba 27       		.uleb128 0x27
 3978 00bb 19       		.uleb128 0x19
 3979 00bc 49       		.uleb128 0x49
 3980 00bd 13       		.uleb128 0x13
 3981 00be 11       		.uleb128 0x11
 3982 00bf 01       		.uleb128 0x1
 3983 00c0 12       		.uleb128 0x12
 3984 00c1 06       		.uleb128 0x6
 3985 00c2 40       		.uleb128 0x40
 3986 00c3 18       		.uleb128 0x18
 3987 00c4 9742     		.uleb128 0x2117
 3988 00c6 19       		.uleb128 0x19
 3989 00c7 00       		.byte	0
 3990 00c8 00       		.byte	0
 3991 00c9 0E       		.uleb128 0xe
 3992 00ca 2E       		.uleb128 0x2e
 3993 00cb 01       		.byte	0x1
 3994 00cc 3F       		.uleb128 0x3f
 3995 00cd 19       		.uleb128 0x19
 3996 00ce 03       		.uleb128 0x3
 3997 00cf 0E       		.uleb128 0xe
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccBBFZQS.s 			page 130


 3998 00d0 3A       		.uleb128 0x3a
 3999 00d1 0B       		.uleb128 0xb
 4000 00d2 3B       		.uleb128 0x3b
 4001 00d3 05       		.uleb128 0x5
 4002 00d4 27       		.uleb128 0x27
 4003 00d5 19       		.uleb128 0x19
 4004 00d6 11       		.uleb128 0x11
 4005 00d7 01       		.uleb128 0x1
 4006 00d8 12       		.uleb128 0x12
 4007 00d9 06       		.uleb128 0x6
 4008 00da 40       		.uleb128 0x40
 4009 00db 18       		.uleb128 0x18
 4010 00dc 9742     		.uleb128 0x2117
 4011 00de 19       		.uleb128 0x19
 4012 00df 01       		.uleb128 0x1
 4013 00e0 13       		.uleb128 0x13
 4014 00e1 00       		.byte	0
 4015 00e2 00       		.byte	0
 4016 00e3 0F       		.uleb128 0xf
 4017 00e4 05       		.uleb128 0x5
 4018 00e5 00       		.byte	0
 4019 00e6 03       		.uleb128 0x3
 4020 00e7 0E       		.uleb128 0xe
 4021 00e8 3A       		.uleb128 0x3a
 4022 00e9 0B       		.uleb128 0xb
 4023 00ea 3B       		.uleb128 0x3b
 4024 00eb 05       		.uleb128 0x5
 4025 00ec 49       		.uleb128 0x49
 4026 00ed 13       		.uleb128 0x13
 4027 00ee 02       		.uleb128 0x2
 4028 00ef 17       		.uleb128 0x17
 4029 00f0 00       		.byte	0
 4030 00f1 00       		.byte	0
 4031 00f2 10       		.uleb128 0x10
 4032 00f3 34       		.uleb128 0x34
 4033 00f4 00       		.byte	0
 4034 00f5 03       		.uleb128 0x3
 4035 00f6 0E       		.uleb128 0xe
 4036 00f7 3A       		.uleb128 0x3a
 4037 00f8 0B       		.uleb128 0xb
 4038 00f9 3B       		.uleb128 0x3b
 4039 00fa 05       		.uleb128 0x5
 4040 00fb 49       		.uleb128 0x49
 4041 00fc 13       		.uleb128 0x13
 4042 00fd 02       		.uleb128 0x2
 4043 00fe 17       		.uleb128 0x17
 4044 00ff 00       		.byte	0
 4045 0100 00       		.byte	0
 4046 0101 11       		.uleb128 0x11
 4047 0102 2E       		.uleb128 0x2e
 4048 0103 01       		.byte	0x1
 4049 0104 3F       		.uleb128 0x3f
 4050 0105 19       		.uleb128 0x19
 4051 0106 03       		.uleb128 0x3
 4052 0107 0E       		.uleb128 0xe
 4053 0108 3A       		.uleb128 0x3a
 4054 0109 0B       		.uleb128 0xb
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccBBFZQS.s 			page 131


 4055 010a 3B       		.uleb128 0x3b
 4056 010b 05       		.uleb128 0x5
 4057 010c 27       		.uleb128 0x27
 4058 010d 19       		.uleb128 0x19
 4059 010e 49       		.uleb128 0x49
 4060 010f 13       		.uleb128 0x13
 4061 0110 11       		.uleb128 0x11
 4062 0111 01       		.uleb128 0x1
 4063 0112 12       		.uleb128 0x12
 4064 0113 06       		.uleb128 0x6
 4065 0114 40       		.uleb128 0x40
 4066 0115 18       		.uleb128 0x18
 4067 0116 9742     		.uleb128 0x2117
 4068 0118 19       		.uleb128 0x19
 4069 0119 01       		.uleb128 0x1
 4070 011a 13       		.uleb128 0x13
 4071 011b 00       		.byte	0
 4072 011c 00       		.byte	0
 4073 011d 12       		.uleb128 0x12
 4074 011e 34       		.uleb128 0x34
 4075 011f 00       		.byte	0
 4076 0120 03       		.uleb128 0x3
 4077 0121 0E       		.uleb128 0xe
 4078 0122 3A       		.uleb128 0x3a
 4079 0123 0B       		.uleb128 0xb
 4080 0124 3B       		.uleb128 0x3b
 4081 0125 05       		.uleb128 0x5
 4082 0126 49       		.uleb128 0x49
 4083 0127 13       		.uleb128 0x13
 4084 0128 02       		.uleb128 0x2
 4085 0129 18       		.uleb128 0x18
 4086 012a 00       		.byte	0
 4087 012b 00       		.byte	0
 4088 012c 13       		.uleb128 0x13
 4089 012d 05       		.uleb128 0x5
 4090 012e 00       		.byte	0
 4091 012f 03       		.uleb128 0x3
 4092 0130 0E       		.uleb128 0xe
 4093 0131 3A       		.uleb128 0x3a
 4094 0132 0B       		.uleb128 0xb
 4095 0133 3B       		.uleb128 0x3b
 4096 0134 05       		.uleb128 0x5
 4097 0135 49       		.uleb128 0x49
 4098 0136 13       		.uleb128 0x13
 4099 0137 02       		.uleb128 0x2
 4100 0138 18       		.uleb128 0x18
 4101 0139 00       		.byte	0
 4102 013a 00       		.byte	0
 4103 013b 14       		.uleb128 0x14
 4104 013c 34       		.uleb128 0x34
 4105 013d 00       		.byte	0
 4106 013e 03       		.uleb128 0x3
 4107 013f 0E       		.uleb128 0xe
 4108 0140 3A       		.uleb128 0x3a
 4109 0141 0B       		.uleb128 0xb
 4110 0142 3B       		.uleb128 0x3b
 4111 0143 05       		.uleb128 0x5
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccBBFZQS.s 			page 132


 4112 0144 49       		.uleb128 0x49
 4113 0145 13       		.uleb128 0x13
 4114 0146 1C       		.uleb128 0x1c
 4115 0147 06       		.uleb128 0x6
 4116 0148 00       		.byte	0
 4117 0149 00       		.byte	0
 4118 014a 15       		.uleb128 0x15
 4119 014b 898201   		.uleb128 0x4109
 4120 014e 01       		.byte	0x1
 4121 014f 11       		.uleb128 0x11
 4122 0150 01       		.uleb128 0x1
 4123 0151 31       		.uleb128 0x31
 4124 0152 13       		.uleb128 0x13
 4125 0153 00       		.byte	0
 4126 0154 00       		.byte	0
 4127 0155 16       		.uleb128 0x16
 4128 0156 8A8201   		.uleb128 0x410a
 4129 0159 00       		.byte	0
 4130 015a 02       		.uleb128 0x2
 4131 015b 18       		.uleb128 0x18
 4132 015c 9142     		.uleb128 0x2111
 4133 015e 18       		.uleb128 0x18
 4134 015f 00       		.byte	0
 4135 0160 00       		.byte	0
 4136 0161 17       		.uleb128 0x17
 4137 0162 898201   		.uleb128 0x4109
 4138 0165 01       		.byte	0x1
 4139 0166 11       		.uleb128 0x11
 4140 0167 01       		.uleb128 0x1
 4141 0168 31       		.uleb128 0x31
 4142 0169 13       		.uleb128 0x13
 4143 016a 01       		.uleb128 0x1
 4144 016b 13       		.uleb128 0x13
 4145 016c 00       		.byte	0
 4146 016d 00       		.byte	0
 4147 016e 18       		.uleb128 0x18
 4148 016f 34       		.uleb128 0x34
 4149 0170 00       		.byte	0
 4150 0171 03       		.uleb128 0x3
 4151 0172 08       		.uleb128 0x8
 4152 0173 3A       		.uleb128 0x3a
 4153 0174 0B       		.uleb128 0xb
 4154 0175 3B       		.uleb128 0x3b
 4155 0176 0B       		.uleb128 0xb
 4156 0177 49       		.uleb128 0x49
 4157 0178 13       		.uleb128 0x13
 4158 0179 02       		.uleb128 0x2
 4159 017a 17       		.uleb128 0x17
 4160 017b 00       		.byte	0
 4161 017c 00       		.byte	0
 4162 017d 19       		.uleb128 0x19
 4163 017e 34       		.uleb128 0x34
 4164 017f 00       		.byte	0
 4165 0180 03       		.uleb128 0x3
 4166 0181 0E       		.uleb128 0xe
 4167 0182 3A       		.uleb128 0x3a
 4168 0183 0B       		.uleb128 0xb
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccBBFZQS.s 			page 133


 4169 0184 3B       		.uleb128 0x3b
 4170 0185 0B       		.uleb128 0xb
 4171 0186 49       		.uleb128 0x49
 4172 0187 13       		.uleb128 0x13
 4173 0188 02       		.uleb128 0x2
 4174 0189 17       		.uleb128 0x17
 4175 018a 00       		.byte	0
 4176 018b 00       		.byte	0
 4177 018c 1A       		.uleb128 0x1a
 4178 018d 34       		.uleb128 0x34
 4179 018e 00       		.byte	0
 4180 018f 03       		.uleb128 0x3
 4181 0190 0E       		.uleb128 0xe
 4182 0191 3A       		.uleb128 0x3a
 4183 0192 0B       		.uleb128 0xb
 4184 0193 3B       		.uleb128 0x3b
 4185 0194 0B       		.uleb128 0xb
 4186 0195 49       		.uleb128 0x49
 4187 0196 13       		.uleb128 0x13
 4188 0197 02       		.uleb128 0x2
 4189 0198 18       		.uleb128 0x18
 4190 0199 00       		.byte	0
 4191 019a 00       		.byte	0
 4192 019b 1B       		.uleb128 0x1b
 4193 019c 01       		.uleb128 0x1
 4194 019d 01       		.byte	0x1
 4195 019e 49       		.uleb128 0x49
 4196 019f 13       		.uleb128 0x13
 4197 01a0 01       		.uleb128 0x1
 4198 01a1 13       		.uleb128 0x13
 4199 01a2 00       		.byte	0
 4200 01a3 00       		.byte	0
 4201 01a4 1C       		.uleb128 0x1c
 4202 01a5 21       		.uleb128 0x21
 4203 01a6 00       		.byte	0
 4204 01a7 49       		.uleb128 0x49
 4205 01a8 13       		.uleb128 0x13
 4206 01a9 2F       		.uleb128 0x2f
 4207 01aa 0B       		.uleb128 0xb
 4208 01ab 00       		.byte	0
 4209 01ac 00       		.byte	0
 4210 01ad 1D       		.uleb128 0x1d
 4211 01ae 2E       		.uleb128 0x2e
 4212 01af 01       		.byte	0x1
 4213 01b0 3F       		.uleb128 0x3f
 4214 01b1 19       		.uleb128 0x19
 4215 01b2 03       		.uleb128 0x3
 4216 01b3 0E       		.uleb128 0xe
 4217 01b4 3A       		.uleb128 0x3a
 4218 01b5 0B       		.uleb128 0xb
 4219 01b6 3B       		.uleb128 0x3b
 4220 01b7 05       		.uleb128 0x5
 4221 01b8 27       		.uleb128 0x27
 4222 01b9 19       		.uleb128 0x19
 4223 01ba 11       		.uleb128 0x11
 4224 01bb 01       		.uleb128 0x1
 4225 01bc 12       		.uleb128 0x12
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccBBFZQS.s 			page 134


 4226 01bd 06       		.uleb128 0x6
 4227 01be 40       		.uleb128 0x40
 4228 01bf 18       		.uleb128 0x18
 4229 01c0 9642     		.uleb128 0x2116
 4230 01c2 19       		.uleb128 0x19
 4231 01c3 01       		.uleb128 0x1
 4232 01c4 13       		.uleb128 0x13
 4233 01c5 00       		.byte	0
 4234 01c6 00       		.byte	0
 4235 01c7 1E       		.uleb128 0x1e
 4236 01c8 2E       		.uleb128 0x2e
 4237 01c9 01       		.byte	0x1
 4238 01ca 03       		.uleb128 0x3
 4239 01cb 0E       		.uleb128 0xe
 4240 01cc 3A       		.uleb128 0x3a
 4241 01cd 0B       		.uleb128 0xb
 4242 01ce 3B       		.uleb128 0x3b
 4243 01cf 05       		.uleb128 0x5
 4244 01d0 27       		.uleb128 0x27
 4245 01d1 19       		.uleb128 0x19
 4246 01d2 11       		.uleb128 0x11
 4247 01d3 01       		.uleb128 0x1
 4248 01d4 12       		.uleb128 0x12
 4249 01d5 06       		.uleb128 0x6
 4250 01d6 40       		.uleb128 0x40
 4251 01d7 18       		.uleb128 0x18
 4252 01d8 9642     		.uleb128 0x2116
 4253 01da 19       		.uleb128 0x19
 4254 01db 01       		.uleb128 0x1
 4255 01dc 13       		.uleb128 0x13
 4256 01dd 00       		.byte	0
 4257 01de 00       		.byte	0
 4258 01df 1F       		.uleb128 0x1f
 4259 01e0 34       		.uleb128 0x34
 4260 01e1 00       		.byte	0
 4261 01e2 03       		.uleb128 0x3
 4262 01e3 08       		.uleb128 0x8
 4263 01e4 3A       		.uleb128 0x3a
 4264 01e5 0B       		.uleb128 0xb
 4265 01e6 3B       		.uleb128 0x3b
 4266 01e7 05       		.uleb128 0x5
 4267 01e8 49       		.uleb128 0x49
 4268 01e9 13       		.uleb128 0x13
 4269 01ea 02       		.uleb128 0x2
 4270 01eb 17       		.uleb128 0x17
 4271 01ec 00       		.byte	0
 4272 01ed 00       		.byte	0
 4273 01ee 20       		.uleb128 0x20
 4274 01ef 34       		.uleb128 0x34
 4275 01f0 00       		.byte	0
 4276 01f1 03       		.uleb128 0x3
 4277 01f2 0E       		.uleb128 0xe
 4278 01f3 3A       		.uleb128 0x3a
 4279 01f4 0B       		.uleb128 0xb
 4280 01f5 3B       		.uleb128 0x3b
 4281 01f6 0B       		.uleb128 0xb
 4282 01f7 49       		.uleb128 0x49
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccBBFZQS.s 			page 135


 4283 01f8 13       		.uleb128 0x13
 4284 01f9 3F       		.uleb128 0x3f
 4285 01fa 19       		.uleb128 0x19
 4286 01fb 02       		.uleb128 0x2
 4287 01fc 18       		.uleb128 0x18
 4288 01fd 00       		.byte	0
 4289 01fe 00       		.byte	0
 4290 01ff 21       		.uleb128 0x21
 4291 0200 26       		.uleb128 0x26
 4292 0201 00       		.byte	0
 4293 0202 49       		.uleb128 0x49
 4294 0203 13       		.uleb128 0x13
 4295 0204 00       		.byte	0
 4296 0205 00       		.byte	0
 4297 0206 22       		.uleb128 0x22
 4298 0207 2E       		.uleb128 0x2e
 4299 0208 00       		.byte	0
 4300 0209 3F       		.uleb128 0x3f
 4301 020a 19       		.uleb128 0x19
 4302 020b 03       		.uleb128 0x3
 4303 020c 0E       		.uleb128 0xe
 4304 020d 3A       		.uleb128 0x3a
 4305 020e 0B       		.uleb128 0xb
 4306 020f 3B       		.uleb128 0x3b
 4307 0210 0B       		.uleb128 0xb
 4308 0211 27       		.uleb128 0x27
 4309 0212 19       		.uleb128 0x19
 4310 0213 49       		.uleb128 0x49
 4311 0214 13       		.uleb128 0x13
 4312 0215 3C       		.uleb128 0x3c
 4313 0216 19       		.uleb128 0x19
 4314 0217 00       		.byte	0
 4315 0218 00       		.byte	0
 4316 0219 23       		.uleb128 0x23
 4317 021a 2E       		.uleb128 0x2e
 4318 021b 01       		.byte	0x1
 4319 021c 3F       		.uleb128 0x3f
 4320 021d 19       		.uleb128 0x19
 4321 021e 03       		.uleb128 0x3
 4322 021f 0E       		.uleb128 0xe
 4323 0220 3A       		.uleb128 0x3a
 4324 0221 0B       		.uleb128 0xb
 4325 0222 3B       		.uleb128 0x3b
 4326 0223 0B       		.uleb128 0xb
 4327 0224 27       		.uleb128 0x27
 4328 0225 19       		.uleb128 0x19
 4329 0226 3C       		.uleb128 0x3c
 4330 0227 19       		.uleb128 0x19
 4331 0228 01       		.uleb128 0x1
 4332 0229 13       		.uleb128 0x13
 4333 022a 00       		.byte	0
 4334 022b 00       		.byte	0
 4335 022c 24       		.uleb128 0x24
 4336 022d 05       		.uleb128 0x5
 4337 022e 00       		.byte	0
 4338 022f 49       		.uleb128 0x49
 4339 0230 13       		.uleb128 0x13
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccBBFZQS.s 			page 136


 4340 0231 00       		.byte	0
 4341 0232 00       		.byte	0
 4342 0233 25       		.uleb128 0x25
 4343 0234 2E       		.uleb128 0x2e
 4344 0235 01       		.byte	0x1
 4345 0236 3F       		.uleb128 0x3f
 4346 0237 19       		.uleb128 0x19
 4347 0238 03       		.uleb128 0x3
 4348 0239 0E       		.uleb128 0xe
 4349 023a 3A       		.uleb128 0x3a
 4350 023b 0B       		.uleb128 0xb
 4351 023c 3B       		.uleb128 0x3b
 4352 023d 0B       		.uleb128 0xb
 4353 023e 27       		.uleb128 0x27
 4354 023f 19       		.uleb128 0x19
 4355 0240 3C       		.uleb128 0x3c
 4356 0241 19       		.uleb128 0x19
 4357 0242 00       		.byte	0
 4358 0243 00       		.byte	0
 4359 0244 00       		.byte	0
 4360              		.section	.debug_loc,"",%progbits
 4361              	.Ldebug_loc0:
 4362              	.LLST0:
 4363 0000 00000000 		.4byte	.LVL1
 4364 0004 07000000 		.4byte	.LVL2-1
 4365 0008 0100     		.2byte	0x1
 4366 000a 50       		.byte	0x50
 4367 000b 07000000 		.4byte	.LVL2-1
 4368 000f 1A000000 		.4byte	.LVL6
 4369 0013 0100     		.2byte	0x1
 4370 0015 54       		.byte	0x54
 4371 0016 1A000000 		.4byte	.LVL6
 4372 001a 20000000 		.4byte	.LFE6
 4373 001e 0400     		.2byte	0x4
 4374 0020 F3       		.byte	0xf3
 4375 0021 01       		.uleb128 0x1
 4376 0022 50       		.byte	0x50
 4377 0023 9F       		.byte	0x9f
 4378 0024 00000000 		.4byte	0
 4379 0028 00000000 		.4byte	0
 4380              	.LLST1:
 4381 002c 08000000 		.4byte	.LVL2
 4382 0030 19000000 		.4byte	.LVL5-1
 4383 0034 0100     		.2byte	0x1
 4384 0036 50       		.byte	0x50
 4385 0037 00000000 		.4byte	0
 4386 003b 00000000 		.4byte	0
 4387              	.LLST2:
 4388 003f 10000000 		.4byte	.LVL3
 4389 0043 14000000 		.4byte	.LVL4
 4390 0047 0100     		.2byte	0x1
 4391 0049 52       		.byte	0x52
 4392 004a 14000000 		.4byte	.LVL4
 4393 004e 19000000 		.4byte	.LVL5-1
 4394 0052 0100     		.2byte	0x1
 4395 0054 53       		.byte	0x53
 4396 0055 00000000 		.4byte	0
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccBBFZQS.s 			page 137


 4397 0059 00000000 		.4byte	0
 4398              	.LLST3:
 4399 005d 06000000 		.4byte	.LVL7
 4400 0061 11000000 		.4byte	.LVL9-1
 4401 0065 0100     		.2byte	0x1
 4402 0067 50       		.byte	0x50
 4403 0068 00000000 		.4byte	0
 4404 006c 00000000 		.4byte	0
 4405              	.LLST4:
 4406 0070 0E000000 		.4byte	.LVL8
 4407 0074 14000000 		.4byte	.LVL10
 4408 0078 0100     		.2byte	0x1
 4409 007a 54       		.byte	0x54
 4410 007b 14000000 		.4byte	.LVL10
 4411 007f 1C000000 		.4byte	.LFE7
 4412 0083 0100     		.2byte	0x1
 4413 0085 50       		.byte	0x50
 4414 0086 00000000 		.4byte	0
 4415 008a 00000000 		.4byte	0
 4416              	.LLST5:
 4417 008e 00000000 		.4byte	.LVL11
 4418 0092 07000000 		.4byte	.LVL12-1
 4419 0096 0100     		.2byte	0x1
 4420 0098 50       		.byte	0x50
 4421 0099 07000000 		.4byte	.LVL12-1
 4422 009d 0C000000 		.4byte	.LVL13
 4423 00a1 0100     		.2byte	0x1
 4424 00a3 54       		.byte	0x54
 4425 00a4 0C000000 		.4byte	.LVL13
 4426 00a8 28000000 		.4byte	.LFE8
 4427 00ac 0400     		.2byte	0x4
 4428 00ae F3       		.byte	0xf3
 4429 00af 01       		.uleb128 0x1
 4430 00b0 50       		.byte	0x50
 4431 00b1 9F       		.byte	0x9f
 4432 00b2 00000000 		.4byte	0
 4433 00b6 00000000 		.4byte	0
 4434              	.LLST6:
 4435 00ba 08000000 		.4byte	.LVL12
 4436 00be 1D000000 		.4byte	.LVL14-1
 4437 00c2 0100     		.2byte	0x1
 4438 00c4 50       		.byte	0x50
 4439 00c5 00000000 		.4byte	0
 4440 00c9 00000000 		.4byte	0
 4441              	.LLST7:
 4442 00cd 00000000 		.4byte	.LVL15
 4443 00d1 04000000 		.4byte	.LVL16
 4444 00d5 0100     		.2byte	0x1
 4445 00d7 50       		.byte	0x50
 4446 00d8 04000000 		.4byte	.LVL16
 4447 00dc 14000000 		.4byte	.LFE14
 4448 00e0 0100     		.2byte	0x1
 4449 00e2 52       		.byte	0x52
 4450 00e3 00000000 		.4byte	0
 4451 00e7 00000000 		.4byte	0
 4452              	.LLST8:
 4453 00eb 00000000 		.4byte	.LVL21
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccBBFZQS.s 			page 138


 4454 00ef 04000000 		.4byte	.LVL22
 4455 00f3 0100     		.2byte	0x1
 4456 00f5 50       		.byte	0x50
 4457 00f6 04000000 		.4byte	.LVL22
 4458 00fa 14000000 		.4byte	.LFE23
 4459 00fe 0400     		.2byte	0x4
 4460 0100 F3       		.byte	0xf3
 4461 0101 01       		.uleb128 0x1
 4462 0102 50       		.byte	0x50
 4463 0103 9F       		.byte	0x9f
 4464 0104 00000000 		.4byte	0
 4465 0108 00000000 		.4byte	0
 4466              	.LLST9:
 4467 010c 00000000 		.4byte	.LVL23
 4468 0110 08000000 		.4byte	.LVL24
 4469 0114 0100     		.2byte	0x1
 4470 0116 50       		.byte	0x50
 4471 0117 08000000 		.4byte	.LVL24
 4472 011b 18000000 		.4byte	.LFE24
 4473 011f 0400     		.2byte	0x4
 4474 0121 F3       		.byte	0xf3
 4475 0122 01       		.uleb128 0x1
 4476 0123 50       		.byte	0x50
 4477 0124 9F       		.byte	0x9f
 4478 0125 00000000 		.4byte	0
 4479 0129 00000000 		.4byte	0
 4480              	.LLST10:
 4481 012d 00000000 		.4byte	.LVL25
 4482 0131 04000000 		.4byte	.LVL26
 4483 0135 0100     		.2byte	0x1
 4484 0137 50       		.byte	0x50
 4485 0138 04000000 		.4byte	.LVL26
 4486 013c 14000000 		.4byte	.LFE25
 4487 0140 0400     		.2byte	0x4
 4488 0142 F3       		.byte	0xf3
 4489 0143 01       		.uleb128 0x1
 4490 0144 50       		.byte	0x50
 4491 0145 9F       		.byte	0x9f
 4492 0146 00000000 		.4byte	0
 4493 014a 00000000 		.4byte	0
 4494              	.LLST11:
 4495 014e 00000000 		.4byte	.LVL27
 4496 0152 04000000 		.4byte	.LVL28
 4497 0156 0100     		.2byte	0x1
 4498 0158 50       		.byte	0x50
 4499 0159 04000000 		.4byte	.LVL28
 4500 015d 14000000 		.4byte	.LFE26
 4501 0161 0400     		.2byte	0x4
 4502 0163 F3       		.byte	0xf3
 4503 0164 01       		.uleb128 0x1
 4504 0165 50       		.byte	0x50
 4505 0166 9F       		.byte	0x9f
 4506 0167 00000000 		.4byte	0
 4507 016b 00000000 		.4byte	0
 4508              	.LLST12:
 4509 016f 00000000 		.4byte	.LVL29
 4510 0173 04000000 		.4byte	.LVL30
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccBBFZQS.s 			page 139


 4511 0177 0100     		.2byte	0x1
 4512 0179 50       		.byte	0x50
 4513 017a 04000000 		.4byte	.LVL30
 4514 017e 14000000 		.4byte	.LFE27
 4515 0182 0400     		.2byte	0x4
 4516 0184 F3       		.byte	0xf3
 4517 0185 01       		.uleb128 0x1
 4518 0186 50       		.byte	0x50
 4519 0187 9F       		.byte	0x9f
 4520 0188 00000000 		.4byte	0
 4521 018c 00000000 		.4byte	0
 4522              	.LLST13:
 4523 0190 00000000 		.4byte	.LVL32
 4524 0194 0C000000 		.4byte	.LVL34
 4525 0198 0100     		.2byte	0x1
 4526 019a 50       		.byte	0x50
 4527 019b 0C000000 		.4byte	.LVL34
 4528 019f 20000000 		.4byte	.LFE17
 4529 01a3 0400     		.2byte	0x4
 4530 01a5 F3       		.byte	0xf3
 4531 01a6 01       		.uleb128 0x1
 4532 01a7 50       		.byte	0x50
 4533 01a8 9F       		.byte	0x9f
 4534 01a9 00000000 		.4byte	0
 4535 01ad 00000000 		.4byte	0
 4536              	.LLST14:
 4537 01b1 00000000 		.4byte	.LVL32
 4538 01b5 0F000000 		.4byte	.LVL35-1
 4539 01b9 0100     		.2byte	0x1
 4540 01bb 51       		.byte	0x51
 4541 01bc 0F000000 		.4byte	.LVL35-1
 4542 01c0 1E000000 		.4byte	.LVL37
 4543 01c4 0100     		.2byte	0x1
 4544 01c6 55       		.byte	0x55
 4545 01c7 1E000000 		.4byte	.LVL37
 4546 01cb 20000000 		.4byte	.LFE17
 4547 01cf 0400     		.2byte	0x4
 4548 01d1 F3       		.byte	0xf3
 4549 01d2 01       		.uleb128 0x1
 4550 01d3 51       		.byte	0x51
 4551 01d4 9F       		.byte	0x9f
 4552 01d5 00000000 		.4byte	0
 4553 01d9 00000000 		.4byte	0
 4554              	.LLST15:
 4555 01dd 00000000 		.4byte	.LVL38
 4556 01e1 0A000000 		.4byte	.LVL40
 4557 01e5 0100     		.2byte	0x1
 4558 01e7 50       		.byte	0x50
 4559 01e8 0A000000 		.4byte	.LVL40
 4560 01ec 1C000000 		.4byte	.LFE18
 4561 01f0 0400     		.2byte	0x4
 4562 01f2 F3       		.byte	0xf3
 4563 01f3 01       		.uleb128 0x1
 4564 01f4 50       		.byte	0x50
 4565 01f5 9F       		.byte	0x9f
 4566 01f6 00000000 		.4byte	0
 4567 01fa 00000000 		.4byte	0
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccBBFZQS.s 			page 140


 4568              	.LLST16:
 4569 01fe 00000000 		.4byte	.LVL42
 4570 0202 0C000000 		.4byte	.LVL44
 4571 0206 0100     		.2byte	0x1
 4572 0208 50       		.byte	0x50
 4573 0209 0C000000 		.4byte	.LVL44
 4574 020d 24000000 		.4byte	.LFE19
 4575 0211 0400     		.2byte	0x4
 4576 0213 F3       		.byte	0xf3
 4577 0214 01       		.uleb128 0x1
 4578 0215 50       		.byte	0x50
 4579 0216 9F       		.byte	0x9f
 4580 0217 00000000 		.4byte	0
 4581 021b 00000000 		.4byte	0
 4582              	.LLST17:
 4583 021f 00000000 		.4byte	.LVL42
 4584 0223 0F000000 		.4byte	.LVL45-1
 4585 0227 0100     		.2byte	0x1
 4586 0229 51       		.byte	0x51
 4587 022a 0F000000 		.4byte	.LVL45-1
 4588 022e 1C000000 		.4byte	.LVL47
 4589 0232 0100     		.2byte	0x1
 4590 0234 55       		.byte	0x55
 4591 0235 1C000000 		.4byte	.LVL47
 4592 0239 24000000 		.4byte	.LFE19
 4593 023d 0400     		.2byte	0x4
 4594 023f F3       		.byte	0xf3
 4595 0240 01       		.uleb128 0x1
 4596 0241 51       		.byte	0x51
 4597 0242 9F       		.byte	0x9f
 4598 0243 00000000 		.4byte	0
 4599 0247 00000000 		.4byte	0
 4600              	.LLST18:
 4601 024b 00000000 		.4byte	.LVL48
 4602 024f 0A000000 		.4byte	.LVL50
 4603 0253 0100     		.2byte	0x1
 4604 0255 50       		.byte	0x50
 4605 0256 0A000000 		.4byte	.LVL50
 4606 025a 20000000 		.4byte	.LFE20
 4607 025e 0400     		.2byte	0x4
 4608 0260 F3       		.byte	0xf3
 4609 0261 01       		.uleb128 0x1
 4610 0262 50       		.byte	0x50
 4611 0263 9F       		.byte	0x9f
 4612 0264 00000000 		.4byte	0
 4613 0268 00000000 		.4byte	0
 4614              	.LLST19:
 4615 026c 00000000 		.4byte	.LVL52
 4616 0270 0C000000 		.4byte	.LVL53
 4617 0274 0100     		.2byte	0x1
 4618 0276 50       		.byte	0x50
 4619 0277 0C000000 		.4byte	.LVL53
 4620 027b 4C000000 		.4byte	.LFE21
 4621 027f 0400     		.2byte	0x4
 4622 0281 F3       		.byte	0xf3
 4623 0282 01       		.uleb128 0x1
 4624 0283 50       		.byte	0x50
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccBBFZQS.s 			page 141


 4625 0284 9F       		.byte	0x9f
 4626 0285 00000000 		.4byte	0
 4627 0289 00000000 		.4byte	0
 4628              	.LLST20:
 4629 028d 00000000 		.4byte	.LVL52
 4630 0291 0F000000 		.4byte	.LVL54-1
 4631 0295 0100     		.2byte	0x1
 4632 0297 51       		.byte	0x51
 4633 0298 0F000000 		.4byte	.LVL54-1
 4634 029c 4C000000 		.4byte	.LFE21
 4635 02a0 0400     		.2byte	0x4
 4636 02a2 F3       		.byte	0xf3
 4637 02a3 01       		.uleb128 0x1
 4638 02a4 51       		.byte	0x51
 4639 02a5 9F       		.byte	0x9f
 4640 02a6 00000000 		.4byte	0
 4641 02aa 00000000 		.4byte	0
 4642              	.LLST21:
 4643 02ae 26000000 		.4byte	.LVL57
 4644 02b2 43000000 		.4byte	.LVL62-1
 4645 02b6 0100     		.2byte	0x1
 4646 02b8 50       		.byte	0x50
 4647 02b9 00000000 		.4byte	0
 4648 02bd 00000000 		.4byte	0
 4649              	.LLST22:
 4650 02c1 22000000 		.4byte	.LVL56
 4651 02c5 3C000000 		.4byte	.LVL60
 4652 02c9 0100     		.2byte	0x1
 4653 02cb 55       		.byte	0x55
 4654 02cc 00000000 		.4byte	0
 4655 02d0 00000000 		.4byte	0
 4656              	.LLST23:
 4657 02d4 32000000 		.4byte	.LVL58
 4658 02d8 3E000000 		.4byte	.LVL61
 4659 02dc 0100     		.2byte	0x1
 4660 02de 53       		.byte	0x53
 4661 02df 3E000000 		.4byte	.LVL61
 4662 02e3 44000000 		.4byte	.LVL63
 4663 02e7 0100     		.2byte	0x1
 4664 02e9 55       		.byte	0x55
 4665 02ea 00000000 		.4byte	0
 4666 02ee 00000000 		.4byte	0
 4667              	.LLST24:
 4668 02f2 00000000 		.4byte	.LVL64
 4669 02f6 0A000000 		.4byte	.LVL65
 4670 02fa 0100     		.2byte	0x1
 4671 02fc 50       		.byte	0x50
 4672 02fd 0A000000 		.4byte	.LVL65
 4673 0301 2C000000 		.4byte	.LFE22
 4674 0305 0400     		.2byte	0x4
 4675 0307 F3       		.byte	0xf3
 4676 0308 01       		.uleb128 0x1
 4677 0309 50       		.byte	0x50
 4678 030a 9F       		.byte	0x9f
 4679 030b 00000000 		.4byte	0
 4680 030f 00000000 		.4byte	0
 4681              	.LLST25:
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccBBFZQS.s 			page 142


 4682 0313 24000000 		.4byte	.LVL67
 4683 0317 26000000 		.4byte	.LVL68
 4684 031b 0100     		.2byte	0x1
 4685 031d 50       		.byte	0x50
 4686 031e 00000000 		.4byte	0
 4687 0322 00000000 		.4byte	0
 4688              	.LLST26:
 4689 0326 00000000 		.4byte	.LVL69
 4690 032a 06000000 		.4byte	.LVL70
 4691 032e 0100     		.2byte	0x1
 4692 0330 50       		.byte	0x50
 4693 0331 06000000 		.4byte	.LVL70
 4694 0335 26000000 		.4byte	.LVL74
 4695 0339 0100     		.2byte	0x1
 4696 033b 54       		.byte	0x54
 4697 033c 00000000 		.4byte	0
 4698 0340 00000000 		.4byte	0
 4699              	.LLST27:
 4700 0344 12000000 		.4byte	.LVL78
 4701 0348 16000000 		.4byte	.LVL79
 4702 034c 0200     		.2byte	0x2
 4703 034e 30       		.byte	0x30
 4704 034f 9F       		.byte	0x9f
 4705 0350 16000000 		.4byte	.LVL79
 4706 0354 28000000 		.4byte	.LVL80
 4707 0358 0100     		.2byte	0x1
 4708 035a 53       		.byte	0x53
 4709 035b 28000000 		.4byte	.LVL80
 4710 035f 2A000000 		.4byte	.LVL81
 4711 0363 0300     		.2byte	0x3
 4712 0365 73       		.byte	0x73
 4713 0366 7D       		.sleb128 -3
 4714 0367 9F       		.byte	0x9f
 4715 0368 2A000000 		.4byte	.LVL81
 4716 036c 32000000 		.4byte	.LVL83
 4717 0370 0100     		.2byte	0x1
 4718 0372 53       		.byte	0x53
 4719 0373 00000000 		.4byte	0
 4720 0377 00000000 		.4byte	0
 4721              	.LLST28:
 4722 037b 04000000 		.4byte	.LVL75
 4723 037f 28000000 		.4byte	.LVL80
 4724 0383 0200     		.2byte	0x2
 4725 0385 33       		.byte	0x33
 4726 0386 9F       		.byte	0x9f
 4727 0387 28000000 		.4byte	.LVL80
 4728 038b 2A000000 		.4byte	.LVL81
 4729 038f 0100     		.2byte	0x1
 4730 0391 53       		.byte	0x53
 4731 0392 2A000000 		.4byte	.LVL81
 4732 0396 32000000 		.4byte	.LVL83
 4733 039a 0200     		.2byte	0x2
 4734 039c 33       		.byte	0x33
 4735 039d 9F       		.byte	0x9f
 4736 039e 32000000 		.4byte	.LVL83
 4737 03a2 80000000 		.4byte	.LVL90
 4738 03a6 0100     		.2byte	0x1
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccBBFZQS.s 			page 143


 4739 03a8 53       		.byte	0x53
 4740 03a9 00000000 		.4byte	0
 4741 03ad 00000000 		.4byte	0
 4742              	.LLST29:
 4743 03b1 12000000 		.4byte	.LVL78
 4744 03b5 BA000000 		.4byte	.LVL98
 4745 03b9 0100     		.2byte	0x1
 4746 03bb 54       		.byte	0x54
 4747 03bc 00000000 		.4byte	0
 4748 03c0 00000000 		.4byte	0
 4749              	.LLST30:
 4750 03c4 50000000 		.4byte	.LVL84
 4751 03c8 66000000 		.4byte	.LVL85
 4752 03cc 0100     		.2byte	0x1
 4753 03ce 51       		.byte	0x51
 4754 03cf 66000000 		.4byte	.LVL85
 4755 03d3 6C000000 		.4byte	.LVL86
 4756 03d7 0100     		.2byte	0x1
 4757 03d9 52       		.byte	0x52
 4758 03da 6C000000 		.4byte	.LVL86
 4759 03de 72000000 		.4byte	.LVL87
 4760 03e2 0100     		.2byte	0x1
 4761 03e4 51       		.byte	0x51
 4762 03e5 72000000 		.4byte	.LVL87
 4763 03e9 74000000 		.4byte	.LVL88
 4764 03ed 0700     		.2byte	0x7
 4765 03ef 72       		.byte	0x72
 4766 03f0 00       		.sleb128 0
 4767 03f1 44       		.byte	0x44
 4768 03f2 40       		.byte	0x40
 4769 03f3 24       		.byte	0x24
 4770 03f4 21       		.byte	0x21
 4771 03f5 9F       		.byte	0x9f
 4772 03f6 74000000 		.4byte	.LVL88
 4773 03fa 76000000 		.4byte	.LVL89
 4774 03fe 0100     		.2byte	0x1
 4775 0400 52       		.byte	0x52
 4776 0401 76000000 		.4byte	.LVL89
 4777 0405 8E000000 		.4byte	.LVL95
 4778 0409 0100     		.2byte	0x1
 4779 040b 51       		.byte	0x51
 4780 040c 8E000000 		.4byte	.LVL95
 4781 0410 9D000000 		.4byte	.LVL96-1
 4782 0414 0100     		.2byte	0x1
 4783 0416 52       		.byte	0x52
 4784 0417 00000000 		.4byte	0
 4785 041b 00000000 		.4byte	0
 4786              	.LLST31:
 4787 041f 04000000 		.4byte	.LVL75
 4788 0423 82000000 		.4byte	.LVL91
 4789 0427 0200     		.2byte	0x2
 4790 0429 30       		.byte	0x30
 4791 042a 9F       		.byte	0x9f
 4792 042b 82000000 		.4byte	.LVL91
 4793 042f 84000000 		.4byte	.LVL92
 4794 0433 0600     		.2byte	0x6
 4795 0435 72       		.byte	0x72
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccBBFZQS.s 			page 144


 4796 0436 00       		.sleb128 0
 4797 0437 73       		.byte	0x73
 4798 0438 00       		.sleb128 0
 4799 0439 22       		.byte	0x22
 4800 043a 9F       		.byte	0x9f
 4801 043b 84000000 		.4byte	.LVL92
 4802 043f 8C000000 		.4byte	.LVL94
 4803 0443 0100     		.2byte	0x1
 4804 0445 52       		.byte	0x52
 4805 0446 00000000 		.4byte	0
 4806 044a 00000000 		.4byte	0
 4807              	.LLST32:
 4808 044e 00000000 		.4byte	.LVL99
 4809 0452 09000000 		.4byte	.LVL101-1
 4810 0456 0100     		.2byte	0x1
 4811 0458 50       		.byte	0x50
 4812 0459 09000000 		.4byte	.LVL101-1
 4813 045d 2C000000 		.4byte	.LVL108
 4814 0461 0100     		.2byte	0x1
 4815 0463 54       		.byte	0x54
 4816 0464 2C000000 		.4byte	.LVL108
 4817 0468 5E000000 		.4byte	.LVL111
 4818 046c 0300     		.2byte	0x3
 4819 046e 74       		.byte	0x74
 4820 046f 03       		.sleb128 3
 4821 0470 9F       		.byte	0x9f
 4822 0471 5E000000 		.4byte	.LVL111
 4823 0475 80000000 		.4byte	.LFE9
 4824 0479 0400     		.2byte	0x4
 4825 047b F3       		.byte	0xf3
 4826 047c 01       		.uleb128 0x1
 4827 047d 50       		.byte	0x50
 4828 047e 9F       		.byte	0x9f
 4829 047f 00000000 		.4byte	0
 4830 0483 00000000 		.4byte	0
 4831              	.LLST33:
 4832 0487 06000000 		.4byte	.LVL100
 4833 048b 14000000 		.4byte	.LVL104
 4834 048f 0200     		.2byte	0x2
 4835 0491 30       		.byte	0x30
 4836 0492 9F       		.byte	0x9f
 4837 0493 14000000 		.4byte	.LVL104
 4838 0497 1C000000 		.4byte	.LVL106
 4839 049b 0200     		.2byte	0x2
 4840 049d 31       		.byte	0x31
 4841 049e 9F       		.byte	0x9f
 4842 049f 1C000000 		.4byte	.LVL106
 4843 04a3 1E000000 		.4byte	.LVL107
 4844 04a7 0200     		.2byte	0x2
 4845 04a9 30       		.byte	0x30
 4846 04aa 9F       		.byte	0x9f
 4847 04ab 1E000000 		.4byte	.LVL107
 4848 04af 55000000 		.4byte	.LVL109-1
 4849 04b3 0100     		.2byte	0x1
 4850 04b5 51       		.byte	0x51
 4851 04b6 00000000 		.4byte	0
 4852 04ba 00000000 		.4byte	0
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccBBFZQS.s 			page 145


 4853              	.LLST34:
 4854 04be 0C000000 		.4byte	.LVL102
 4855 04c2 5E000000 		.4byte	.LVL112
 4856 04c6 0100     		.2byte	0x1
 4857 04c8 55       		.byte	0x55
 4858 04c9 00000000 		.4byte	0
 4859 04cd 00000000 		.4byte	0
 4860              	.LLST35:
 4861 04d1 00000000 		.4byte	.LVL113
 4862 04d5 08000000 		.4byte	.LVL114
 4863 04d9 0100     		.2byte	0x1
 4864 04db 50       		.byte	0x50
 4865 04dc 08000000 		.4byte	.LVL114
 4866 04e0 14000000 		.4byte	.LFE31
 4867 04e4 0400     		.2byte	0x4
 4868 04e6 F3       		.byte	0xf3
 4869 04e7 01       		.uleb128 0x1
 4870 04e8 50       		.byte	0x50
 4871 04e9 9F       		.byte	0x9f
 4872 04ea 00000000 		.4byte	0
 4873 04ee 00000000 		.4byte	0
 4874              	.LLST36:
 4875 04f2 00000000 		.4byte	.LVL116
 4876 04f6 14000000 		.4byte	.LVL117
 4877 04fa 0100     		.2byte	0x1
 4878 04fc 50       		.byte	0x50
 4879 04fd 14000000 		.4byte	.LVL117
 4880 0501 18000000 		.4byte	.LVL118
 4881 0505 0100     		.2byte	0x1
 4882 0507 53       		.byte	0x53
 4883 0508 18000000 		.4byte	.LVL118
 4884 050c 44000000 		.4byte	.LFE10
 4885 0510 0400     		.2byte	0x4
 4886 0512 F3       		.byte	0xf3
 4887 0513 01       		.uleb128 0x1
 4888 0514 50       		.byte	0x50
 4889 0515 9F       		.byte	0x9f
 4890 0516 00000000 		.4byte	0
 4891 051a 00000000 		.4byte	0
 4892              	.LLST37:
 4893 051e 00000000 		.4byte	.LVL121
 4894 0522 1A000000 		.4byte	.LVL122
 4895 0526 0100     		.2byte	0x1
 4896 0528 50       		.byte	0x50
 4897 0529 1A000000 		.4byte	.LVL122
 4898 052d 4C000000 		.4byte	.LFE32
 4899 0531 0400     		.2byte	0x4
 4900 0533 F3       		.byte	0xf3
 4901 0534 01       		.uleb128 0x1
 4902 0535 50       		.byte	0x50
 4903 0536 9F       		.byte	0x9f
 4904 0537 00000000 		.4byte	0
 4905 053b 00000000 		.4byte	0
 4906              	.LLST38:
 4907 053f 00000000 		.4byte	.LVL126
 4908 0543 02000000 		.4byte	.LVL127
 4909 0547 0100     		.2byte	0x1
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccBBFZQS.s 			page 146


 4910 0549 50       		.byte	0x50
 4911 054a 02000000 		.4byte	.LVL127
 4912 054e 10000000 		.4byte	.LFE39
 4913 0552 0400     		.2byte	0x4
 4914 0554 F3       		.byte	0xf3
 4915 0555 01       		.uleb128 0x1
 4916 0556 50       		.byte	0x50
 4917 0557 9F       		.byte	0x9f
 4918 0558 00000000 		.4byte	0
 4919 055c 00000000 		.4byte	0
 4920              	.LLST39:
 4921 0560 0C000000 		.4byte	.LVL130
 4922 0564 1C000000 		.4byte	.LVL133
 4923 0568 0100     		.2byte	0x1
 4924 056a 54       		.byte	0x54
 4925 056b 1E000000 		.4byte	.LVL134
 4926 056f 22000000 		.4byte	.LVL135
 4927 0573 0100     		.2byte	0x1
 4928 0575 54       		.byte	0x54
 4929 0576 00000000 		.4byte	0
 4930 057a 00000000 		.4byte	0
 4931              	.LLST40:
 4932 057e 02000000 		.4byte	.LVL136
 4933 0582 06000000 		.4byte	.LVL137
 4934 0586 0200     		.2byte	0x2
 4935 0588 30       		.byte	0x30
 4936 0589 9F       		.byte	0x9f
 4937 058a 06000000 		.4byte	.LVL137
 4938 058e 1B000000 		.4byte	.LVL139-1
 4939 0592 0100     		.2byte	0x1
 4940 0594 53       		.byte	0x53
 4941 0595 00000000 		.4byte	0
 4942 0599 00000000 		.4byte	0
 4943              	.LLST41:
 4944 059d 00000000 		.4byte	.LVL147
 4945 05a1 06000000 		.4byte	.LVL148
 4946 05a5 0100     		.2byte	0x1
 4947 05a7 50       		.byte	0x50
 4948 05a8 06000000 		.4byte	.LVL148
 4949 05ac 10000000 		.4byte	.LFE45
 4950 05b0 0400     		.2byte	0x4
 4951 05b2 F3       		.byte	0xf3
 4952 05b3 01       		.uleb128 0x1
 4953 05b4 50       		.byte	0x50
 4954 05b5 9F       		.byte	0x9f
 4955 05b6 00000000 		.4byte	0
 4956 05ba 00000000 		.4byte	0
 4957              	.LLST42:
 4958 05be 00000000 		.4byte	.LVL149
 4959 05c2 02000000 		.4byte	.LVL150
 4960 05c6 0100     		.2byte	0x1
 4961 05c8 50       		.byte	0x50
 4962 05c9 02000000 		.4byte	.LVL150
 4963 05cd 0C000000 		.4byte	.LFE46
 4964 05d1 0400     		.2byte	0x4
 4965 05d3 F3       		.byte	0xf3
 4966 05d4 01       		.uleb128 0x1
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccBBFZQS.s 			page 147


 4967 05d5 50       		.byte	0x50
 4968 05d6 9F       		.byte	0x9f
 4969 05d7 00000000 		.4byte	0
 4970 05db 00000000 		.4byte	0
 4971              	.LLST43:
 4972 05df 00000000 		.4byte	.LVL152
 4973 05e3 0A000000 		.4byte	.LVL154
 4974 05e7 0100     		.2byte	0x1
 4975 05e9 50       		.byte	0x50
 4976 05ea 0A000000 		.4byte	.LVL154
 4977 05ee 20000000 		.4byte	.LFE49
 4978 05f2 0400     		.2byte	0x4
 4979 05f4 F3       		.byte	0xf3
 4980 05f5 01       		.uleb128 0x1
 4981 05f6 50       		.byte	0x50
 4982 05f7 9F       		.byte	0x9f
 4983 05f8 00000000 		.4byte	0
 4984 05fc 00000000 		.4byte	0
 4985              	.LLST44:
 4986 0600 08000000 		.4byte	.LVL153
 4987 0604 12000000 		.4byte	.LVL155
 4988 0608 0100     		.2byte	0x1
 4989 060a 53       		.byte	0x53
 4990 060b 12000000 		.4byte	.LVL155
 4991 060f 20000000 		.4byte	.LFE49
 4992 0613 0100     		.2byte	0x1
 4993 0615 50       		.byte	0x50
 4994 0616 00000000 		.4byte	0
 4995 061a 00000000 		.4byte	0
 4996              	.LLST45:
 4997 061e 00000000 		.4byte	.LVL156
 4998 0622 0A000000 		.4byte	.LVL158
 4999 0626 0100     		.2byte	0x1
 5000 0628 50       		.byte	0x50
 5001 0629 0A000000 		.4byte	.LVL158
 5002 062d 20000000 		.4byte	.LFE50
 5003 0631 0400     		.2byte	0x4
 5004 0633 F3       		.byte	0xf3
 5005 0634 01       		.uleb128 0x1
 5006 0635 50       		.byte	0x50
 5007 0636 9F       		.byte	0x9f
 5008 0637 00000000 		.4byte	0
 5009 063b 00000000 		.4byte	0
 5010              	.LLST46:
 5011 063f 08000000 		.4byte	.LVL157
 5012 0643 12000000 		.4byte	.LVL159
 5013 0647 0100     		.2byte	0x1
 5014 0649 53       		.byte	0x53
 5015 064a 12000000 		.4byte	.LVL159
 5016 064e 20000000 		.4byte	.LFE50
 5017 0652 0100     		.2byte	0x1
 5018 0654 50       		.byte	0x50
 5019 0655 00000000 		.4byte	0
 5020 0659 00000000 		.4byte	0
 5021              	.LLST47:
 5022 065d 00000000 		.4byte	.LVL160
 5023 0661 0A000000 		.4byte	.LVL162
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccBBFZQS.s 			page 148


 5024 0665 0100     		.2byte	0x1
 5025 0667 50       		.byte	0x50
 5026 0668 0A000000 		.4byte	.LVL162
 5027 066c 20000000 		.4byte	.LFE51
 5028 0670 0400     		.2byte	0x4
 5029 0672 F3       		.byte	0xf3
 5030 0673 01       		.uleb128 0x1
 5031 0674 50       		.byte	0x50
 5032 0675 9F       		.byte	0x9f
 5033 0676 00000000 		.4byte	0
 5034 067a 00000000 		.4byte	0
 5035              	.LLST48:
 5036 067e 08000000 		.4byte	.LVL161
 5037 0682 12000000 		.4byte	.LVL163
 5038 0686 0100     		.2byte	0x1
 5039 0688 53       		.byte	0x53
 5040 0689 12000000 		.4byte	.LVL163
 5041 068d 20000000 		.4byte	.LFE51
 5042 0691 0100     		.2byte	0x1
 5043 0693 50       		.byte	0x50
 5044 0694 00000000 		.4byte	0
 5045 0698 00000000 		.4byte	0
 5046              	.LLST49:
 5047 069c 00000000 		.4byte	.LVL164
 5048 06a0 08000000 		.4byte	.LVL165
 5049 06a4 0100     		.2byte	0x1
 5050 06a6 50       		.byte	0x50
 5051 06a7 08000000 		.4byte	.LVL165
 5052 06ab 1C000000 		.4byte	.LVL169
 5053 06af 0400     		.2byte	0x4
 5054 06b1 F3       		.byte	0xf3
 5055 06b2 01       		.uleb128 0x1
 5056 06b3 50       		.byte	0x50
 5057 06b4 9F       		.byte	0x9f
 5058 06b5 1C000000 		.4byte	.LVL169
 5059 06b9 22000000 		.4byte	.LVL170
 5060 06bd 0100     		.2byte	0x1
 5061 06bf 50       		.byte	0x50
 5062 06c0 22000000 		.4byte	.LVL170
 5063 06c4 36000000 		.4byte	.LVL174
 5064 06c8 0400     		.2byte	0x4
 5065 06ca F3       		.byte	0xf3
 5066 06cb 01       		.uleb128 0x1
 5067 06cc 50       		.byte	0x50
 5068 06cd 9F       		.byte	0x9f
 5069 06ce 36000000 		.4byte	.LVL174
 5070 06d2 3C000000 		.4byte	.LVL175
 5071 06d6 0100     		.2byte	0x1
 5072 06d8 50       		.byte	0x50
 5073 06d9 3C000000 		.4byte	.LVL175
 5074 06dd 50000000 		.4byte	.LVL179
 5075 06e1 0400     		.2byte	0x4
 5076 06e3 F3       		.byte	0xf3
 5077 06e4 01       		.uleb128 0x1
 5078 06e5 50       		.byte	0x50
 5079 06e6 9F       		.byte	0x9f
 5080 06e7 50000000 		.4byte	.LVL179
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccBBFZQS.s 			page 149


 5081 06eb 52000000 		.4byte	.LVL180
 5082 06ef 0100     		.2byte	0x1
 5083 06f1 50       		.byte	0x50
 5084 06f2 52000000 		.4byte	.LVL180
 5085 06f6 68000000 		.4byte	.LFE52
 5086 06fa 0400     		.2byte	0x4
 5087 06fc F3       		.byte	0xf3
 5088 06fd 01       		.uleb128 0x1
 5089 06fe 50       		.byte	0x50
 5090 06ff 9F       		.byte	0x9f
 5091 0700 00000000 		.4byte	0
 5092 0704 00000000 		.4byte	0
 5093              	.LLST50:
 5094 0708 00000000 		.4byte	.LVL164
 5095 070c 10000000 		.4byte	.LVL167
 5096 0710 0100     		.2byte	0x1
 5097 0712 51       		.byte	0x51
 5098 0713 10000000 		.4byte	.LVL167
 5099 0717 1C000000 		.4byte	.LVL169
 5100 071b 0400     		.2byte	0x4
 5101 071d F3       		.byte	0xf3
 5102 071e 01       		.uleb128 0x1
 5103 071f 51       		.byte	0x51
 5104 0720 9F       		.byte	0x9f
 5105 0721 1C000000 		.4byte	.LVL169
 5106 0725 2A000000 		.4byte	.LVL172
 5107 0729 0100     		.2byte	0x1
 5108 072b 51       		.byte	0x51
 5109 072c 2A000000 		.4byte	.LVL172
 5110 0730 36000000 		.4byte	.LVL174
 5111 0734 0400     		.2byte	0x4
 5112 0736 F3       		.byte	0xf3
 5113 0737 01       		.uleb128 0x1
 5114 0738 51       		.byte	0x51
 5115 0739 9F       		.byte	0x9f
 5116 073a 36000000 		.4byte	.LVL174
 5117 073e 44000000 		.4byte	.LVL177
 5118 0742 0100     		.2byte	0x1
 5119 0744 51       		.byte	0x51
 5120 0745 44000000 		.4byte	.LVL177
 5121 0749 50000000 		.4byte	.LVL179
 5122 074d 0400     		.2byte	0x4
 5123 074f F3       		.byte	0xf3
 5124 0750 01       		.uleb128 0x1
 5125 0751 51       		.byte	0x51
 5126 0752 9F       		.byte	0x9f
 5127 0753 50000000 		.4byte	.LVL179
 5128 0757 55000000 		.4byte	.LVL181-1
 5129 075b 0100     		.2byte	0x1
 5130 075d 51       		.byte	0x51
 5131 075e 55000000 		.4byte	.LVL181-1
 5132 0762 68000000 		.4byte	.LFE52
 5133 0766 0400     		.2byte	0x4
 5134 0768 F3       		.byte	0xf3
 5135 0769 01       		.uleb128 0x1
 5136 076a 51       		.byte	0x51
 5137 076b 9F       		.byte	0x9f
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccBBFZQS.s 			page 150


 5138 076c 00000000 		.4byte	0
 5139 0770 00000000 		.4byte	0
 5140              	.LLST51:
 5141 0774 0E000000 		.4byte	.LVL166
 5142 0778 18000000 		.4byte	.LVL168
 5143 077c 0100     		.2byte	0x1
 5144 077e 53       		.byte	0x53
 5145 077f 18000000 		.4byte	.LVL168
 5146 0783 1C000000 		.4byte	.LVL169
 5147 0787 0100     		.2byte	0x1
 5148 0789 51       		.byte	0x51
 5149 078a 28000000 		.4byte	.LVL171
 5150 078e 32000000 		.4byte	.LVL173
 5151 0792 0100     		.2byte	0x1
 5152 0794 53       		.byte	0x53
 5153 0795 32000000 		.4byte	.LVL173
 5154 0799 36000000 		.4byte	.LVL174
 5155 079d 0100     		.2byte	0x1
 5156 079f 51       		.byte	0x51
 5157 07a0 42000000 		.4byte	.LVL176
 5158 07a4 4C000000 		.4byte	.LVL178
 5159 07a8 0100     		.2byte	0x1
 5160 07aa 53       		.byte	0x53
 5161 07ab 4C000000 		.4byte	.LVL178
 5162 07af 50000000 		.4byte	.LVL179
 5163 07b3 0100     		.2byte	0x1
 5164 07b5 51       		.byte	0x51
 5165 07b6 00000000 		.4byte	0
 5166 07ba 00000000 		.4byte	0
 5167              		.section	.debug_aranges,"",%progbits
 5168 0000 B4010000 		.4byte	0x1b4
 5169 0004 0200     		.2byte	0x2
 5170 0006 00000000 		.4byte	.Ldebug_info0
 5171 000a 04       		.byte	0x4
 5172 000b 00       		.byte	0
 5173 000c 0000     		.2byte	0
 5174 000e 0000     		.2byte	0
 5175 0010 00000000 		.4byte	.LFB1
 5176 0014 14000000 		.4byte	.LFE1-.LFB1
 5177 0018 00000000 		.4byte	.LFB4
 5178 001c 14000000 		.4byte	.LFE4-.LFB4
 5179 0020 00000000 		.4byte	.LFB2
 5180 0024 18000000 		.4byte	.LFE2-.LFB2
 5181 0028 00000000 		.4byte	.LFB5
 5182 002c 14000000 		.4byte	.LFE5-.LFB5
 5183 0030 00000000 		.4byte	.LFB6
 5184 0034 20000000 		.4byte	.LFE6-.LFB6
 5185 0038 00000000 		.4byte	.LFB7
 5186 003c 1C000000 		.4byte	.LFE7-.LFB7
 5187 0040 00000000 		.4byte	.LFB8
 5188 0044 28000000 		.4byte	.LFE8-.LFB8
 5189 0048 00000000 		.4byte	.LFB11
 5190 004c 20000000 		.4byte	.LFE11-.LFB11
 5191 0050 00000000 		.4byte	.LFB12
 5192 0054 10000000 		.4byte	.LFE12-.LFB12
 5193 0058 00000000 		.4byte	.LFB13
 5194 005c 0C000000 		.4byte	.LFE13-.LFB13
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccBBFZQS.s 			page 151


 5195 0060 00000000 		.4byte	.LFB14
 5196 0064 14000000 		.4byte	.LFE14-.LFB14
 5197 0068 00000000 		.4byte	.LFB15
 5198 006c 10000000 		.4byte	.LFE15-.LFB15
 5199 0070 00000000 		.4byte	.LFB16
 5200 0074 0C000000 		.4byte	.LFE16-.LFB16
 5201 0078 00000000 		.4byte	.LFB23
 5202 007c 14000000 		.4byte	.LFE23-.LFB23
 5203 0080 00000000 		.4byte	.LFB24
 5204 0084 18000000 		.4byte	.LFE24-.LFB24
 5205 0088 00000000 		.4byte	.LFB25
 5206 008c 14000000 		.4byte	.LFE25-.LFB25
 5207 0090 00000000 		.4byte	.LFB26
 5208 0094 14000000 		.4byte	.LFE26-.LFB26
 5209 0098 00000000 		.4byte	.LFB27
 5210 009c 14000000 		.4byte	.LFE27-.LFB27
 5211 00a0 00000000 		.4byte	.LFB28
 5212 00a4 04000000 		.4byte	.LFE28-.LFB28
 5213 00a8 00000000 		.4byte	.LFB17
 5214 00ac 20000000 		.4byte	.LFE17-.LFB17
 5215 00b0 00000000 		.4byte	.LFB18
 5216 00b4 1C000000 		.4byte	.LFE18-.LFB18
 5217 00b8 00000000 		.4byte	.LFB19
 5218 00bc 24000000 		.4byte	.LFE19-.LFB19
 5219 00c0 00000000 		.4byte	.LFB20
 5220 00c4 20000000 		.4byte	.LFE20-.LFB20
 5221 00c8 00000000 		.4byte	.LFB21
 5222 00cc 4C000000 		.4byte	.LFE21-.LFB21
 5223 00d0 00000000 		.4byte	.LFB22
 5224 00d4 2C000000 		.4byte	.LFE22-.LFB22
 5225 00d8 00000000 		.4byte	.LFB29
 5226 00dc 18000000 		.4byte	.LFE29-.LFB29
 5227 00e0 00000000 		.4byte	.LFB30
 5228 00e4 30000000 		.4byte	.LFE30-.LFB30
 5229 00e8 00000000 		.4byte	.LFB3
 5230 00ec E8000000 		.4byte	.LFE3-.LFB3
 5231 00f0 00000000 		.4byte	.LFB9
 5232 00f4 80000000 		.4byte	.LFE9-.LFB9
 5233 00f8 00000000 		.4byte	.LFB31
 5234 00fc 14000000 		.4byte	.LFE31-.LFB31
 5235 0100 00000000 		.4byte	.LFB10
 5236 0104 44000000 		.4byte	.LFE10-.LFB10
 5237 0108 00000000 		.4byte	.LFB32
 5238 010c 4C000000 		.4byte	.LFE32-.LFB32
 5239 0110 00000000 		.4byte	.LFB36
 5240 0114 10000000 		.4byte	.LFE36-.LFB36
 5241 0118 00000000 		.4byte	.LFB37
 5242 011c 10000000 		.4byte	.LFE37-.LFB37
 5243 0120 00000000 		.4byte	.LFB35
 5244 0124 18000000 		.4byte	.LFE35-.LFB35
 5245 0128 00000000 		.4byte	.LFB38
 5246 012c 10000000 		.4byte	.LFE38-.LFB38
 5247 0130 00000000 		.4byte	.LFB39
 5248 0134 10000000 		.4byte	.LFE39-.LFB39
 5249 0138 00000000 		.4byte	.LFB40
 5250 013c 10000000 		.4byte	.LFE40-.LFB40
 5251 0140 00000000 		.4byte	.LFB41
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccBBFZQS.s 			page 152


 5252 0144 10000000 		.4byte	.LFE41-.LFB41
 5253 0148 00000000 		.4byte	.LFB42
 5254 014c 20000000 		.4byte	.LFE42-.LFB42
 5255 0150 00000000 		.4byte	.LFB43
 5256 0154 10000000 		.4byte	.LFE43-.LFB43
 5257 0158 00000000 		.4byte	.LFB47
 5258 015c 28000000 		.4byte	.LFE47-.LFB47
 5259 0160 00000000 		.4byte	.LFB44
 5260 0164 0C000000 		.4byte	.LFE44-.LFB44
 5261 0168 00000000 		.4byte	.LFB34
 5262 016c 4C000000 		.4byte	.LFE34-.LFB34
 5263 0170 00000000 		.4byte	.LFB33
 5264 0174 20000000 		.4byte	.LFE33-.LFB33
 5265 0178 00000000 		.4byte	.LFB45
 5266 017c 10000000 		.4byte	.LFE45-.LFB45
 5267 0180 00000000 		.4byte	.LFB46
 5268 0184 0C000000 		.4byte	.LFE46-.LFB46
 5269 0188 00000000 		.4byte	.LFB48
 5270 018c 70000000 		.4byte	.LFE48-.LFB48
 5271 0190 00000000 		.4byte	.LFB49
 5272 0194 20000000 		.4byte	.LFE49-.LFB49
 5273 0198 00000000 		.4byte	.LFB50
 5274 019c 20000000 		.4byte	.LFE50-.LFB50
 5275 01a0 00000000 		.4byte	.LFB51
 5276 01a4 20000000 		.4byte	.LFE51-.LFB51
 5277 01a8 00000000 		.4byte	.LFB52
 5278 01ac 68000000 		.4byte	.LFE52-.LFB52
 5279 01b0 00000000 		.4byte	0
 5280 01b4 00000000 		.4byte	0
 5281              		.section	.debug_ranges,"",%progbits
 5282              	.Ldebug_ranges0:
 5283 0000 00000000 		.4byte	.LFB1
 5284 0004 14000000 		.4byte	.LFE1
 5285 0008 00000000 		.4byte	.LFB4
 5286 000c 14000000 		.4byte	.LFE4
 5287 0010 00000000 		.4byte	.LFB2
 5288 0014 18000000 		.4byte	.LFE2
 5289 0018 00000000 		.4byte	.LFB5
 5290 001c 14000000 		.4byte	.LFE5
 5291 0020 00000000 		.4byte	.LFB6
 5292 0024 20000000 		.4byte	.LFE6
 5293 0028 00000000 		.4byte	.LFB7
 5294 002c 1C000000 		.4byte	.LFE7
 5295 0030 00000000 		.4byte	.LFB8
 5296 0034 28000000 		.4byte	.LFE8
 5297 0038 00000000 		.4byte	.LFB11
 5298 003c 20000000 		.4byte	.LFE11
 5299 0040 00000000 		.4byte	.LFB12
 5300 0044 10000000 		.4byte	.LFE12
 5301 0048 00000000 		.4byte	.LFB13
 5302 004c 0C000000 		.4byte	.LFE13
 5303 0050 00000000 		.4byte	.LFB14
 5304 0054 14000000 		.4byte	.LFE14
 5305 0058 00000000 		.4byte	.LFB15
 5306 005c 10000000 		.4byte	.LFE15
 5307 0060 00000000 		.4byte	.LFB16
 5308 0064 0C000000 		.4byte	.LFE16
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccBBFZQS.s 			page 153


 5309 0068 00000000 		.4byte	.LFB23
 5310 006c 14000000 		.4byte	.LFE23
 5311 0070 00000000 		.4byte	.LFB24
 5312 0074 18000000 		.4byte	.LFE24
 5313 0078 00000000 		.4byte	.LFB25
 5314 007c 14000000 		.4byte	.LFE25
 5315 0080 00000000 		.4byte	.LFB26
 5316 0084 14000000 		.4byte	.LFE26
 5317 0088 00000000 		.4byte	.LFB27
 5318 008c 14000000 		.4byte	.LFE27
 5319 0090 00000000 		.4byte	.LFB28
 5320 0094 04000000 		.4byte	.LFE28
 5321 0098 00000000 		.4byte	.LFB17
 5322 009c 20000000 		.4byte	.LFE17
 5323 00a0 00000000 		.4byte	.LFB18
 5324 00a4 1C000000 		.4byte	.LFE18
 5325 00a8 00000000 		.4byte	.LFB19
 5326 00ac 24000000 		.4byte	.LFE19
 5327 00b0 00000000 		.4byte	.LFB20
 5328 00b4 20000000 		.4byte	.LFE20
 5329 00b8 00000000 		.4byte	.LFB21
 5330 00bc 4C000000 		.4byte	.LFE21
 5331 00c0 00000000 		.4byte	.LFB22
 5332 00c4 2C000000 		.4byte	.LFE22
 5333 00c8 00000000 		.4byte	.LFB29
 5334 00cc 18000000 		.4byte	.LFE29
 5335 00d0 00000000 		.4byte	.LFB30
 5336 00d4 30000000 		.4byte	.LFE30
 5337 00d8 00000000 		.4byte	.LFB3
 5338 00dc E8000000 		.4byte	.LFE3
 5339 00e0 00000000 		.4byte	.LFB9
 5340 00e4 80000000 		.4byte	.LFE9
 5341 00e8 00000000 		.4byte	.LFB31
 5342 00ec 14000000 		.4byte	.LFE31
 5343 00f0 00000000 		.4byte	.LFB10
 5344 00f4 44000000 		.4byte	.LFE10
 5345 00f8 00000000 		.4byte	.LFB32
 5346 00fc 4C000000 		.4byte	.LFE32
 5347 0100 00000000 		.4byte	.LFB36
 5348 0104 10000000 		.4byte	.LFE36
 5349 0108 00000000 		.4byte	.LFB37
 5350 010c 10000000 		.4byte	.LFE37
 5351 0110 00000000 		.4byte	.LFB35
 5352 0114 18000000 		.4byte	.LFE35
 5353 0118 00000000 		.4byte	.LFB38
 5354 011c 10000000 		.4byte	.LFE38
 5355 0120 00000000 		.4byte	.LFB39
 5356 0124 10000000 		.4byte	.LFE39
 5357 0128 00000000 		.4byte	.LFB40
 5358 012c 10000000 		.4byte	.LFE40
 5359 0130 00000000 		.4byte	.LFB41
 5360 0134 10000000 		.4byte	.LFE41
 5361 0138 00000000 		.4byte	.LFB42
 5362 013c 20000000 		.4byte	.LFE42
 5363 0140 00000000 		.4byte	.LFB43
 5364 0144 10000000 		.4byte	.LFE43
 5365 0148 00000000 		.4byte	.LFB47
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccBBFZQS.s 			page 154


 5366 014c 28000000 		.4byte	.LFE47
 5367 0150 00000000 		.4byte	.LFB44
 5368 0154 0C000000 		.4byte	.LFE44
 5369 0158 00000000 		.4byte	.LFB34
 5370 015c 4C000000 		.4byte	.LFE34
 5371 0160 00000000 		.4byte	.LFB33
 5372 0164 20000000 		.4byte	.LFE33
 5373 0168 00000000 		.4byte	.LFB45
 5374 016c 10000000 		.4byte	.LFE45
 5375 0170 00000000 		.4byte	.LFB46
 5376 0174 0C000000 		.4byte	.LFE46
 5377 0178 00000000 		.4byte	.LFB48
 5378 017c 70000000 		.4byte	.LFE48
 5379 0180 00000000 		.4byte	.LFB49
 5380 0184 20000000 		.4byte	.LFE49
 5381 0188 00000000 		.4byte	.LFB50
 5382 018c 20000000 		.4byte	.LFE50
 5383 0190 00000000 		.4byte	.LFB51
 5384 0194 20000000 		.4byte	.LFE51
 5385 0198 00000000 		.4byte	.LFB52
 5386 019c 68000000 		.4byte	.LFE52
 5387 01a0 00000000 		.4byte	0
 5388 01a4 00000000 		.4byte	0
 5389              		.section	.debug_line,"",%progbits
 5390              	.Ldebug_line0:
 5391 0000 16050000 		.section	.debug_str,"MS",%progbits,1
 5391      02006900 
 5391      00000201 
 5391      FB0E0D00 
 5391      01010101 
 5392              	.LASF52:
 5393 0000 72616D56 		.ascii	"ramVectorTable\000"
 5393      6563746F 
 5393      72546162 
 5393      6C6500
 5394              	.LASF10:
 5395 000f 75696E74 		.ascii	"uint16\000"
 5395      313600
 5396              	.LASF39:
 5397 0016 696E7453 		.ascii	"intState\000"
 5397      74617465 
 5397      00
 5398              	.LASF23:
 5399 001f 43795379 		.ascii	"CySysClkWriteHfclkDirect\000"
 5399      73436C6B 
 5399      57726974 
 5399      65486663 
 5399      6C6B4469 
 5400              	.LASF51:
 5401 0038 6F6C6449 		.ascii	"oldIsr\000"
 5401      737200
 5402              	.LASF93:
 5403 003f 72657456 		.ascii	"retVal\000"
 5403      616C00
 5404              	.LASF38:
 5405 0046 43794469 		.ascii	"CyDisableInts\000"
 5405      7361626C 
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccBBFZQS.s 			page 155


 5405      65496E74 
 5405      7300
 5406              	.LASF7:
 5407 0054 6C6F6E67 		.ascii	"long long unsigned int\000"
 5407      206C6F6E 
 5407      6720756E 
 5407      7369676E 
 5407      65642069 
 5408              	.LASF70:
 5409 006b 70617261 		.ascii	"parameters\000"
 5409      6D657465 
 5409      727300
 5410              	.LASF40:
 5411 0076 4379456E 		.ascii	"CyEnableInts\000"
 5411      61626C65 
 5411      496E7473 
 5411      00
 5412              	.LASF102:
 5413 0083 696E7465 		.ascii	"interfaceNumber\000"
 5413      72666163 
 5413      654E756D 
 5413      62657200 
 5414              	.LASF61:
 5415 0093 4379536F 		.ascii	"CySoftwareReset\000"
 5415      66747761 
 5415      72655265 
 5415      73657400 
 5416              	.LASF79:
 5417 00a3 43795379 		.ascii	"CySysTickEnableInterrupt\000"
 5417      73546963 
 5417      6B456E61 
 5417      626C6549 
 5417      6E746572 
 5418              	.LASF44:
 5419 00bc 4379496E 		.ascii	"CyIntGetState\000"
 5419      74476574 
 5419      53746174 
 5419      6500
 5420              	.LASF6:
 5421 00ca 6C6F6E67 		.ascii	"long long int\000"
 5421      206C6F6E 
 5421      6720696E 
 5421      7400
 5422              	.LASF0:
 5423 00d8 7369676E 		.ascii	"signed char\000"
 5423      65642063 
 5423      68617200 
 5424              	.LASF65:
 5425 00e4 66726571 		.ascii	"freq\000"
 5425      00
 5426              	.LASF77:
 5427 00e9 43794465 		.ascii	"CyDelayFreq\000"
 5427      6C617946 
 5427      72657100 
 5428              	.LASF24:
 5429 00f5 696E7465 		.ascii	"interruptState\000"
 5429      72727570 
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccBBFZQS.s 			page 156


 5429      74537461 
 5429      746500
 5430              	.LASF67:
 5431 0104 6C664C69 		.ascii	"lfLimit\000"
 5431      6D697400 
 5432              	.LASF83:
 5433 010c 43795379 		.ascii	"CySysTickGetReload\000"
 5433      73546963 
 5433      6B476574 
 5433      52656C6F 
 5433      616400
 5434              	.LASF31:
 5435 011f 43795379 		.ascii	"CySysClkImoGetWcoLock\000"
 5435      73436C6B 
 5435      496D6F47 
 5435      65745763 
 5435      6F4C6F63 
 5436              	.LASF72:
 5437 0135 77636F4C 		.ascii	"wcoLock\000"
 5437      6F636B00 
 5438              	.LASF4:
 5439 013d 6C6F6E67 		.ascii	"long int\000"
 5439      20696E74 
 5439      00
 5440              	.LASF45:
 5441 0146 4379496E 		.ascii	"CyIntDisable\000"
 5441      74446973 
 5441      61626C65 
 5441      00
 5442              	.LASF71:
 5443 0153 72656756 		.ascii	"regValues\000"
 5443      616C7565 
 5443      7300
 5444              	.LASF9:
 5445 015d 75696E74 		.ascii	"uint8\000"
 5445      3800
 5446              	.LASF106:
 5447 0163 63796465 		.ascii	"cydelayFreqKhz\000"
 5447      6C617946 
 5447      7265714B 
 5447      687A00
 5448              	.LASF73:
 5449 0172 43794465 		.ascii	"CyDelayUs\000"
 5449      6C617955 
 5449      7300
 5450              	.LASF13:
 5451 017c 646F7562 		.ascii	"double\000"
 5451      6C6500
 5452              	.LASF58:
 5453 0183 73686966 		.ascii	"shift\000"
 5453      7400
 5454              	.LASF33:
 5455 0189 43795379 		.ascii	"CySysLvdClearInterrupt\000"
 5455      734C7664 
 5455      436C6561 
 5455      72496E74 
 5455      65727275 
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccBBFZQS.s 			page 157


 5456              	.LASF11:
 5457 01a0 75696E74 		.ascii	"uint32\000"
 5457      333200
 5458              	.LASF43:
 5459 01a7 6E756D62 		.ascii	"number\000"
 5459      657200
 5460              	.LASF41:
 5461 01ae 6D61736B 		.ascii	"mask\000"
 5461      00
 5462              	.LASF34:
 5463 01b3 43795379 		.ascii	"CySysClkGetSysclkSource\000"
 5463      73436C6B 
 5463      47657453 
 5463      7973636C 
 5463      6B536F75 
 5464              	.LASF64:
 5465 01cb 43795379 		.ascii	"CySysClkImoEnableWcoLock\000"
 5465      73436C6B 
 5465      496D6F45 
 5465      6E61626C 
 5465      6557636F 
 5466              	.LASF60:
 5467 01e4 4379496E 		.ascii	"CyIntGetPriority\000"
 5467      74476574 
 5467      5072696F 
 5467      72697479 
 5467      00
 5468              	.LASF108:
 5469 01f5 63796465 		.ascii	"cydelay32kMs\000"
 5469      6C617933 
 5469      326B4D73 
 5469      00
 5470              	.LASF89:
 5471 0202 43795379 		.ascii	"CySysTickInit\000"
 5471      73546963 
 5471      6B496E69 
 5471      7400
 5472              	.LASF59:
 5473 0210 76616C75 		.ascii	"value\000"
 5473      6500
 5474              	.LASF86:
 5475 0216 636C6F63 		.ascii	"clockSource\000"
 5475      6B536F75 
 5475      72636500 
 5476              	.LASF95:
 5477 0222 43794765 		.ascii	"CyGetUniqueId\000"
 5477      74556E69 
 5477      71756549 
 5477      6400
 5478              	.LASF87:
 5479 0230 43795379 		.ascii	"CySysTickGetCountFlag\000"
 5479      73546963 
 5479      6B476574 
 5479      436F756E 
 5479      74466C61 
 5480              	.LASF8:
 5481 0246 756E7369 		.ascii	"unsigned int\000"
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccBBFZQS.s 			page 158


 5481      676E6564 
 5481      20696E74 
 5481      00
 5482              	.LASF88:
 5483 0253 43795379 		.ascii	"CySysTickClear\000"
 5483      73546963 
 5483      6B436C65 
 5483      617200
 5484              	.LASF5:
 5485 0262 6C6F6E67 		.ascii	"long unsigned int\000"
 5485      20756E73 
 5485      69676E65 
 5485      6420696E 
 5485      7400
 5486              	.LASF32:
 5487 0274 43795379 		.ascii	"CySysLvdGetInterruptSource\000"
 5487      734C7664 
 5487      47657449 
 5487      6E746572 
 5487      72757074 
 5488              	.LASF22:
 5489 028f 43795379 		.ascii	"CySysClkImoStop\000"
 5489      73436C6B 
 5489      496D6F53 
 5489      746F7000 
 5490              	.LASF113:
 5491 029f 4379456E 		.ascii	"CyEnterCriticalSection\000"
 5491      74657243 
 5491      72697469 
 5491      63616C53 
 5491      65637469 
 5492              	.LASF46:
 5493 02b6 4379496E 		.ascii	"CyIntSetPending\000"
 5493      74536574 
 5493      50656E64 
 5493      696E6700 
 5494              	.LASF94:
 5495 02c6 43795379 		.ascii	"CySysTickGetCallback\000"
 5495      73546963 
 5495      6B476574 
 5495      43616C6C 
 5495      6261636B 
 5496              	.LASF35:
 5497 02db 43795379 		.ascii	"CySysGetResetReason\000"
 5497      73476574 
 5497      52657365 
 5497      74526561 
 5497      736F6E00 
 5498              	.LASF3:
 5499 02ef 73686F72 		.ascii	"short unsigned int\000"
 5499      7420756E 
 5499      7369676E 
 5499      65642069 
 5499      6E7400
 5500              	.LASF66:
 5501 0302 72656754 		.ascii	"regTmp\000"
 5501      6D7000
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccBBFZQS.s 			page 159


 5502              	.LASF85:
 5503 0309 43795379 		.ascii	"CySysTickSetClockSource\000"
 5503      73546963 
 5503      6B536574 
 5503      436C6F63 
 5503      6B536F75 
 5504              	.LASF54:
 5505 0321 4379496E 		.ascii	"CyIntSetVector\000"
 5505      74536574 
 5505      56656374 
 5505      6F7200
 5506              	.LASF116:
 5507 0330 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\CyLib.c\000"
 5507      6E657261 
 5507      7465645F 
 5507      536F7572 
 5507      63655C50 
 5508              	.LASF57:
 5509 0351 7072696F 		.ascii	"priority\000"
 5509      72697479 
 5509      00
 5510              	.LASF69:
 5511 035a 43795379 		.ascii	"CySysClkWriteImoFreq\000"
 5511      73436C6B 
 5511      57726974 
 5511      65496D6F 
 5511      46726571 
 5512              	.LASF99:
 5513 036f 43795379 		.ascii	"CySysSetFlashAccessArbPriority\000"
 5513      73536574 
 5513      466C6173 
 5513      68416363 
 5513      65737341 
 5514              	.LASF49:
 5515 038e 4379496E 		.ascii	"CyIntSetSysVector\000"
 5515      74536574 
 5515      53797356 
 5515      6563746F 
 5515      7200
 5516              	.LASF21:
 5517 03a0 43795379 		.ascii	"CySysClkImoDisableWcoLock\000"
 5517      73436C6B 
 5517      496D6F44 
 5517      69736162 
 5517      6C655763 
 5518              	.LASF16:
 5519 03ba 72656733 		.ascii	"reg32\000"
 5519      3200
 5520              	.LASF117:
 5521 03c0 443A5C70 		.ascii	"D:\\projects\\ArloBot\\arlobot_psoc\\arlobot_base\\"
 5521      726F6A65 
 5521      6374735C 
 5521      41726C6F 
 5521      426F745C 
 5522 03ee 626F6172 		.ascii	"board1.cydsn\000"
 5522      64312E63 
 5522      7964736E 
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccBBFZQS.s 			page 160


 5522      00
 5523              	.LASF90:
 5524 03fb 43795379 		.ascii	"CySysTickStart\000"
 5524      73546963 
 5524      6B537461 
 5524      727400
 5525              	.LASF37:
 5526 040a 72657475 		.ascii	"returnStatus\000"
 5526      726E5374 
 5526      61747573 
 5526      00
 5527              	.LASF98:
 5528 0417 736F7572 		.ascii	"source\000"
 5528      636500
 5529              	.LASF18:
 5530 041e 73697A65 		.ascii	"sizetype\000"
 5530      74797065 
 5530      00
 5531              	.LASF104:
 5532 0427 43795379 		.ascii	"CySysTickInitVar\000"
 5532      73546963 
 5532      6B496E69 
 5532      74566172 
 5532      00
 5533              	.LASF101:
 5534 0438 43795379 		.ascii	"CySysSetPeripheralAccessArbPriority\000"
 5534      73536574 
 5534      50657269 
 5534      70686572 
 5534      616C4163 
 5535              	.LASF47:
 5536 045c 4379496E 		.ascii	"CyIntClearPending\000"
 5536      74436C65 
 5536      61725065 
 5536      6E64696E 
 5536      6700
 5537              	.LASF50:
 5538 046e 61646472 		.ascii	"address\000"
 5538      65737300 
 5539              	.LASF26:
 5540 0476 73797363 		.ascii	"sysclkSource\000"
 5540      6C6B536F 
 5540      75726365 
 5540      00
 5541              	.LASF92:
 5542 0483 66756E63 		.ascii	"function\000"
 5542      74696F6E 
 5542      00
 5543              	.LASF109:
 5544 048c 6379496D 		.ascii	"cyImoFreqMhz2Reg\000"
 5544      6F467265 
 5544      714D687A 
 5544      32526567 
 5544      00
 5545              	.LASF84:
 5546 049d 43795379 		.ascii	"CySysTickGetValue\000"
 5546      73546963 
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccBBFZQS.s 			page 161


 5546      6B476574 
 5546      56616C75 
 5546      6500
 5547              	.LASF115:
 5548 04af 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 5548      4320342E 
 5548      392E3320 
 5548      32303135 
 5548      30333033 
 5549 04e2 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 5549      20726576 
 5549      6973696F 
 5549      6E203232 
 5549      31323230 
 5550 0515 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 5550      66756E63 
 5550      74696F6E 
 5550      2D736563 
 5550      74696F6E 
 5551              	.LASF105:
 5552 053d 63796465 		.ascii	"cydelayFreqHz\000"
 5552      6C617946 
 5552      72657148 
 5552      7A00
 5553              	.LASF56:
 5554 054b 4379496E 		.ascii	"CyIntSetPriority\000"
 5554      74536574 
 5554      5072696F 
 5554      72697479 
 5554      00
 5555              	.LASF12:
 5556 055c 666C6F61 		.ascii	"float\000"
 5556      7400
 5557              	.LASF111:
 5558 0562 43794578 		.ascii	"CyExitCriticalSection\000"
 5558      69744372 
 5558      69746963 
 5558      616C5365 
 5558      6374696F 
 5559              	.LASF75:
 5560 0578 43795379 		.ascii	"CySysLvdEnable\000"
 5560      734C7664 
 5560      456E6162 
 5560      6C6500
 5561              	.LASF19:
 5562 0587 63795379 		.ascii	"cySysTickCallback\000"
 5562      73546963 
 5562      6B43616C 
 5562      6C626163 
 5562      6B00
 5563              	.LASF55:
 5564 0599 4379496E 		.ascii	"CyIntGetVector\000"
 5564      74476574 
 5564      56656374 
 5564      6F7200
 5565              	.LASF63:
 5566 05a8 6D696C6C 		.ascii	"milliseconds\000"
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccBBFZQS.s 			page 162


 5566      69736563 
 5566      6F6E6473 
 5566      00
 5567              	.LASF112:
 5568 05b5 43794465 		.ascii	"CyDelayCycles\000"
 5568      6C617943 
 5568      79636C65 
 5568      7300
 5569              	.LASF15:
 5570 05c3 72656738 		.ascii	"reg8\000"
 5570      00
 5571              	.LASF76:
 5572 05c8 74687265 		.ascii	"threshold\000"
 5572      73686F6C 
 5572      6400
 5573              	.LASF48:
 5574 05d2 43794861 		.ascii	"CyHalt\000"
 5574      6C7400
 5575              	.LASF97:
 5576 05d9 43795379 		.ascii	"CySysSetRamAccessArbPriority\000"
 5576      73536574 
 5576      52616D41 
 5576      63636573 
 5576      73417262 
 5577              	.LASF1:
 5578 05f6 756E7369 		.ascii	"unsigned char\000"
 5578      676E6564 
 5578      20636861 
 5578      7200
 5579              	.LASF2:
 5580 0604 73686F72 		.ascii	"short int\000"
 5580      7420696E 
 5580      7400
 5581              	.LASF42:
 5582 060e 4379496E 		.ascii	"CyIntEnable\000"
 5582      74456E61 
 5582      626C6500 
 5583              	.LASF53:
 5584 061a 4379496E 		.ascii	"CyIntGetSysVector\000"
 5584      74476574 
 5584      53797356 
 5584      6563746F 
 5584      7200
 5585              	.LASF28:
 5586 062c 636C6B53 		.ascii	"clkSelect\000"
 5586      656C6563 
 5586      7400
 5587              	.LASF36:
 5588 0636 72656173 		.ascii	"reason\000"
 5588      6F6E00
 5589              	.LASF14:
 5590 063d 63686172 		.ascii	"char\000"
 5590      00
 5591              	.LASF110:
 5592 0642 6379496D 		.ascii	"cyImoFreqMhz2DpllOffset\000"
 5592      6F467265 
 5592      714D687A 
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccBBFZQS.s 			page 163


 5592      3244706C 
 5592      6C4F6666 
 5593              	.LASF17:
 5594 065a 63796973 		.ascii	"cyisraddress\000"
 5594      72616464 
 5594      72657373 
 5594      00
 5595              	.LASF80:
 5596 0667 43795379 		.ascii	"CySysTickEnable\000"
 5596      73546963 
 5596      6B456E61 
 5596      626C6500 
 5597              	.LASF27:
 5598 0677 43795379 		.ascii	"CySysClkWriteSysclkDiv\000"
 5598      73436C6B 
 5598      57726974 
 5598      65537973 
 5598      636C6B44 
 5599              	.LASF91:
 5600 068e 43795379 		.ascii	"CySysTickSetCallback\000"
 5600      73546963 
 5600      6B536574 
 5600      43616C6C 
 5600      6261636B 
 5601              	.LASF103:
 5602 06a3 43795379 		.ascii	"CySysTickCallbacks\000"
 5602      73546963 
 5602      6B43616C 
 5602      6C626163 
 5602      6B7300
 5603              	.LASF96:
 5604 06b6 756E6971 		.ascii	"uniqueId\000"
 5604      75654964 
 5604      00
 5605              	.LASF68:
 5606 06bf 666C6173 		.ascii	"flashCtlReg\000"
 5606      6843746C 
 5606      52656700 
 5607              	.LASF62:
 5608 06cb 43794465 		.ascii	"CyDelay\000"
 5608      6C617900 
 5609              	.LASF81:
 5610 06d3 43795379 		.ascii	"CySysTickDisableInterrupt\000"
 5610      73546963 
 5610      6B446973 
 5610      61626C65 
 5610      496E7465 
 5611              	.LASF30:
 5612 06ed 43795379 		.ascii	"CySysLvdDisable\000"
 5612      734C7664 
 5612      44697361 
 5612      626C6500 
 5613              	.LASF107:
 5614 06fd 63796465 		.ascii	"cydelayFreqMhz\000"
 5614      6C617946 
 5614      7265714D 
 5614      687A00
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccBBFZQS.s 			page 164


 5615              	.LASF114:
 5616 070c 43795379 		.ascii	"CySysClkWcoEnabled\000"
 5616      73436C6B 
 5616      57636F45 
 5616      6E61626C 
 5616      656400
 5617              	.LASF100:
 5618 071f 43795379 		.ascii	"CySysSetDmacAccessArbPriority\000"
 5618      73536574 
 5618      446D6163 
 5618      41636365 
 5618      73734172 
 5619              	.LASF78:
 5620 073d 43795379 		.ascii	"CySysTickStop\000"
 5620      73546963 
 5620      6B53746F 
 5620      7000
 5621              	.LASF29:
 5622 074b 64697669 		.ascii	"divider\000"
 5622      64657200 
 5623              	.LASF20:
 5624 0753 43795379 		.ascii	"CySysClkImoStart\000"
 5624      73436C6B 
 5624      496D6F53 
 5624      74617274 
 5624      00
 5625              	.LASF119:
 5626 0764 43795379 		.ascii	"CySysFlashSetWaitCycles\000"
 5626      73466C61 
 5626      73685365 
 5626      74576169 
 5626      74437963 
 5627              	.LASF74:
 5628 077c 6D696372 		.ascii	"microseconds\000"
 5628      6F736563 
 5628      6F6E6473 
 5628      00
 5629              	.LASF25:
 5630 0789 746D7052 		.ascii	"tmpReg\000"
 5630      656700
 5631              	.LASF82:
 5632 0790 43795379 		.ascii	"CySysTickSetReload\000"
 5632      73546963 
 5632      6B536574 
 5632      52656C6F 
 5632      616400
 5633              	.LASF118:
 5634 07a3 43795379 		.ascii	"CySysTickServiceCallbacks\000"
 5634      73546963 
 5634      6B536572 
 5634      76696365 
 5634      43616C6C 
 5635              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
